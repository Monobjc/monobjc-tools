<?xml version="1.0" encoding="utf-8"?>
<Entities>
  <!--
  System Frameworks
  -->
  <Framework name="AddressBook" usings="Foundation,AppKit" assembly="Monobjc.AddressBook">
    <Types>
      <Type name="AddressBookFramework.Constants">
        <Patch>Enumerations[_ABPropertyType].Name=ABPropertyType</Patch>
        <Patch>Enumerations[ABPropertyType].BaseType=CFIndex</Patch>
        <Patch>Enumerations[Error_Constants].Name=ABErrorCodes</Patch>
        <Patch>Enumerations[ABErrorCodes].BaseType=int</Patch>
        <Replace type="Html">
          <Source><![CDATA[<dd><p><p class=]]></Source>
          <With><![CDATA[<dd><p class=]]></With>
        </Replace>
        <Replace type="Html">
          <Source><![CDATA[<a href="#//apple_ref/doc/c_ref/kABMultiDateComponentsProperty">kABMultiDateComponentsProperty</a>]]></Source>
          <With><![CDATA[<a href="#//apple_ref/doc/c_ref/kABMultiDateComponentsProperty">,kABMultiDateComponentsProperty</a>]]></With>
        </Replace>
        <Replace type="Generated">
          <Source><![CDATA[kABMultiValueMask]]></Source>
          <With><![CDATA[0x100]]></With>
        </Replace>
      </Type>
      <Type name="AddressBookFramework.Functions">
      </Type>
    </Types>
    <Classes>
      <Class name="ABAddressBook">
      </Class>
      <Class name="ABGroup">
      </Class>
      <Class name="ABMultiValue">
      </Class>
      <Class name="ABMutableMultiValue">
      </Class>
      <Class name="ABPeoplePickerView">
        <Patch>Enumerations[ABPeoplePickerSelectionBehavior].BaseType=int</Patch>
        <Patch>Properties[AccessoryView].MinAvailability=Mac OS X v10.5</Patch>
        <Patch>Properties[AllowsGroupSelection].MinAvailability=Mac OS X v10.5</Patch>
        <Patch>Properties[AllowsMultipleSelection].MinAvailability=Mac OS X v10.5</Patch>
        <Patch>Properties[AutosaveName].MinAvailability=Mac OS X v10.5</Patch>
        <Patch>Properties[DisplayedProperty].MinAvailability=Mac OS X v10.5</Patch>
        <Patch>Properties[GroupDoubleAction].MinAvailability=Mac OS X v10.5</Patch>
        <Patch>Properties[NameDoubleAction].MinAvailability=Mac OS X v10.5</Patch>
        <Patch>Properties[SelectedGroups].MinAvailability=Mac OS X v10.5</Patch>
        <Patch>Properties[SelectedRecords].MinAvailability=Mac OS X v10.5</Patch>
        <Patch>Properties[ValueSelectionBehavior].MinAvailability=Mac OS X v10.5</Patch>
      </Class>
      <Class name="ABPerson">
      </Class>
      <Class name="ABPersonView">
      </Class>
      <Class name="ABRecord">
      </Class>
      <Class name="ABSearchElement">
      </Class>
    </Classes>
    <Protocols>
      <Protocol name="ABActionDelegate">
      </Protocol>
      <Protocol name="ABImageClient">
      </Protocol>
    </Protocols>
  </Framework>
  <Framework name="ApplicationServices" usings="Foundation" assembly="Monobjc.Foundation">
    <Types>
      <Type name="CGAffineTransform">
        <Replace type="Generated">
          <Source><![CDATA[public static partial class CGAffineTransform]]></Source>
          <With><![CDATA[public partial struct CGAffineTransform]]></With>
        </Replace>
      </Type>
      <Type name="CGBitmapContext"></Type>
      <Type name="CGColor">
        <Patch>Functions[CGColorCreate].Parameters[components[]].Name=components</Patch>
        <Patch>Functions[CGColorCreate].Parameters[components].Type=IntPtr</Patch>
        <Patch>Functions[CGColorCreateWithPattern].Parameters[components[]].Name=components</Patch>
        <Patch>Functions[CGColorCreateWithPattern].Parameters[components].Type=IntPtr</Patch>
        <Patch>Functions[CGColorGetComponents].ReturnType=IntPtr</Patch>
        <Patch>Functions[CGColorGetTypeID].Generate=false</Patch>
      </Type>
      <Type name="CGColorSpace">
        <Patch>Functions[CGColorSpaceCreateCalibratedGray].Parameters[whitePoint[3]].Name=whitePoint</Patch>
        <Patch>Functions[CGColorSpaceCreateCalibratedGray].Parameters[whitePoint].Type=IntPtr</Patch>
        <Patch>Functions[CGColorSpaceCreateCalibratedGray].Parameters[blackPoint[3]].Name=blackPoint</Patch>
        <Patch>Functions[CGColorSpaceCreateCalibratedGray].Parameters[blackPoint].Type=IntPtr</Patch>
        <Patch>Functions[CGColorSpaceCreateCalibratedRGB].Parameters[whitePoint[3]].Name=whitePoint</Patch>
        <Patch>Functions[CGColorSpaceCreateCalibratedRGB].Parameters[whitePoint].Type=IntPtr</Patch>
        <Patch>Functions[CGColorSpaceCreateCalibratedRGB].Parameters[blackPoint[3]].Name=blackPoint</Patch>
        <Patch>Functions[CGColorSpaceCreateCalibratedRGB].Parameters[blackPoint].Type=IntPtr</Patch>
        <Patch>Functions[CGColorSpaceCreateCalibratedRGB].Parameters[gamma[3]].Name=gamma</Patch>
        <Patch>Functions[CGColorSpaceCreateCalibratedRGB].Parameters[gamma].Type=IntPtr</Patch>
        <Patch>Functions[CGColorSpaceCreateCalibratedRGB].Parameters[matrix[9]].Name=matrix</Patch>
        <Patch>Functions[CGColorSpaceCreateCalibratedRGB].Parameters[matrix].Type=IntPtr</Patch>
        <Patch>Functions[CGColorSpaceCreateDeviceCMYK].Parameters[d].Generate=false</Patch>
        <Patch>Functions[CGColorSpaceCreateDeviceGray].Parameters[d].Generate=false</Patch>
        <Patch>Functions[CGColorSpaceCreateDeviceRGB].Parameters[d].Generate=false</Patch>
        <Patch>Functions[CGColorSpaceCreateICCBased].Parameters[range].Type=IntPtr</Patch>
        <Patch>Functions[CGColorSpaceCreateIndexed].Parameters[char].Name=colorTable</Patch>
        <Patch>Functions[CGColorSpaceCreateIndexed].Parameters[colorTable].Type=String</Patch>
        <Patch>Functions[CGColorSpaceCreateLab].Parameters[whitePoint[3]].Name=whitePoint</Patch>
        <Patch>Functions[CGColorSpaceCreateLab].Parameters[whitePoint].Type=IntPtr</Patch>
        <Patch>Functions[CGColorSpaceCreateLab].Parameters[blackPoint[3]].Name=blackPoint</Patch>
        <Patch>Functions[CGColorSpaceCreateLab].Parameters[blackPoint].Type=IntPtr</Patch>
        <Patch>Functions[CGColorSpaceCreateLab].Parameters[range[4]].Name=range</Patch>
        <Patch>Functions[CGColorSpaceCreateLab].Parameters[range].Type=IntPtr</Patch>
        <Patch>Functions[CGColorSpaceGetBaseColorSpace].ReturnType=IntPtr</Patch>
        <Patch>Functions[CGColorSpaceGetColorTable].Parameters[table].Type=IntPtr</Patch>
        <Patch>Functions[CGColorSpaceGetTypeID].Generate=false</Patch>
        <Patch>Enumerations[CGColorRenderingIntent].BaseType=int</Patch>
      </Type>
      <Type name="CGContext">
        <Patch>Functions[CGContextAddLines].Parameters[points[]].Name=points</Patch>
        <Patch>Functions[CGContextAddLines].Parameters[points].Type=IntPtr</Patch>
        <Patch>Functions[CGContextAddRects].Parameters[rects[]].Name=rects</Patch>
        <Patch>Functions[CGContextAddRects].Parameters[rects].Type=IntPtr</Patch>
        <Patch>Functions[CGContextBeginPage].Parameters[mediaBox].Type=CGRect</Patch>
        <Patch>Functions[CGContextBeginPage].Parameters[mediaBox].IsOut=true</Patch>
        <Patch>Functions[CGContextClipToRects].Parameters[rects[]].Name=rects</Patch>
        <Patch>Functions[CGContextClipToRects].Parameters[rects].Type=IntPtr</Patch>
        <Patch>Functions[CGContextFillRects].Parameters[rects[]].Name=rects</Patch>
        <Patch>Functions[CGContextFillRects].Parameters[rects].Type=IntPtr</Patch>
        <Patch>Functions[CGContextGetTypeID].Generate=false</Patch>
        <Patch>Functions[CGContextSelectFont].Parameters[name].Type=String</Patch>
        <Patch>Functions[CGContextSetFillColor].Parameters[components[]].Name=components</Patch>
        <Patch>Functions[CGContextSetFillColor].Parameters[components].Type=IntPtr</Patch>
        <Patch>Functions[CGContextSetFillPattern].Parameters[components[]].Name=components</Patch>
        <Patch>Functions[CGContextSetFillPattern].Parameters[components].Type=IntPtr</Patch>
        <Patch>Functions[CGContextSetLineDash].Parameters[lengths[]].Name=lengths</Patch>
        <Patch>Functions[CGContextSetLineDash].Parameters[lengths].Type=IntPtr</Patch>
        <Patch>Functions[CGContextSetStrokeColor].Parameters[components[]].Name=components</Patch>
        <Patch>Functions[CGContextSetStrokeColor].Parameters[components].Type=IntPtr</Patch>
        <Patch>Functions[CGContextSetStrokePattern].Parameters[components[]].Name=components</Patch>
        <Patch>Functions[CGContextSetStrokePattern].Parameters[components].Type=IntPtr</Patch>
        <Patch>Functions[CGContextShowGlyphs].Parameters[g[]].Name=g</Patch>
        <Patch>Functions[CGContextShowGlyphs].Parameters[g].Type=IntPtr</Patch>
        <Patch>Functions[CGContextShowGlyphsAtPoint].Parameters[glyphs[]].Name=glyphs</Patch>
        <Patch>Functions[CGContextShowGlyphsAtPoint].Parameters[glyphs].Type=IntPtr</Patch>
        <Patch>Functions[CGContextShowGlyphsAtPositions].Parameters[glyphs[]].Name=glyphs</Patch>
        <Patch>Functions[CGContextShowGlyphsAtPositions].Parameters[glyphs].Type=IntPtr</Patch>
        <Patch>Functions[CGContextShowGlyphsAtPositions].Parameters[positions[]].Name=positions</Patch>
        <Patch>Functions[CGContextShowGlyphsAtPositions].Parameters[positions].Type=IntPtr</Patch>
        <Patch>Functions[CGContextShowGlyphsWithAdvances].Parameters[glyphs[]].Name=glyphs</Patch>
        <Patch>Functions[CGContextShowGlyphsWithAdvances].Parameters[glyphs].Type=IntPtr</Patch>
        <Patch>Functions[CGContextShowGlyphsWithAdvances].Parameters[advances[]].Name=advances</Patch>
        <Patch>Functions[CGContextShowGlyphsWithAdvances].Parameters[advances].Type=IntPtr</Patch>
        <Patch>Functions[CGContextShowText].Parameters[@string].Type=String</Patch>
        <Patch>Functions[CGContextShowTextAtPoint].Parameters[@string].Type=String</Patch>
        <Patch>Functions[CGContextStrokeLineSegments].Parameters[points[]].Name=points</Patch>
        <Patch>Functions[CGContextStrokeLineSegments].Parameters[points].Type=IntPtr</Patch>
        <Patch>Enumerations[CGBlendMode].BaseType=int</Patch>
        <Patch>Enumerations[CGInterpolationQuality].BaseType=int</Patch>
        <Patch>Enumerations[CGLineCap].BaseType=int</Patch>
        <Patch>Enumerations[CGLineJoin].BaseType=int</Patch>
        <Patch>Enumerations[CGTextDrawingMode].BaseType=int</Patch>
        <Patch>Enumerations[CGTextEncoding].BaseType=int</Patch>
      </Type>
      <Type name="CGDataConsumer">
        <Patch>Functions[CGDataConsumerCreate].Parameters[callbacks].Type=IntPtr</Patch>
        <Patch>Functions[CGDataConsumerGetTypeID].Generate=false</Patch>
      </Type>
      <Type name="CGDataProvider">
        <Patch>Functions[CGDataProviderCreateDirect].Parameters[size].Type=IntPtr</Patch>
        <Patch>Functions[CGDataProviderCreateDirect].Parameters[callbacks].Type=IntPtr</Patch>
        <Patch>Functions[CGDataProviderCreateSequential].Parameters[callbacks].Type=IntPtr</Patch>
        <Patch>Functions[CGDataProviderCreateWithFilename].Parameters[filename].Type=String</Patch>
        <Patch>Functions[CGDataProviderGetTypeID].Generate=false</Patch>
      </Type>
      <Type name="CGFont">
        <Patch>Enumerations[CGFontPostScriptFormat].BaseType=int</Patch>
        <Patch>Enumerations[Font_Table_Index_Values].Generate=false</Patch>
        <Patch>Enumerations[Obsolete_Font_Table_Index_Values].Generate=false</Patch>
        <Patch>Functions[CGFontCreatePostScriptEncoding].Parameters[encoding[256]].Name=encoding</Patch>
        <Patch>Functions[CGFontCreatePostScriptEncoding].Parameters[encoding].Type=IntPtr</Patch>
        <Patch>Functions[CGFontCreatePostScriptSubset].Parameters[glyphs[]].Name=glyphs</Patch>
        <Patch>Functions[CGFontCreatePostScriptSubset].Parameters[glyphs].Type=IntPtr</Patch>
        <Patch>Functions[CGFontCreatePostScriptSubset].Parameters[encoding[256]].Name=encoding</Patch>
        <Patch>Functions[CGFontCreatePostScriptSubset].Parameters[encoding].Type=IntPtr</Patch>
        <Patch>Functions[CGFontGetGlyphAdvances].Parameters[glyphs[]].Name=glyphs</Patch>
        <Patch>Functions[CGFontGetGlyphAdvances].Parameters[glyphs].Type=IntPtr</Patch>
        <Patch>Functions[CGFontGetGlyphAdvances].Parameters[advances[]].Name=advances</Patch>
        <Patch>Functions[CGFontGetGlyphAdvances].Parameters[advances].Type=IntPtr</Patch>
        <Patch>Functions[CGFontGetGlyphBBoxes].Parameters[glyphs[]].Name=glyphs</Patch>
        <Patch>Functions[CGFontGetGlyphBBoxes].Parameters[glyphs].Type=IntPtr</Patch>
        <Patch>Functions[CGFontGetGlyphBBoxes].Parameters[bboxes[]].Name=bboxes</Patch>
        <Patch>Functions[CGFontGetGlyphBBoxes].Parameters[bboxes].Type=IntPtr</Patch>
        <Patch>Functions[CGFontGetTypeID].Generate=false</Patch>
        <Replace type="Html">
          <Source><![CDATA[)<pre class=]]></Source>
          <With><![CDATA[)</p><pre class=]]></With>
        </Replace>
      </Type>
      <Type name="CGFunction">
        <Patch>Functions[CGFunctionCreate].Parameters[domain].Type=IntPtr</Patch>
        <Patch>Functions[CGFunctionCreate].Parameters[range].Type=IntPtr</Patch>
        <Patch>Functions[CGFunctionCreate].Parameters[callbacks].Type=IntPtr</Patch>
        <Patch>Functions[CGFunctionGetTypeID].Generate=false</Patch>
      </Type>
      <Type name="CGGeometry">
        <Patch>Functions[CGPointMakeWithDictionaryRepresentation].Parameters[point].Type=CGPoint</Patch>
        <Patch>Functions[CGPointMakeWithDictionaryRepresentation].Parameters[point].IsOut=true</Patch>
        <Patch>Functions[CGRectDivide].Parameters[slice].Type=CGRect</Patch>
        <Patch>Functions[CGRectDivide].Parameters[slice].IsOut=true</Patch>
        <Patch>Functions[CGRectDivide].Parameters[remainder].Type=CGRect</Patch>
        <Patch>Functions[CGRectDivide].Parameters[remainder].IsOut=true</Patch>
        <Patch>Functions[CGRectMakeWithDictionaryRepresentation].Parameters[rect].Type=CGRect</Patch>
        <Patch>Functions[CGRectMakeWithDictionaryRepresentation].Parameters[rect].IsOut=true</Patch>
        <Patch>Functions[CGSizeMakeWithDictionaryRepresentation].Parameters[size].Type=CGSize</Patch>
        <Patch>Functions[CGSizeMakeWithDictionaryRepresentation].Parameters[size].IsOut=true</Patch>
        <Patch>Enumerations[CGRectEdge].Generate=false</Patch>
      </Type>
      <Type name="CGGLContext"></Type>
      <Type name="CGGradient">
        <Patch>Functions[CGGradientCreateWithColorComponents].Parameters[components[]].Name=components</Patch>
        <Patch>Functions[CGGradientCreateWithColorComponents].Parameters[components].Type=IntPtr</Patch>
        <Patch>Functions[CGGradientCreateWithColorComponents].Parameters[locations[]].Name=locations</Patch>
        <Patch>Functions[CGGradientCreateWithColorComponents].Parameters[locations].Type=IntPtr</Patch>
        <Patch>Functions[CGGradientCreateWithColors].Parameters[locations[]].Name=locations</Patch>
        <Patch>Functions[CGGradientCreateWithColors].Parameters[locations].Type=IntPtr</Patch>
        <Patch>Functions[CGGradientGetTypeID].Generate=false</Patch>
        <Patch>Enumerations[CGGradientDrawingOptions].BaseType=int</Patch>
      </Type>
      <Type name="CGImage">
        <Patch>Functions[CGImageCreate].Parameters[decode[]].Name=decode</Patch>
        <Patch>Functions[CGImageCreate].Parameters[decode].Type=IntPtr</Patch>
        <Patch>Functions[CGImageCreateWithJPEGDataProvider].Parameters[decode[]].Name=decode</Patch>
        <Patch>Functions[CGImageCreateWithJPEGDataProvider].Parameters[decode].Type=IntPtr</Patch>
        <Patch>Functions[CGImageCreateWithMaskingColors].Parameters[components[]].Name=components</Patch>
        <Patch>Functions[CGImageCreateWithMaskingColors].Parameters[components].Type=IntPtr</Patch>
        <Patch>Functions[CGImageCreateWithPNGDataProvider].Parameters[decode[]].Name=decode</Patch>
        <Patch>Functions[CGImageCreateWithPNGDataProvider].Parameters[decode].Type=IntPtr</Patch>
        <Patch>Functions[CGImageGetDecode].ReturnType=IntPtr</Patch>
        <Patch>Functions[CGImageGetTypeID].Generate=false</Patch>
        <Patch>Functions[CGImageMaskCreate].Parameters[decode[]].Name=decode</Patch>
        <Patch>Functions[CGImageMaskCreate].Parameters[decode].Type=IntPtr</Patch>
        <Patch>Enumerations[CGImageAlphaInfo].BaseType=int</Patch>
      </Type>
      <Type name="CGImageDestination">
        <Patch>Functions[CGImageDestinationCopyTypeIdentifiers].Parameters[d].Generate=false</Patch>
        <Patch>Functions[CGImageDestinationGetTypeID].Generate=false</Patch>
      </Type>
      <Type name="CGImageProperties">
      </Type>
      <Type name="CGImageSource">
        <Patch>Functions[CGImageSourceCopyTypeIdentifiers].Parameters[d].Generate=false</Patch>
        <Patch>Functions[CGImageSourceGetTypeID].Generate=false</Patch>
        <Patch>Enumerations[CGImageSourceStatus].BaseType=int</Patch>
      </Type>
      <Type name="CGGeometry">
      </Type>
      <Type name="CGLayer">
        <Patch>Functions[CGLayerGetTypeID].Generate=false</Patch>
      </Type>
      <Type name="CGPath">
        <Patch>Functions[CGPathAddArc].Parameters[m].Type=IntPtr</Patch>
        <Patch>Functions[CGPathAddArcToPoint].Parameters[m].Type=IntPtr</Patch>
        <Patch>Functions[CGPathAddCurveToPoint].Parameters[m].Type=IntPtr</Patch>
        <Patch>Functions[CGPathAddEllipseInRect].Parameters[m].Type=IntPtr</Patch>
        <Patch>Functions[CGPathAddLines].Parameters[m].Type=IntPtr</Patch>
        <Patch>Functions[CGPathAddLines].Parameters[points[]].Name=points</Patch>
        <Patch>Functions[CGPathAddLines].Parameters[points].Type=IntPtr</Patch>
        <Patch>Functions[CGPathAddLineToPoint].Parameters[m].Type=IntPtr</Patch>
        <Patch>Functions[CGPathAddPath].Parameters[m].Type=IntPtr</Patch>
        <Patch>Functions[CGPathAddQuadCurveToPoint].Parameters[m].Type=IntPtr</Patch>
        <Patch>Functions[CGPathAddRect].Parameters[m].Type=IntPtr</Patch>
        <Patch>Functions[CGPathAddRects].Parameters[m].Type=IntPtr</Patch>
        <Patch>Functions[CGPathAddRects].Parameters[rects[]].Name=rects</Patch>
        <Patch>Functions[CGPathAddRects].Parameters[rects].Type=IntPtr</Patch>
        <Patch>Functions[CGPathAddRelativeArc].Parameters[matrix].Type=CGAffineTransform</Patch>
        <Patch>Functions[CGPathAddRelativeArc].Parameters[matrix].IsByRef=true</Patch>
        <Patch>Functions[CGPathApply].Parameters[function].Type=IntPtr</Patch>
        <Patch>Functions[CGPathContainsPoint].Parameters[m].Type=IntPtr</Patch>
        <Patch>Functions[CGPathCreateCopyByDashingPath].Parameters[transform].Type=CGAffineTransform</Patch>
        <Patch>Functions[CGPathCreateCopyByDashingPath].Parameters[transform].IsByRef=true</Patch>
        <Patch>Functions[CGPathCreateCopyByDashingPath].Parameters[lengths].Type=IntPtr</Patch>
        <Patch>Functions[CGPathCreateCopyByStrokingPath].Parameters[transform].Type=CGAffineTransform</Patch>
        <Patch>Functions[CGPathCreateCopyByStrokingPath].Parameters[transform].IsByRef=true</Patch>
        <Patch>Functions[CGPathCreateCopyByTransformingPath].Parameters[transform].Type=CGAffineTransform</Patch>
        <Patch>Functions[CGPathCreateCopyByTransformingPath].Parameters[transform].IsByRef=true</Patch>
        <Patch>Functions[CGPathCreateMutable].Parameters[d].Generate=false</Patch>
        <Patch>Functions[CGPathCreateMutableCopyByTransformingPath].Parameters[transform].Type=CGAffineTransform</Patch>
        <Patch>Functions[CGPathCreateMutableCopyByTransformingPath].Parameters[transform].IsByRef=true</Patch>
        <Patch>Functions[CGPathCreateWithEllipseInRect].Parameters[transform].Type=CGAffineTransform</Patch>
        <Patch>Functions[CGPathCreateWithEllipseInRect].Parameters[transform].IsByRef=true</Patch>
        <Patch>Functions[CGPathCreateWithRect].Parameters[transform].Type=CGAffineTransform</Patch>
        <Patch>Functions[CGPathCreateWithRect].Parameters[transform].IsByRef=true</Patch>
        <Patch>Functions[CGPathIsRect].Parameters[rect].Type=IntPtr</Patch>
        <Patch>Functions[CGPathGetTypeID].Generate=false</Patch>
        <Patch>Functions[CGPathMoveToPoint].Parameters[m].Type=IntPtr</Patch>
				
        <Patch>Enumerations[CGPathDrawingMode].BaseType=int</Patch>
        <Patch>Enumerations[CGPathElementType].BaseType=int</Patch>
        <Patch>Enumerations[CGLineCap].BaseType=int</Patch>
        <Patch>Enumerations[CGLineJoin].BaseType=int</Patch>
      </Type>
      <Type name="CGPattern">
        <Patch>Functions[CGPatternCreate].Parameters[callbacks].Type=IntPtr</Patch>
        <Patch>Functions[CGPatternGetTypeID].Generate=false</Patch>
        <Patch>Enumerations[CGPatternTiling].BaseType=int</Patch>
      </Type>
      <Type name="CGPDFArray">
        <Patch>Functions[CGPDFArrayGetArray].Parameters[value].Type=IntPtr</Patch>
        <Patch>Functions[CGPDFArrayGetBoolean].Parameters[value].Type=IntPtr</Patch>
        <Patch>Functions[CGPDFArrayGetDictionary].Parameters[value].Type=IntPtr</Patch>
        <Patch>Functions[CGPDFArrayGetInteger].Parameters[value].Type=IntPtr</Patch>
        <Patch>Functions[CGPDFArrayGetName].Parameters[value].Type=System.Text.StringBuilder</Patch>
        <Patch>Functions[CGPDFArrayGetNumber].Parameters[value].Type=IntPtr</Patch>
        <Patch>Functions[CGPDFArrayGetObject].Parameters[value].Type=IntPtr</Patch>
        <Patch>Functions[CGPDFArrayGetStream].Parameters[value].Type=IntPtr</Patch>
        <Patch>Functions[CGPDFArrayGetString].Parameters[value].Type=IntPtr</Patch>
      </Type>
      <Type name="CGPDFContentStream">
        <Patch>Functions[CGPDFContentStreamGetResource].Parameters[category].Type=String</Patch>
        <Patch>Functions[CGPDFContentStreamGetResource].Parameters[name].Type=String</Patch>
      </Type>
      <Type name="CGPDFContext">
        <Patch>Functions[CGPDFContextCreate].Parameters[mediaBox].Type=IntPtr</Patch>
        <Patch>Functions[CGPDFContextCreateWithURL].Parameters[mediaBox].Type=IntPtr</Patch>
      </Type>
      <Type name="CGPDFDictionary">
        <Patch>Functions[CGPDFDictionaryApplyFunction].Parameters[function].Type=IntPtr</Patch>
        <Patch>Functions[CGPDFDictionaryGetArray].Parameters[key].Type=String</Patch>
        <Patch>Functions[CGPDFDictionaryGetArray].Parameters[value].Type=IntPtr</Patch>
        <Patch>Functions[CGPDFDictionaryGetBoolean].Parameters[key].Type=String</Patch>
        <Patch>Functions[CGPDFDictionaryGetBoolean].Parameters[value].Type=IntPtr</Patch>
        <Patch>Functions[CGPDFDictionaryGetDictionary].Parameters[key].Type=String</Patch>
        <Patch>Functions[CGPDFDictionaryGetDictionary].Parameters[value].Type=IntPtr</Patch>
        <Patch>Functions[CGPDFDictionaryGetInteger].Parameters[key].Type=String</Patch>
        <Patch>Functions[CGPDFDictionaryGetInteger].Parameters[value].Type=IntPtr</Patch>
        <Patch>Functions[CGPDFDictionaryGetName].Parameters[key].Type=String</Patch>
        <Patch>Functions[CGPDFDictionaryGetName].Parameters[value].Type=IntPtr</Patch>
        <Patch>Functions[CGPDFDictionaryGetNumber].Parameters[key].Type=String</Patch>
        <Patch>Functions[CGPDFDictionaryGetNumber].Parameters[value].Type=IntPtr</Patch>
        <Patch>Functions[CGPDFDictionaryGetObject].Parameters[key].Type=String</Patch>
        <Patch>Functions[CGPDFDictionaryGetObject].Parameters[value].Type=IntPtr</Patch>
        <Patch>Functions[CGPDFDictionaryGetStream].Parameters[key].Type=String</Patch>
        <Patch>Functions[CGPDFDictionaryGetStream].Parameters[value].Type=IntPtr</Patch>
        <Patch>Functions[CGPDFDictionaryGetString].Parameters[key].Type=String</Patch>
        <Patch>Functions[CGPDFDictionaryGetString].Parameters[value].Type=IntPtr</Patch>
      </Type>
      <Type name="CGPDFDocument">
        <Patch>Functions[CGPDFDocumentGetVersion].Parameters[majorVersion].Type=int</Patch>
        <Patch>Functions[CGPDFDocumentGetVersion].Parameters[majorVersion].IsOut=true</Patch>
        <Patch>Functions[CGPDFDocumentGetVersion].Parameters[minorVersion].Type=int</Patch>
        <Patch>Functions[CGPDFDocumentGetVersion].Parameters[minorVersion].IsOut=true</Patch>
        <Patch>Functions[CGPDFDocumentUnlockWithPassword].Parameters[password].Type=String</Patch>
        <Patch>Functions[CGPDFDocumentGetTypeID].Generate=false</Patch>
      </Type>
      <Type name="CGPDFObject">
        <Patch>Enumerations[CGPDFObjectType].BaseType=int</Patch>
      </Type>
      <Type name="CGPDFOperatorTable">
        <Patch>Functions[CGPDFOperatorTableCreate].Parameters[d].Generate=false</Patch>
        <Patch>Functions[CGPDFOperatorTableSetCallback].Parameters[name].Type=String</Patch>
      </Type>
      <Type name="CGPDFPage">
        <Patch>Functions[CGPDFPageGetTypeID].Generate=false</Patch>
        <Patch>Enumerations[CGPDFBox].BaseType=int</Patch>
      </Type>
      <Type name="CGPDFScanner">
        <Patch>Functions[CGPDFScannerPopArray].Parameters[value].Type=IntPtr</Patch>
        <Patch>Functions[CGPDFScannerPopBoolean].Parameters[value].Type=IntPtr</Patch>
        <Patch>Functions[CGPDFScannerPopDictionary].Parameters[value].Type=IntPtr</Patch>
        <Patch>Functions[CGPDFScannerPopInteger].Parameters[value].Type=IntPtr</Patch>
        <Patch>Functions[CGPDFScannerPopName].Parameters[value].Type=IntPtr</Patch>
        <Patch>Functions[CGPDFScannerPopNumber].Parameters[value].Type=IntPtr</Patch>
        <Patch>Functions[CGPDFScannerPopObject].Parameters[value].Type=IntPtr</Patch>
        <Patch>Functions[CGPDFScannerPopStream].Parameters[value].Type=IntPtr</Patch>
        <Patch>Functions[CGPDFScannerPopString].Parameters[value].Type=IntPtr</Patch>
        <Patch>Functions[CGPDFScannerRetain].Generate=false</Patch>
      </Type>
      <Type name="CGPDFStream">
        <Patch>Functions[CGPDFStreamCopyData].Parameters[format].Type=IntPtr</Patch>
        <Patch>Enumerations[CGPDFDataFormat].BaseType=int</Patch>
      </Type>
      <Type name="CGPDFString">
        <Patch>Functions[CGPDFStringGetBytePtr].ReturnType=IntPtr</Patch>
      </Type>
      <Type name="CGPSConverter">
        <Patch>Functions[CGPSConverterCreate].Parameters[callbacks].Type=IntPtr</Patch>
        <Patch>Functions[CGPSConverterGetTypeID].Generate=false</Patch>
      </Type>
      <Type name="CGShading">
        <Patch>Functions[CGShadingGetTypeID].Generate=false</Patch>
      </Type>
      <Type name="CTFont">
        <Patch>Functions[CTFontCopyGraphicsFont].Parameters[attributes].Type=IntPtr</Patch>
        <Patch>Functions[CTFontCopyGraphicsFont].Parameters[attributes].IsOut=true</Patch>
        <Patch>Functions[CTFontCopyLocalizedName].Parameters[language].Type=NSString</Patch>
        <Patch>Functions[CTFontCopyLocalizedName].Parameters[language].IsOut=true</Patch>
        <Patch>Functions[CTFontCreateCopyWithAttributes].Parameters[matrix].Type=CGAffineTransform</Patch>
        <Patch>Functions[CTFontCreateCopyWithAttributes].Parameters[matrix].IsOut=true</Patch>
        <Patch>Functions[CTFontCreateCopyWithFamily].Parameters[matrix].Type=CGAffineTransform</Patch>
        <Patch>Functions[CTFontCreateCopyWithFamily].Parameters[matrix].IsOut=true</Patch>
        <Patch>Functions[CTFontCreateCopyWithSymbolicTraits].Parameters[matrix].Type=CGAffineTransform</Patch>
        <Patch>Functions[CTFontCreateCopyWithSymbolicTraits].Parameters[matrix].IsOut=true</Patch>
        <Patch>Functions[CTFontCreatePathForGlyph].Parameters[transform].Type=CGAffineTransform</Patch>
        <Patch>Functions[CTFontCreatePathForGlyph].Parameters[transform].IsOut=true</Patch>
        <Patch>Functions[CTFontCreateWithFontDescriptor].Parameters[matrix].Type=CGAffineTransform</Patch>
        <Patch>Functions[CTFontCreateWithFontDescriptor].Parameters[matrix].IsOut=true</Patch>
        <Patch>Functions[CTFontCreateWithFontDescriptorAndOptions].Parameters[matrix].Type=CGAffineTransform</Patch>
        <Patch>Functions[CTFontCreateWithFontDescriptorAndOptions].Parameters[matrix].IsOut=true</Patch>
        <Patch>Functions[CTFontCreateWithGraphicsFont].Parameters[matrix].Type=CGAffineTransform</Patch>
        <Patch>Functions[CTFontCreateWithGraphicsFont].Parameters[matrix].IsOut=true</Patch>
        <Patch>Functions[CTFontCreateWithName].Parameters[matrix].Type=CGAffineTransform</Patch>
        <Patch>Functions[CTFontCreateWithName].Parameters[matrix].IsOut=true</Patch>
        <Patch>Functions[CTFontCreateWithNameAndOptions].Parameters[matrix].Type=CGAffineTransform</Patch>
        <Patch>Functions[CTFontCreateWithNameAndOptions].Parameters[matrix].IsOut=true</Patch>
        <Patch>Functions[CTFontCreateWithPlatformFont].Parameters[matrix].Type=CGAffineTransform</Patch>
        <Patch>Functions[CTFontCreateWithPlatformFont].Parameters[matrix].IsOut=true</Patch>
        <Patch>Functions[CTFontCreateWithQuickdrawInstance].Generate=false</Patch>
        <Patch>Functions[CTFontDrawGlyphs].Parameters[glyphs[]].Name=glyphs</Patch>
        <Patch>Functions[CTFontDrawGlyphs].Parameters[glyphs].Type=IntPtr</Patch>
        <Patch>Functions[CTFontDrawGlyphs].Parameters[positions[]].Name=positions</Patch>
        <Patch>Functions[CTFontDrawGlyphs].Parameters[positions].Type=IntPtr</Patch>
        <Patch>Functions[CTFontGetAdvancesForGlyphs].Parameters[glyphs[]].Name=glyphs</Patch>
        <Patch>Functions[CTFontGetAdvancesForGlyphs].Parameters[glyphs].Type=IntPtr</Patch>
        <Patch>Functions[CTFontGetAdvancesForGlyphs].Parameters[advances[]].Name=advances</Patch>
        <Patch>Functions[CTFontGetAdvancesForGlyphs].Parameters[advances].Type=IntPtr</Patch>
        <Patch>Functions[CTFontGetBoundingRectsForGlyphs].Parameters[glyphs[]].Name=glyphs</Patch>
        <Patch>Functions[CTFontGetBoundingRectsForGlyphs].Parameters[glyphs].Type=IntPtr</Patch>
        <Patch>Functions[CTFontGetBoundingRectsForGlyphs].Parameters[boundingRects[]].Name=boundingRects</Patch>
        <Patch>Functions[CTFontGetBoundingRectsForGlyphs].Parameters[boundingRects].Type=IntPtr</Patch>
        <Patch>Functions[CTFontGetGlyphsForCharacters].Parameters[characters[]].Name=characters</Patch>
        <Patch>Functions[CTFontGetGlyphsForCharacters].Parameters[characters].Type=IntPtr</Patch>
        <Patch>Functions[CTFontGetGlyphsForCharacters].Parameters[glyphs[]].Name=glyphs</Patch>
        <Patch>Functions[CTFontGetGlyphsForCharacters].Parameters[glyphs].Type=IntPtr</Patch>
        <Patch>Functions[CTFontGetLigatureCaretPositions].Generate=false</Patch>
        <Patch>Functions[CTFontGetPlatformFont].Parameters[attributes].Type=IntPtr</Patch>
        <Patch>Functions[CTFontGetPlatformFont].Parameters[attributes].IsOut=true</Patch>
        <Patch>Functions[CTFontGetStringEncoding].ReturnType=NSStringEncoding</Patch>
        <Patch>Functions[CTFontGetTypeID].Generate=false</Patch>
        <Patch>Functions[CTFontGetVerticalTranslationsForGlyphs].Parameters[glyphs[]].Name=glyphs</Patch>
        <Patch>Functions[CTFontGetVerticalTranslationsForGlyphs].Parameters[glyphs].Type=IntPtr</Patch>
        <Patch>Functions[CTFontGetVerticalTranslationsForGlyphs].Parameters[translations[]].Name=translations</Patch>
        <Patch>Functions[CTFontGetVerticalTranslationsForGlyphs].Parameters[translations].Type=IntPtr</Patch>
        <Patch>Enumerations[CTFontUIFontType].Values[kCTFontNoFontType].Value=0xFFFFFFFF</Patch>
      </Type>
      <Type name="CTFontCollection">
        <Patch>Functions[CTFontCollectionGetTypeID].Generate=false</Patch>
      </Type>
      <Type name="CTFontDescriptor">
        <Patch>Functions[CTFontDescriptorCopyLocalizedAttribute].Parameters[language].Type=NSString</Patch>
        <Patch>Functions[CTFontDescriptorCopyLocalizedAttribute].Parameters[language].IsOut=true</Patch>
        <Patch>Functions[CTFontDescriptorGetTypeID].Generate=false</Patch>
        <Patch>Enumerations[Font_Class_Mask_Shift_Constants].Generate=false</Patch>
        <Patch><![CDATA[Enumerations[CTFontSymbolicTraits].Values[kCTFontClassMaskTrait].Value=15U << 28]]></Patch>
        <Patch><![CDATA[Enumerations[CTFontStylisticClass].Values[kCTFontSansSerifClass].Value=8U << 28]]></Patch>
        <Patch><![CDATA[Enumerations[CTFontStylisticClass].Values[kCTFontOrnamentalsClass].Value=9U << 28]]></Patch>
        <Patch><![CDATA[Enumerations[CTFontStylisticClass].Values[kCTFontScriptsClass].Value=10U << 28]]></Patch>
        <Patch><![CDATA[Enumerations[CTFontStylisticClass].Values[kCTFontSymbolicClass].Value=12U << 28]]></Patch>
        <Replace type="Generated">
          <Source><![CDATA[<< kCTFontClassMaskShift]]></Source>
          <With><![CDATA[<< 28]]></With>
        </Replace>
      </Type>
      <Type name="CTFontManager">
        <Patch>Functions[CTFontManagerCopyAvailableFontFamilyNames].Parameters[d].Generate=false</Patch>
        <Patch>Functions[CTFontManagerCopyAvailableFontURLs].Parameters[d].Generate=false</Patch>
        <Patch>Functions[CTFontManagerCopyAvailablePostScriptNames].Parameters[d].Generate=false</Patch>
        <Patch>Functions[CTFontManagerRegisterFontsForURL].Parameters[error].Type=NSError</Patch>
        <Patch>Functions[CTFontManagerRegisterFontsForURL].Parameters[error].IsOut=true</Patch>
        <Patch>Functions[CTFontManagerRegisterFontsForURLs].Parameters[errors].Type=NSArray</Patch>
        <Patch>Functions[CTFontManagerRegisterFontsForURLs].Parameters[errors].IsOut=true</Patch>
        <Patch>Functions[CTFontManagerUnregisterFontsForURL].Parameters[error].Type=NSError</Patch>
        <Patch>Functions[CTFontManagerUnregisterFontsForURL].Parameters[error].IsOut=true</Patch>
        <Patch>Functions[CTFontManagerUnregisterFontsForURLs].Parameters[errors].Type=NSArray</Patch>
        <Patch>Functions[CTFontManagerUnregisterFontsForURLs].Parameters[errors].IsOut=true</Patch>
        <Patch>Functions[CTFontManagerCreateFontRequestRunLoopSource].Generate=false</Patch>
        <Patch>Enumerations[Font_Registration_Errors].Generate=false</Patch>
        <Patch>Enumerations[CTFontManagerError].Generate=false</Patch>
        <Replace type="Xhtml">
          <Source><![CDATA[<h3 class="tight jump function">CTFontManagerIsSupportedFontFile</h3>]]></Source>
          <With><![CDATA[<h3 class="tight jump function">CTFontManagerIsSupportedFont</h3>]]></With>
        </Replace>
      </Type>
      <Type name="CTFrame">
        <Patch>Functions[CTFrameGetLineOrigins].Parameters[origins[]].Name=origins</Patch>
        <Patch>Functions[CTFrameGetLineOrigins].Parameters[origins].Type=IntPtr</Patch>
        <Patch>Functions[CTFrameGetTypeID].Generate=false</Patch>
        <Patch>Enumerations[CTFramePathFillRule](0).Generate=false</Patch>
    
      </Type>
      <Type name="CTFramesetter">
        <Patch>Functions[CTFramesetterGetTypeID].Generate=false</Patch>
        <Patch>Functions[CTFramesetterSuggestFrameSizeWithConstraints].Parameters[fitRange].Type=NSRange</Patch>
        <Patch>Functions[CTFramesetterSuggestFrameSizeWithConstraints].Parameters[fitRange].IsOut=true</Patch>
      </Type>
      <Type name="CTGlyphInfo">
        <Patch>Functions[CTGlyphInfoGetTypeID].Generate=false</Patch>
      </Type>
      <Type name="CTLine">
        <Patch>Functions[CTLineGetOffsetForStringIndex].Parameters[secondaryOffset].Type=CGFloat</Patch>
        <Patch>Functions[CTLineGetOffsetForStringIndex].Parameters[secondaryOffset].IsOut=true</Patch>
        <Patch>Functions[CTLineGetTypeID].Generate=false</Patch>
        <Patch>Functions[CTLineGetTypographicBounds].Parameters[ascent].Type=CGFloat</Patch>
        <Patch>Functions[CTLineGetTypographicBounds].Parameters[ascent].IsOut=true</Patch>
        <Patch>Functions[CTLineGetTypographicBounds].Parameters[descent].Type=CGFloat</Patch>
        <Patch>Functions[CTLineGetTypographicBounds].Parameters[descent].IsOut=true</Patch>
        <Patch>Functions[CTLineGetTypographicBounds].Parameters[leading].Type=CGFloat</Patch>
        <Patch>Functions[CTLineGetTypographicBounds].Parameters[leading].IsOut=true</Patch>
      </Type>
      <Type name="CTParagraphStyle">
        <Patch>Functions[CTParagraphStyleCreate].Parameters[settings].Type=CTParagraphStyleSetting</Patch>
        <Patch>Functions[CTParagraphStyleCreate].Parameters[settings].IsByRef=true</Patch>
        <Patch>Functions[CTParagraphStyleGetTypeID].Generate=false</Patch>
        <Patch>Enumerations[CTWritingDirection].BaseType=sbyte</Patch>
        <Replace type="Generated">
          <Source><![CDATA[settings = ObjectiveCRuntime.GetInstance<CTParagraphStyleSetting>(Marshal.ReadIntPtr(__local1));]]></Source>
          <With><![CDATA[settings = (CTParagraphStyleSetting) Marshal.PtrToStructure(__local1, typeof(CTParagraphStyleSetting));]]></With>
        </Replace>
      </Type>
      <Type name="CTRun">
        <Patch>Functions[CTRunGetAdvances].Parameters[buffer[]].Name=buffer</Patch>
        <Patch>Functions[CTRunGetAdvances].Parameters[buffer].Type=IntPtr</Patch>
        <Patch>Functions[CTRunGetAdvancesPtr].ReturnType=IntPtr</Patch>
        <Patch>Functions[CTRunGetGlyphs].Parameters[buffer[]].Name=buffer</Patch>
        <Patch>Functions[CTRunGetGlyphs].Parameters[buffer].Type=IntPtr</Patch>
        <Patch>Functions[CTRunGetGlyphsPtr].ReturnType=IntPtr</Patch>
        <Patch>Functions[CTRunGetPositions].Parameters[buffer[]].Name=buffer</Patch>
        <Patch>Functions[CTRunGetPositions].Parameters[buffer].Type=IntPtr</Patch>
        <Patch>Functions[CTRunGetPositionsPtr].ReturnType=IntPtr</Patch>
        <Patch>Functions[CTRunGetStringIndices].Parameters[buffer[]].Name=buffer</Patch>
        <Patch>Functions[CTRunGetStringIndices].Parameters[buffer].Type=IntPtr</Patch>
        <Patch>Functions[CTRunGetStringIndicesPtr].ReturnType=IntPtr</Patch>
        <Patch>Functions[CTRunGetTypeID].Generate=false</Patch>
        <Patch>Functions[CTRunGetTypographicBounds].Parameters[ascent].Type=CGFloat</Patch>
        <Patch>Functions[CTRunGetTypographicBounds].Parameters[ascent].IsOut=true</Patch>
        <Patch>Functions[CTRunGetTypographicBounds].Parameters[descent].Type=CGFloat</Patch>
        <Patch>Functions[CTRunGetTypographicBounds].Parameters[descent].IsOut=true</Patch>
        <Patch>Functions[CTRunGetTypographicBounds].Parameters[leading].Type=CGFloat</Patch>
        <Patch>Functions[CTRunGetTypographicBounds].Parameters[leading].IsOut=true</Patch>
      </Type>
      <Type name="CTTextTab">
        <Patch>Functions[CTTextTabGetTypeID].Generate=false</Patch>
      </Type>
      <Type name="CTTypesetter">
        <Patch>Functions[CTTypesetterGetTypeID].Generate=false</Patch>
      </Type>

      <Type name="CGContext.Deprecated">
      </Type>
      <Type name="CGDataProvider.Deprecated">
      </Type>
      <Type name="CGFont.Deprecated">
         <Replace type="Html">
          <Source><![CDATA[)<pre class=]]></Source>
          <With><![CDATA[)</p><pre class=]]></With>
        </Replace>
     </Type>
      <Type name="CGGLContext.Deprecated">
      </Type>
      <Type name="CGPDFDocument.Deprecated">
      </Type>

    </Types>
    <Enumerations>
      <Enumeration name="CGRectEdge">
      </Enumeration>
      <Enumeration name="CGFontManagerError">
      </Enumeration>
    </Enumerations>
    <Structures>
      <Structure name="CGAffineTransform">
      </Structure>
      <Structure name="CGFloat">
      </Structure>
      <Structure name="CGPoint">
      </Structure>
      <Structure name="CGRect">
      </Structure>
      <Structure name="CGSize">
      </Structure>
    </Structures>
  </Framework>
  <Framework name="AppKit" usings="Foundation,CoreData,QuartzCore,ApplicationServices" assembly="Monobjc.AppKit">
    <Types>
      <Type name="AppKitFramework.Constants">
        <Patch>Enumerations[Attributed_String_Errors].Name=NSAttributedStringError</Patch>
        <Patch>Enumerations[NSAttributedStringError].BaseType=NSInteger</Patch>
        <Patch>Enumerations[Services_Error_Codes].Name=NSServicesError</Patch>
        <Patch>Enumerations[NSServicesError].BaseType=NSInteger</Patch>
      </Type>
      <Type name="AppKitFramework.DataTypes">
        <Patch>Enumerations[NSAnimationEffect].BaseType=NSUInteger</Patch>
        <Patch>Enumerations[NSFocusRingPlacement].BaseType=NSUInteger</Patch>
        <Patch>Enumerations[NSFocusRingType].BaseType=NSUInteger</Patch>
        <Patch>Enumerations[NSInterfaceStyle].BaseType=NSUInteger</Patch>
        <Patch>Enumerations[NSOpenGLGlobalOption].BaseType=int</Patch>
      </Type>
      <Type name="AppKitFramework.Functions">
        <Patch>Functions[NSAvailableWindowDepths].ReturnType=IntPtr</Patch>
        <Patch>Functions[NSBestDepth].Parameters[exactMatch].Type=bool</Patch>
        <Patch>Functions[NSBestDepth].Parameters[exactMatch].IsOut=true</Patch>
        <Patch>Functions[NSCountWindows].Parameters[count].Type=NSInteger</Patch>
        <Patch>Functions[NSCountWindows].Parameters[count].IsOut=true</Patch>
        <Patch>Functions[NSEventMaskFromType].ReturnType=NSEventMask</Patch>

        <Patch>Functions[NSBeginAlertSheet].Parameters[values].Generate=false</Patch>
        <Patch>Functions[NSBeginCriticalAlertSheet].Parameters[values].Generate=false</Patch>
        <Patch>Functions[NSBeginInformationalAlertSheet].Parameters[values].Generate=false</Patch>
        <Patch>Functions[NSGetAlertPanel].Parameters[values].Generate=false</Patch>
        <Patch>Functions[NSGetCriticalAlertPanel].Parameters[values].Generate=false</Patch>
        <Patch>Functions[NSGetInformationalAlertPanel].Parameters[values].Generate=false</Patch>
        <Patch>Functions[NSRunAlertPanel].Parameters[values].Generate=false</Patch>
        <Patch>Functions[NSRunCriticalAlertPanel].Parameters[values].Generate=false</Patch>
        <Patch>Functions[NSRunInformationalAlertPanel].Parameters[values].Generate=false</Patch>

        <Patch>Functions[NSApplicationLoad].Generate=false</Patch>
        <Patch>Functions[NSApplicationMain].Generate=false</Patch>
        <Patch>Functions[NSConvertGlyphsToPackedGlyphs].Generate=false</Patch>
        <Patch>Functions[NSCopyBits].Generate=false</Patch>
        <Patch>Functions[NSCountWindowsForContext].Generate=false</Patch>
        <Patch>Functions[NSCreateFileContentsPboardType].Generate=false</Patch>
        <Patch>Functions[NSCreateFilenamePboardType].Generate=false</Patch>
        <Patch>Functions[NSDottedFrameRect].Generate=false</Patch>
        <Patch>Functions[NSDrawBitmap].Generate=false</Patch>
        <Patch>Functions[NSDrawButton].Generate=false</Patch>
        <Patch>Functions[NSDrawColorTiledRects].Generate=false</Patch>
        <Patch>Functions[NSDrawDarkBezel].Generate=false</Patch>
        <Patch>Functions[NSDrawGrayBezel].Generate=false</Patch>
        <Patch>Functions[NSDrawGroove].Generate=false</Patch>
        <Patch>Functions[NSDrawLightBezel].Generate=false</Patch>
        <Patch>Functions[NSDrawTiledRects].Generate=false</Patch>
        <Patch>Functions[NSGetFileType].Generate=false</Patch>
        <Patch>Functions[NSGetFileTypes].Generate=false</Patch>
        <Patch>Functions[NSGetWindowServerMemory].Generate=false</Patch>
        <Patch>Functions[NSInterfaceStyleForKey].Generate=false</Patch>
        <Patch>Functions[NSIsControllerMarker].Generate=false</Patch>
        <Patch>Functions[NSNumberOfColorComponents].Generate=false</Patch>
        <Patch>Functions[NSOpenGLGetOption].Generate=false</Patch>
        <Patch>Functions[NSOpenGLGetVersion].Generate=false</Patch>
        <Patch>Functions[NSOpenGLSetOption].Generate=false</Patch>
        <Patch>Functions[NSPerformService].Generate=false</Patch>
        <Patch>Functions[NSRectClipList].Generate=false</Patch>
        <Patch>Functions[NSRectFillList].Generate=false</Patch>
        <Patch>Functions[NSRectFillListUsingOperation].Generate=false</Patch>
        <Patch>Functions[NSRectFillListWithColors].Generate=false</Patch>
        <Patch>Functions[NSRectFillListWithColorsUsingOperation].Generate=false</Patch>
        <Patch>Functions[NSRectFillListWithGrays].Generate=false</Patch>
        <Patch>Functions[NSRegisterServicesProvider].Generate=false</Patch>
        <Patch>Functions[NSSetFocusRingStyle].Generate=false</Patch>
        <Patch>Functions[NSSetShowsServicesMenuItem].Generate=false</Patch>
        <Patch>Functions[NSShowsServicesMenuItem].Generate=false</Patch>
        <Patch>Functions[NSUnregisterServicesProvider].Generate=false</Patch>
        <Patch>Functions[NSUpdateDynamicServices].Generate=false</Patch>
        <Patch>Functions[NSWindowList].Generate=false</Patch>
        <Patch>Functions[NSWindowListForContext].Generate=false</Patch>
    
        <Replace type="Html">
          <Source><![CDATA[)
<pre class=]]></Source>
          <With><![CDATA[)</p>
<pre class=]]></With>
        </Replace>
      </Type>
    </Types>
    <Classes>
      <Class name="CIColor_AppKitAdditions">
        <Patch>AdditionFor=CIColor</Patch>
      </Class>
      <Class name="CIImage_AppKitAdditions">
        <Patch>AdditionFor=CIImage</Patch>
      </Class>
      <Class name="NSActionCell">
        <Patch>Properties[IntegerValue].Generate=false</Patch>
      </Class>
      <Class name="NSAffineTransform_AppKitAdditions">
        <Patch>AdditionFor=NSAffineTransform</Patch>
      </Class>
      <Class name="NSAlert">
        <Patch>Methods[AlertWithMessageTextDefaultButtonAlternateButtonOtherButtonInformativeTextWithFormat].Parameters[informativeText,].Generate=false</Patch>
        <Patch>Methods[AlertWithMessageTextDefaultButtonAlternateButtonOtherButtonInformativeTextWithFormat].Parameters[informativeText]=<![CDATA[<Parameter Generate="true" IsOut="false" IsByRef="false"><Summary /><Name>informativeText</Name><Type>NSString</Type></Parameter>]]></Patch>
        <Patch>Methods[AlertWithMessageTextDefaultButtonAlternateButtonOtherButtonInformativeTextWithFormat].Parameters[values]=<![CDATA[<Parameter Generate="true" IsOut="false" IsByRef="false"><Summary /><Name>values</Name><Type>params object[]</Type></Parameter>]]></Patch>
        <Patch>Properties[Delegate].Type=Id</Patch>
        <Patch>Enumerations[Button_Return_Values].Name=NSButtonReturn</Patch>
        <Patch>Enumerations[NSButtonReturn].BaseType=NSInteger</Patch>
      </Class>
      <Class name="NSAnimation">
        <Patch>Properties[Delegate].Type=Id</Patch>
        <Patch>Constants[NSAnimationProgress].Generate=false</Patch>
      </Class>
      <Class name="NSAnimationContext">
		<Patch>Methods[RunAnimationGroupCompletionHandler].Parameters[changes].Type=Block</Patch>
		<Patch>Methods[RunAnimationGroupCompletionHandler].Parameters[changes].IsBlock=false</Patch>
		<Patch>Methods[RunAnimationGroupCompletionHandler].Parameters[completionHandler].Type=Block</Patch>
		<Patch>Methods[RunAnimationGroupCompletionHandler].Parameters[completionHandler].IsBlock=false</Patch>
      </Class>
      <Class name="NSAppleScript_AppKitAdditions">
      </Class>
      <Class name="NSApplication">
        <Patch>Methods[DiscardEventsMatchingMaskBeforeEvent].Parameters[mask].Type=NSEventMask</Patch>
        <Patch>Methods[NextEventMatchingMaskUntilDateInModeDequeue].Parameters[mask].Type=NSEventMask</Patch>
        <Patch>Methods[SearchStringInUserInterfaceItemStringSearchRangeFoundRange].Parameters[foundRange].Type=NSRange</Patch>
        <Patch>Methods[SearchStringInUserInterfaceItemStringSearchRangeFoundRange].Parameters[foundRange].IsOut=true</Patch>
        <Patch>Properties[Delegate].Type=Id</Patch>
        <Patch>Constants[NSApp].Generate=false</Patch>
        <Patch>Enumerations[Return_values_for_modal_operations].Name=NSRunResponse</Patch>
        <Patch>Enumerations[NSRunResponse].BaseType=NSInteger</Patch>
        <Patch>Enumerations[Notification_Type_Constants].Name=NSRemoteNotificationType</Patch>
        <Patch>Enumerations[NSRemoteNotificationType].BaseType=NSUInteger</Patch>
        <!-- TODO: Move to a NSUInteger constant -->
        <Patch>Enumerations[NSUpdateWindowsRunLoopOrdering].Generate=false</Patch>
		<Replace type="Xhtml">
			<Source><![CDATA[FullScreen">NSApplicationPresentationFullScreen</a>]]></Source>
			<With><![CDATA[FullScreen">, NSApplicationPresentationFullScreen</a>]]></With>
		</Replace>
      </Class>
      <Class name="NSArrayController">
        <Patch>Properties[ArrangedObjects].Type=NSArray</Patch>
      </Class>
      <Class name="NSATSTypesetter">
        <Patch>Methods[GetGlyphsInRangeGlyphsCharacterIndexesGlyphInscriptionsElasticBits].Parameters[glyphBuffer].Type=IntPtr</Patch>
        <Patch>Methods[GetGlyphsInRangeGlyphsCharacterIndexesGlyphInscriptionsElasticBits].Parameters[charIndexBuffer].Type=NSUInteger</Patch>
        <Patch>Methods[GetGlyphsInRangeGlyphsCharacterIndexesGlyphInscriptionsElasticBits].Parameters[charIndexBuffer].IsOut=true</Patch>
        <Patch>Methods[GetGlyphsInRangeGlyphsCharacterIndexesGlyphInscriptionsElasticBits].Parameters[inscribeBuffer].Type=NSGlyphInscription</Patch>
        <Patch>Methods[GetGlyphsInRangeGlyphsCharacterIndexesGlyphInscriptionsElasticBits].Parameters[inscribeBuffer].IsOut=true</Patch>
        <Patch>Methods[GetGlyphsInRangeGlyphsCharacterIndexesGlyphInscriptionsElasticBits].Parameters[elasticBuffer].Type=bool</Patch>
        <Patch>Methods[GetGlyphsInRangeGlyphsCharacterIndexesGlyphInscriptionsElasticBits].Parameters[elasticBuffer].IsOut=true</Patch>
        <Patch>Methods[GetLineFragmentRectUsedRectForParagraphSeparatorGlyphRangeAtProposedOrigin].Parameters[lineFragmentRect].Type=NSRect</Patch>
        <Patch>Methods[GetLineFragmentRectUsedRectForParagraphSeparatorGlyphRangeAtProposedOrigin].Parameters[lineFragmentRect].IsOut=true</Patch>
        <Patch>Methods[GetLineFragmentRectUsedRectForParagraphSeparatorGlyphRangeAtProposedOrigin].Parameters[lineFragmentUsedRect].Type=NSRect</Patch>
        <Patch>Methods[GetLineFragmentRectUsedRectForParagraphSeparatorGlyphRangeAtProposedOrigin].Parameters[lineFragmentUsedRect].IsOut=true</Patch>
        <Patch>Methods[LayoutParagraphAtPoint].Parameters[lineFragmentOrigin].Type=NSPoint</Patch>
        <Patch>Methods[LayoutParagraphAtPoint].Parameters[lineFragmentOrigin].IsByRef=true</Patch>
        <Patch>Methods[SetBidiLevelsForGlyphRange].Parameters[levels].Type=IntPtr</Patch>
        <Patch>Methods[SetLocationWithAdvancementsForStartOfGlyphRange].Parameters[advancements].Type=IntPtr</Patch>
        <Patch>Methods[SubstituteGlyphsInRangeWithGlyphs].Parameters[glyphs].Type=IntPtr</Patch>
        <Patch>Methods[WillSetLineFragmentRectForGlyphRangeUsedRectBaselineOffset].Parameters[lineRect].Type=NSRect</Patch>
        <Patch>Methods[WillSetLineFragmentRectForGlyphRangeUsedRectBaselineOffset].Parameters[lineRect].IsOut=true</Patch>
        <Patch>Methods[WillSetLineFragmentRectForGlyphRangeUsedRectBaselineOffset].Parameters[usedRect].Type=NSRect</Patch>
        <Patch>Methods[WillSetLineFragmentRectForGlyphRangeUsedRectBaselineOffset].Parameters[usedRect].IsOut=true</Patch>
        <Patch>Methods[WillSetLineFragmentRectForGlyphRangeUsedRectBaselineOffset].Parameters[baselineOffset].Type=CGFloat</Patch>
        <Patch>Methods[WillSetLineFragmentRectForGlyphRangeUsedRectBaselineOffset].Parameters[baselineOffset].IsOut=true</Patch>
      </Class>
      <Class name="NSAttributedString_AppKitAdditions">
        <Patch>AdditionFor=NSAttributedString</Patch>
        <Patch>Methods[InitWithDocFormatDocumentAttributes].GenerateConstructor=false</Patch>
        <Patch>Methods[InitWithHTMLDocumentAttributes].GenerateConstructor=false</Patch>
        <Patch>Methods[InitWithRTFDDocumentAttributes].GenerateConstructor=false</Patch>
        <Patch>Enumerations[Underlining_Styles].Name=NSUnderliningStyles</Patch>
        <Patch>Enumerations[NSUnderliningStyles].BaseType=NSUInteger</Patch>
        <Patch>Enumerations[Underlining_Patterns].Name=NSUnderliningPatterns</Patch>
        <Patch>Enumerations[NSUnderliningPatterns].BaseType=NSUInteger</Patch>
        <Patch>Enumerations[NSSpellingStateAttributeName_Flags].Name=NSSpellingStateAttributeNameFlags</Patch>
        <Patch>Enumerations[NSSpellingStateAttributeNameFlags].BaseType=NSUInteger</Patch>
        <Patch>Enumerations[NSSpellingStateAttributeNameFlags].Flags=true</Patch>
        <Patch>Constants[NSUnderlineByWordMask].Type=NSUInteger</Patch>
        <Replace type="Html">
          <Source><![CDATA[)<pre class=]]></Source>
          <With><![CDATA[)</p><pre class=]]></With>
        </Replace>
      </Class>
      <Class name="NSBezierPath">
        <Patch>Methods[AppendBezierPathWithGlyphsCountInFont].Parameters[glyphs].Type=IntPtr</Patch>
        <Patch>Methods[AppendBezierPathWithPackedGlyphs].Parameters[packedGlyphs].Type=IntPtr</Patch>
        <Patch>Methods[DrawPackedGlyphsAtPoint].Parameters[packedGlyphs].Type=IntPtr</Patch>
        <Patch>Methods[GetLineDashCountPhase].Parameters[pattern].Type=IntPtr</Patch>
        <Patch>Methods[GetLineDashCountPhase].Parameters[count].Type=IntPtr</Patch>
        <Patch>Methods[GetLineDashCountPhase].Parameters[phase].Type=IntPtr</Patch>
        <Patch>Methods[SetLineDashCountPhase].Parameters[pattern].Type=IntPtr</Patch>
        <Patch>Enumerations[NSBezierPathElement].BaseType=NSUInteger</Patch>
        <Patch>Enumerations[NSLineJoinStyle].BaseType=NSUInteger</Patch>
        <Patch>Enumerations[NSLineCapStyle].BaseType=NSUInteger</Patch>
        <Patch>Enumerations[NSWindingRule].BaseType=NSUInteger</Patch>
      </Class>
      <Class name="NSBitmapImageRep">
        <Patch>Methods[GetTIFFCompressionTypesCount].Parameters[list].Type=IntPtr</Patch>
        <Patch>Methods[GetTIFFCompressionTypesCount].Parameters[numTypes].Type=IntPtr</Patch>
        <Patch>Methods[GetBitmapDataPlanes].Parameters[data].Type=IntPtr</Patch>
        <Patch>Methods[GetCompressionFactor].Parameters[compression].Type=IntPtr</Patch>
        <Patch>Methods[GetCompressionFactor].Parameters[factor].Type=IntPtr</Patch>
        <Patch>Methods[ImageRepWithData].ReturnType=NSBitmapImageRep</Patch>
        <Patch>Methods[InitWithBitmapDataPlanesPixelsWidePixelsHighBitsPerSampleSamplesPerPixelHasAlphaIsPlanarColorSpaceNameBitmapFormatBytesPerRowBitsPerPixel].Parameters[planes].Type=IntPtr</Patch>
        <Patch>Methods[InitWithBitmapDataPlanesPixelsWidePixelsHighBitsPerSampleSamplesPerPixelHasAlphaIsPlanarColorSpaceNameBytesPerRowBitsPerPixel].Parameters[planes].Type=IntPtr</Patch>
        <Patch>Methods[InitWithCGImage].GenerateConstructor=false</Patch>
        <Patch>Properties[BitmapData].Type=IntPtr</Patch>
        <Patch>Properties[BitmapData].Getter.ReturnType=IntPtr</Patch>
      </Class>
      <Class name="NSBox">
        <Patch>Enumerations[NSTitlePosition].BaseType=NSUInteger</Patch>
        <Patch>Properties[TitleCell].Type=NSCell</Patch>
      </Class>
      <Class name="NSBrowser">
        <Patch>Methods[DraggingImageForRowsWithIndexesInColumnWithEventOffset].Parameters[dragImageOffset].Type=NSPoint</Patch>
        <Patch>Methods[DraggingImageForRowsWithIndexesInColumnWithEventOffset].Parameters[dragImageOffset].IsOut=true</Patch>
        <Patch>Methods[GetRowColumnForPoint].Parameters[row].Type=NSInteger</Patch>
        <Patch>Methods[GetRowColumnForPoint].Parameters[row].IsOut=true</Patch>
        <Patch>Methods[GetRowColumnForPoint].Parameters[column].Type=NSInteger</Patch>
        <Patch>Methods[GetRowColumnForPoint].Parameters[column].IsOut=true</Patch>
        <Patch>Methods[LoadedCellAtRowColumn].ReturnType=NSCell</Patch>
        <Patch>Properties[CellPrototype].Type=NSCell</Patch>
        <Patch>Properties[Delegate].Type=Id</Patch>
        <Patch>Properties[SelectedCell].Type=NSCell</Patch>
        <Patch>Properties[CellClass].Generate=false</Patch>
      </Class>
      <Class name="NSBrowserCell">
      </Class>
      <Class name="NSBundle_AppKitAdditions">
        <Patch>AdditionFor=NSBundle</Patch>
        <Patch>Methods[LoadNibFileExternalNameTableWithZone]{Static=True}.Generate=false</Patch>
        <Patch>Methods[LoadNibFileExternalNameTableWithZone]{Static=False}.Generate=false</Patch>
        <Patch>Methods[LoadNibNamedOwner].Generate=false</Patch>
      </Class>
      <Class name="NSButton">
        <Patch>Methods[GetPeriodicDelayInterval].Parameters[delay].Type=float</Patch>
        <Patch>Methods[GetPeriodicDelayInterval].Parameters[delay].IsOut=true</Patch>
        <Patch>Methods[GetPeriodicDelayInterval].Parameters[interval].Type=float</Patch>
        <Patch>Methods[GetPeriodicDelayInterval].Parameters[interval].IsOut=true</Patch>
        <Patch>Properties[State].Type=NSCellStateValue</Patch>
      </Class>
      <Class name="NSButtonCell">
        <Patch>Methods[GetPeriodicDelayInterval].Parameters[delay].Type=float</Patch>
        <Patch>Methods[GetPeriodicDelayInterval].Parameters[delay].IsOut=true</Patch>
        <Patch>Methods[GetPeriodicDelayInterval].Parameters[interval].Type=float</Patch>
        <Patch>Methods[GetPeriodicDelayInterval].Parameters[interval].IsOut=true</Patch>
        <Patch>Properties[HighlightsBy].Type=NSCellAttribute</Patch>
        <Patch>Properties[KeyEquivalentModifierMask].Type=NSModifierFlags</Patch>
        <Patch>Enumerations[Bezel_Styles].Name=NSBezelStyle</Patch>
        <Patch>Enumerations[NSBezelStyle].BaseType=NSUInteger</Patch>
        <Patch>Enumerations[Button_Types].Name=NSButtonType</Patch>
        <Patch>Enumerations[NSButtonType].BaseType=NSUInteger</Patch>
        <Patch>Enumerations[NSGradientType].BaseType=NSUInteger</Patch>
        <Replace type="Html">
          <Source><![CDATA[<dd><p><p class=]]></Source>
          <With><![CDATA[<dd><p class=]]></With>
        </Replace>
        <Replace type="Generated">
          <Source>public virtual NSString KeyEquivalent</Source>
          <With>public new NSString KeyEquivalent</With>
        </Replace>
      </Class>
      <Class name="NSCachedImageRep">
      </Class>
      <Class name="NSCell">
        <Patch>Methods[GetPeriodicDelayInterval].Parameters[delay].Type=float</Patch>
        <Patch>Methods[GetPeriodicDelayInterval].Parameters[delay].IsOut=true</Patch>
        <Patch>Methods[GetPeriodicDelayInterval].Parameters[interval].Type=float</Patch>
        <Patch>Methods[GetPeriodicDelayInterval].Parameters[interval].IsOut=true</Patch>
        <Patch>Properties[NextState].Type=NSArray</Patch>
        <Patch>Properties[State].Type=NSCellStateValue</Patch>
        <Patch>Enumerations[NSCellStateValue].BaseType=NSInteger</Patch>
        <Patch>Enumerations[State_Masks].Name=NSStateMask</Patch>
        <Patch>Enumerations[NSStateMask].BaseType=NSInteger</Patch>
        <Patch>Enumerations[NSStateMask].Flags=true</Patch>
        <Patch>Enumerations[Hit_Testing].Name=NSHitTesting</Patch>
        <Patch>Enumerations[NSHitTesting].BaseType=NSUInteger</Patch>
        <!-- TODO: Deprecated -->
        <Patch>Enumerations[Deprecated_Scaling_Constants].Generate=false</Patch>
        <Patch>Enumerations[Data_Entry_Types].Generate=false</Patch>
        <Replace type="Html">
          <Source><![CDATA[)<pre class=]]></Source>
          <With><![CDATA[)</p><pre class=]]></With>
        </Replace>
        <Replace type="Html">
          <Source><![CDATA[<dd><p><p class=]]></Source>
          <With><![CDATA[<dd><p class=]]></With>
        </Replace>
      </Class>
      <Class name="NSCIImageRep">
        <Patch>Methods[ImageRepWithCIImage].ReturnType=NSCIImageRep</Patch>
      </Class>
      <Class name="NSClipView">
      </Class>
      <Class name="NSCoder_AppKitAdditions">
        <Patch>AdditionFor=NSCoder</Patch>
      </Class>
      <Class name="NSCollectionView">
        <Patch>Methods[DraggingImageForItemsAtIndexesWithEventOffset].Parameters[dragImageOffset].Type=NSPoint</Patch>
        <Patch>Methods[DraggingImageForItemsAtIndexesWithEventOffset].Parameters[dragImageOffset].IsOut=true</Patch>
        <Patch>Properties[Delegate].Type=Id</Patch>
        <Patch>Properties[Delegate].MinAvailability=Mac OS X v10.5</Patch>
      </Class>
      <Class name="NSCollectionViewItem">
        <Replace type="Generated">
          <Source><![CDATA[public partial class NSCollectionViewItem : NSViewController]]></Source>
          <With>
            <![CDATA[public partial class NSCollectionViewItem :
#if MACOSX_10_6
        NSViewController
#else
        NSObject
#endif
]]>
          </With>
        </Replace>
        <Replace type="Generated">
          <Source>
            <![CDATA[#if MACOSX_10_5
    public partial class NSCollectionViewItem
    {
#if MACOSX_10_5
]]>
          </Source>
          <With>
            <![CDATA[#if MACOSX_10_5
    public partial class NSCollectionViewItem
    {
#if MACOSX_10_6
]]>
          </With>
        </Replace>
      </Class>
      <Class name="NSColor">
        <Patch>Methods[ColorWithColorSpaceComponentsCount].Parameters[components].Type=IntPtr</Patch>
        <Patch>Methods[GetComponents].Parameters[components].Type=IntPtr</Patch>
        <Patch>Methods[GetCyanMagentaYellowBlackAlpha].Parameters[cyan].Type=CGFloat</Patch>
        <Patch>Methods[GetCyanMagentaYellowBlackAlpha].Parameters[cyan].IsOut=true</Patch>
        <Patch>Methods[GetCyanMagentaYellowBlackAlpha].Parameters[magenta].Type=CGFloat</Patch>
        <Patch>Methods[GetCyanMagentaYellowBlackAlpha].Parameters[magenta].IsOut=true</Patch>
        <Patch>Methods[GetCyanMagentaYellowBlackAlpha].Parameters[yellow].Type=CGFloat</Patch>
        <Patch>Methods[GetCyanMagentaYellowBlackAlpha].Parameters[yellow].IsOut=true</Patch>
        <Patch>Methods[GetCyanMagentaYellowBlackAlpha].Parameters[black].Type=CGFloat</Patch>
        <Patch>Methods[GetCyanMagentaYellowBlackAlpha].Parameters[black].IsOut=true</Patch>
        <Patch>Methods[GetCyanMagentaYellowBlackAlpha].Parameters[alpha].Type=CGFloat</Patch>
        <Patch>Methods[GetCyanMagentaYellowBlackAlpha].Parameters[alpha].IsOut=true</Patch>
        <Patch>Methods[GetHueSaturationBrightnessAlpha].Parameters[hue].Type=CGFloat</Patch>
        <Patch>Methods[GetHueSaturationBrightnessAlpha].Parameters[hue].IsOut=true</Patch>
        <Patch>Methods[GetHueSaturationBrightnessAlpha].Parameters[saturation].Type=CGFloat</Patch>
        <Patch>Methods[GetHueSaturationBrightnessAlpha].Parameters[saturation].IsOut=true</Patch>
        <Patch>Methods[GetHueSaturationBrightnessAlpha].Parameters[brightness].Type=CGFloat</Patch>
        <Patch>Methods[GetHueSaturationBrightnessAlpha].Parameters[brightness].IsOut=true</Patch>
        <Patch>Methods[GetHueSaturationBrightnessAlpha].Parameters[alpha].Type=CGFloat</Patch>
        <Patch>Methods[GetHueSaturationBrightnessAlpha].Parameters[alpha].IsOut=true</Patch>
        <Patch>Methods[GetRedGreenBlueAlpha].Parameters[red].Type=CGFloat</Patch>
        <Patch>Methods[GetRedGreenBlueAlpha].Parameters[red].IsOut=true</Patch>
        <Patch>Methods[GetRedGreenBlueAlpha].Parameters[green].Type=CGFloat</Patch>
        <Patch>Methods[GetRedGreenBlueAlpha].Parameters[green].IsOut=true</Patch>
        <Patch>Methods[GetRedGreenBlueAlpha].Parameters[blue].Type=CGFloat</Patch>
        <Patch>Methods[GetRedGreenBlueAlpha].Parameters[blue].IsOut=true</Patch>
        <Patch>Methods[GetRedGreenBlueAlpha].Parameters[alpha].Type=CGFloat</Patch>
        <Patch>Methods[GetRedGreenBlueAlpha].Parameters[alpha].IsOut=true</Patch>
        <Patch>Methods[GetWhiteAlpha].Parameters[white].Type=CGFloat</Patch>
        <Patch>Methods[GetWhiteAlpha].Parameters[white].IsOut=true</Patch>
        <Patch>Methods[GetWhiteAlpha].Parameters[alpha].Type=CGFloat</Patch>
        <Patch>Methods[GetWhiteAlpha].Parameters[alpha].IsOut=true</Patch>
      </Class>
      <Class name="NSColorList">
      </Class>
      <Class name="NSColorPanel">
        <Patch>Enumerations[Color_Panel_Modes].Name=NSColorPanelMode</Patch>
        <Patch>Enumerations[NSColorPanelMode].BaseType=NSInteger</Patch>
        <Patch>Enumerations[Color_Picker_Mode_Masks].Name=NSColorPickerModeMask</Patch>
        <Patch>Enumerations[NSColorPickerModeMask].BaseType=NSUInteger</Patch>
        <Patch>Enumerations[NSColorPickerModeMask].Flags=true</Patch>
      </Class>
      <Class name="NSColorPicker">
      </Class>
      <Class name="NSColorSpace">
        <Patch>Methods[InitWithCGColorSpace].GenerateConstructor=false</Patch>
        <Patch>Methods[InitWithColorSyncProfile].GenerateConstructor=false</Patch>
        <Patch>Properties[AdobeRGB1998ColorSpace].Type=NSColorSpace</Patch>
        <Patch>Properties[AdobeRGB1998ColorSpace].Getter.ReturnType=NSColorSpace</Patch>
        <Patch>Properties[SRGBColorSpace].Type=NSColorSpace</Patch>
        <Patch>Properties[SRGBColorSpace].Getter.ReturnType=NSColorSpace</Patch>
        <Patch>Enumerations[Color_Space_Models].Name=NSColorSpaceModel</Patch>
        <Patch>Enumerations[NSColorSpaceModel].BaseType=NSInteger</Patch>
      </Class>
      <Class name="NSColorWell">
      </Class>
      <Class name="NSComboBox">
        <Patch>Properties[DataSource].Type=Id</Patch>
        <Patch>Properties[Delegate].Type=Id</Patch>
      </Class>
      <Class name="NSComboBoxCell">
        <Patch>Properties[DataSource].Type=Id</Patch>
      </Class>
      <Class name="NSControl">
        <!--
        <Patch>Methods[SendActionOn].Parameters[mask].Type=NSEventMask</Patch>
    -->
        <Patch>Properties[Delegate]=<![CDATA[<Property Generate="true" CopyInDescendants="false" Static="false"><Summary><Line>Returns the delegate used by the receiver.</Line></Summary><MinAvailability>Mac OS X v10.0</MinAvailability><Name>Delegate</Name><Type>Id</Type><Getter Generate="true" CopyInDescendants="false" Static="false" GenerateConstructor="true"><Summary/><MinAvailability>Mac OS X v10.0</MinAvailability><Name>Delegate</Name><Selector>delegate</Selector><Signature>- (id)delegate</Signature><ReturnType>Id</ReturnType><ReturnsDocumentation>The delegate used by the receiver and all other text views sharing the receiver’s layout manager, or nil if there is none.</ReturnsDocumentation><Parameters /></Getter><Setter Generate="true" CopyInDescendants="false" Static="false" GenerateConstructor="true"><Summary/><MinAvailability>Mac OS X v10.0</MinAvailability><Name>SetDelegate</Name><Selector>setDelegate:</Selector><Signature>- (void)setDelegate:(id)anObject</Signature><ReturnType>void</ReturnType><Parameters><Parameter Generate="true" CopyInDescendants="false" IsOut="false" IsByRef="false" IsBlock="false"><Summary><Line>The new delegate object.</Line></Summary><Name>anObject</Name><Type>Id</Type></Parameter></Parameters></Setter></Property>]]></Patch>
        <Patch>Properties[Cell].Type=NSCell</Patch>
        <Patch>Properties[Formatter].Type=NSFormatter</Patch>
        <Patch>Properties[SelectedCell].Type=NSCell</Patch>
        <Replace type="Generated">
          <Source>public virtual NSInteger Tag</Source>
          <With>public new NSInteger Tag</With>
        </Replace>
      </Class>
      <Class name="NSController">
      </Class>
      <Class name="NSCursor">
        <Patch>Methods[Pop]{Static=True}.Generate=false</Patch>
      </Class>
      <Class name="NSCustomImageRep">
        <Patch>Properties[Delegate].Type=Id</Patch>
      </Class>
      <Class name="NSDatePicker">
        <Patch>Properties[Delegate].Type=Id</Patch>
      </Class>
      <Class name="NSDatePickerCell">
        <Patch>Properties[Delegate].Type=Id</Patch>
      </Class>
      <Class name="NSDictionaryController">
        <Patch>Properties[ArrangedObjects].Type=NSArray</Patch>
      </Class>
      <Class name="NSDockTile">
      </Class>
      <Class name="NSDocument">
		<Patch>Methods[PerformActivityWithSynchronousWaitingUsingBlock].Parameters[inBlock].Type=Block</Patch>
		<Patch>Methods[PerformActivityWithSynchronousWaitingUsingBlock].Parameters[inBlock].IsBlock=false</Patch>
		<Patch>Methods[PerformAsynchronousFileAccessUsingBlock].Parameters[inBlock].Type=Block</Patch>
		<Patch>Methods[PerformAsynchronousFileAccessUsingBlock].Parameters[inBlock].IsBlock=false</Patch>
        <Replace type="Xhtml">
          <Source><![CDATA[<a href="#//apple_ref/doc/c_ref/NSAutosaveOperation">NSAutosaveOperation</a> = 3]]></Source>
          <With><![CDATA[<a href="#//apple_ref/doc/c_ref/NSAutosaveOperation">, NSAutosaveOperation</a> = 3]]></With>
        </Replace>
      </Class>
      <Class name="NSDocumentController">
		<Patch>Methods[OpenDocumentWithContentsOfURLDisplayCompletionHandler].Parameters[completionHandler].Type=Block</Patch>
		<Patch>Methods[OpenDocumentWithContentsOfURLDisplayCompletionHandler].Parameters[completionHandler].IsBlock=false</Patch>
		<Patch>Methods[ReopenDocumentForURLWithContentsOfURLDisplayCompletionHandler].Parameters[completionHandler].Type=Block</Patch>
		<Patch>Methods[ReopenDocumentForURLWithContentsOfURLDisplayCompletionHandler].Parameters[completionHandler].IsBlock=false</Patch>
        <Patch>Properties[SharedDocumentController].Type=NSDocumentController</Patch>
      </Class>
      <Class name="NSDraggingSession">
        <Patch>Enumerations[NSDraggingItemEnumerationOptions].Values[NSDraggingItemEnumerationConcurrent].Value=<![CDATA[1U << 0]]></Patch>
        <Replace type="Generated">
          <Source><![CDATA[1UL <<]]></Source>
          <With><![CDATA[1U <<]]></With>
        </Replace>
      </Class>
      <Class name="NSDraggingItem">
      <!-- Replace by a block -->
        <Patch>Properties[ImageComponentsProvider].Type=IntPtr</Patch>
      </Class>
      <Class name="NSDraggingImageComponent">
        <Patch>Methods[DraggingImageComponentWithKey].ReturnType=NSDraggingImageComponent</Patch>
      </Class>
      <Class name="NSDrawer">
        <Patch>Properties[Delegate].Type=Id</Patch>
        <Patch>Enumerations[NSDrawerState].BaseType=NSUInteger</Patch>
      </Class>
      <Class name="NSEPSImageRep">
      </Class>
      <Class name="NSEvent">
        <Patch>Methods[EventWithCGEvent].Parameters[cgEvent].Type=IntPtr</Patch>
        <Patch>Methods[EventWithEventRef].Parameters[eventRef].Type=IntPtr</Patch>

        <Patch>Properties[EventRef].Type=IntPtr</Patch>
        <Patch>Properties[EventRef].Getter.ReturnType=IntPtr</Patch>
        <Patch>Properties[ModifierFlags]{Static=True}.Name=GlobalModifierFlags</Patch>
        <Patch>Properties[ModifierFlags].Type=NSModifierFlags</Patch>
        <Patch>Properties[GlobalModifierFlags].Type=NSModifierFlags</Patch>

        <Patch>Enumerations[NSEventType].BaseType=NSUInteger</Patch>
        <Patch>Enumerations[NSEventMaskFromType].Name=NSEventMask</Patch>
        <Patch>Enumerations[NSEventMask].BaseType=NSUInteger</Patch>
        <Patch>Enumerations[NSEventMask].Flags=true</Patch>
        <Patch>Enumerations[Modifier_Flags].Name=NSModifierFlags</Patch>
        <Patch>Enumerations[NSModifierFlags].BaseType=NSUInteger</Patch>
        <Patch>Enumerations[NSModifierFlags].Flags=true</Patch>
        <Patch>Enumerations[Mouse_event_subtypes].Name=NSMouseEventSubType</Patch>
        <Patch>Enumerations[NSMouseEventSubType].BaseType=short</Patch>
        <Patch>Enumerations[Tablet_event_masks].Name=TabletEventMask</Patch>
        <Patch>Enumerations[TabletEventMask].BaseType=NSUInteger</Patch>
        <Patch>Enumerations[TabletEventMask].Flags=true</Patch>
        <Patch>Enumerations[NSPointingDeviceType].BaseType=NSUInteger</Patch>
        <!-- TODO: Move to constants -->
        <Patch>Enumerations[Types_Defined_by_the_Application_Kit].Generate=false</Patch>
        <!-- TODO: Move to constants -->
        <Patch>Enumerations[Power_off_event].Generate=false</Patch>
        <!-- TODO: Move to constants -->
        <Patch>Enumerations[Function_Key_Unicodes].Generate=false</Patch>
        <!-- Duplicate definition in NSTouch -->
        <Patch>Enumerations[NSTouchPhase].Generate=false</Patch>

        <Patch>Enumerations[NSEventSwipeTrackingOptions].BaseType=NSUInteger</Patch>
        <Patch>Enumerations[NSEventGestureAxis].BaseType=NSInteger</Patch>
        <Patch>Enumerations[NSEventPhase].BaseType=NSUInteger</Patch>
    
        <Replace type="Xhtml">
          <Source><![CDATA[<a href="#//apple_ref/doc/c_ref/NSEventTypeGesture">NSEventTypeGesture</a>   = 29,]]></Source>
          <With><![CDATA[<a href="#//apple_ref/doc/c_ref/NSEventTypeGesture">, NSEventTypeGesture</a>   = 29,]]></With>
        </Replace>
        <Replace type="Xhtml">
          <Source><![CDATA[<!--a-->NX_SUBTYPE_TABLET_PROXIMITY<!--/a-->]]></Source>
          <With><![CDATA[<!--a-->NX_SUBTYPE_TABLET_PROXIMITY, <!--/a-->]]></With>
        </Replace>
        <Replace type="Generated">
          <Source><![CDATA[= 1 << NS]]></Source>
          <With><![CDATA[= (uint) 1 << (int) NSEventType.NS]]></With>
        </Replace>
        <Replace type="Generated">
          <Source>NX_TABLET_POINTER_UNKNOWN</Source>
          <With>0</With>
        </Replace>
        <Replace type="Generated">
          <Source>NX_TABLET_POINTER_PEN</Source>
          <With>1</With>
        </Replace>
        <Replace type="Generated">
          <Source>NX_TABLET_POINTER_CURSOR</Source>
          <With>2</With>
        </Replace>
        <Replace type="Generated">
          <Source>NX_TABLET_POINTER_ERASER</Source>
          <With>3</With>
        </Replace>
        <Replace type="Generated">
          <Source>NX_SUBTYPE_DEFAULT</Source>
          <With>0</With>
        </Replace>
        <Replace type="Generated">
          <Source>NX_SUBTYPE_TABLET_POINT</Source>
          <With>1</With>
        </Replace>
        <Replace type="Generated">
          <Source>NX_SUBTYPE_TABLET_PROXIMITY</Source>
          <With>2</With>
        </Replace>
        <Replace type="Generated">
          <Source>NX_SUBTYPE_MOUSE_TOUCH</Source>
          <With>3</With>
        </Replace>
        <Replace type="Generated">
          <Source>NX_TABLET_BUTTON_PENTIPMASK</Source>
          <With>1</With>
        </Replace>
        <Replace type="Generated">
          <Source>NX_TABLET_BUTTON_PENLOWERSIDEMASK</Source>
          <With>2</With>
        </Replace>
        <Replace type="Generated">
          <Source>NX_TABLET_BUTTON_PENUPPERSIDEMASK</Source>
          <With>4</With>
        </Replace>
        <Replace type="Generated">
          <Source><![CDATA[NSEventMaskSwipe = 1U << NSEventTypeSwipe,]]></Source>
          <With><![CDATA[NSEventMaskSwipe = (uint) 1 << (int) NSEventType.NSEventTypeSwipe,]]></With>
        </Replace>
        <Replace type="Generated">
          <Source><![CDATA[ }; NSUIntegerNSEventMaskFromType(NSEventTypetype) { return (1 << type);]]></Source>
          <With><![CDATA[]]></With>
        </Replace>
      </Class>
      <Class name="NSFileWrapper">
        <Patch>Methods[InitWithSerializedRepresentation].GenerateConstructor=false</Patch>
      </Class>
      <Class name="NSFileWrapper_AppKitAdditions">
        <Patch>AdditionFor=NSFileWrapper</Patch>
      </Class>
      <Class name="NSFont">
        <Patch>Methods[FontWithNameMatrix].Parameters[fontMatrix].Type=IntPtr</Patch>
        <Patch>Methods[GetAdvancementsForGlyphsCount].Parameters[glyphs].Type=IntPtr</Patch>
        <Patch>Methods[GetAdvancementsForPackedGlyphsLength].Parameters[length-].Generate=false</Patch>
        <Patch>Methods[GetAdvancementsForPackedGlyphsLength].Parameters[length]=<![CDATA[<Parameter Generate="true" Override="false" IsOut="false" IsByRef="false" IsBlock="false"><Summary /><Name>length</Name><Type>NSUInteger</Type></Parameter>]]></Patch>
        <Patch>Methods[GetAdvancementsForPackedGlyphsLength].Parameters[getAdvancements].Generate=false</Patch>
        <Patch>Methods[GetBoundingRectsForGlyphsCount].Parameters[glyphs].Type=IntPtr</Patch>
        <Patch>Properties[Matrix].Type=IntPtr</Patch>
        <Patch>Properties[Matrix].Getter.ReturnType=IntPtr</Patch>
        <Patch>Enumerations[NSFontRenderingMode].BaseType=NSUInteger</Patch>
        <Patch>Enumerations[NSMultibyteGlyphPacking](0).Generate=false</Patch>
        <Patch>Enumerations[NSMultibyteGlyphPacking](1).BaseType=NSUInteger</Patch>
        <Patch>Enumerations[NSMultibyteGlyphPacking](1).Values[NSNativeShortGlyphPacking]=<![CDATA[<EnumerationValue Generate="true"><Summary><Line>The native format for Mac OS X.</Line></Summary><MinAvailability>Mac OS X v10.0</MinAvailability><Name>NSNativeShortGlyphPacking</Name><Value>5</Value></EnumerationValue>]]></Patch>
        
        <Patch>Enumerations[NSGlyphRelation].BaseType=NSUInteger</Patch>

        <!-- TODO: Move to constants -->
        <Patch>Enumerations[Reserved_Glyph_Codes].Generate=false</Patch>
        <Replace type="Html">
          <Source><![CDATA[<dd><p><p class="abstract">]]></Source>
          <With><![CDATA[<dd><p class="abstract">]]></With>
        </Replace>
        <Replace type="Html">
          <Source><![CDATA[)<pre class=]]></Source>
          <With><![CDATA[)</p><pre class=]]></With>
        </Replace>
      </Class>
      <Class name="NSFontDescriptor">
        <Patch>Enumerations[Typeface_Information].Name=NSTypefaceInformation</Patch>
        <!-- TODO: Move to constants -->
        <Patch>Enumerations[NSFontFamilyClass].Generate=false</Patch>
        <Patch>Enumerations[NSFontFamilyClassMask].Generate=false</Patch>
        <Patch>Enumerations[NSTypefaceInformation].BaseType=uint</Patch>
        <Replace type="Html">
          <Source><![CDATA[<dd><p><p class=]]></Source>
          <With><![CDATA[<dd><p class=]]></With>
        </Replace>
      </Class>
      <Class name="NSFontManager">
        <Patch>Properties[Delegate].Type=Id</Patch>
        <Patch>Enumerations[Font_Collection_Mask].Name=NSFontCollectionMask</Patch>
        <!-- TODO: Move to constants -->
        <Patch>Enumerations[NSFontCollectionMask].Generate=false</Patch>
        <Patch>Enumerations[Font_traits].Name=NSFontTraitMask</Patch>
        <Patch>Enumerations[NSFontTraitMask].BaseType=NSUInteger</Patch>
        <Patch>Enumerations[NSFontTraitMask].Flags=true</Patch>
        <Patch>Enumerations[NSFontAction].BaseType=NSUInteger</Patch>
      </Class>
      <Class name="NSFontPanel">
        <!-- TODO: Deprecated -->
        <Patch>Enumerations[Tags_of_Views_in_the_FontPanel].Generate=false</Patch>
        <Replace type="Html">
          <Source><![CDATA[)<pre class=]]></Source>
          <With><![CDATA[)</p><pre class=]]></With>
        </Replace>
      </Class>
      <Class name="NSForm">
        <Patch>Methods[CellAtIndex].ReturnType=NSCell</Patch>
      </Class>
      <Class name="NSFormCell">
        <Patch>Methods[TitleWidth].Name=GetTitleWidth</Patch>
      </Class>
      <Class name="NSGlyphGenerator">
        <Patch>Methods[GenerateGlyphsForGlyphStorageDesiredNumberOfCharactersGlyphIndexCharacterIndex].Parameters[glyphIndex].Type=NSUInteger</Patch>
        <Patch>Methods[GenerateGlyphsForGlyphStorageDesiredNumberOfCharactersGlyphIndexCharacterIndex].Parameters[glyphIndex].IsOut=true</Patch>
        <Patch>Methods[GenerateGlyphsForGlyphStorageDesiredNumberOfCharactersGlyphIndexCharacterIndex].Parameters[charIndex].Type=NSUInteger</Patch>
        <Patch>Methods[GenerateGlyphsForGlyphStorageDesiredNumberOfCharactersGlyphIndexCharacterIndex].Parameters[charIndex].IsOut=true</Patch>
        <Patch>Properties[SharedGlyphGenerator].Type=NSGlyphGenerator</Patch>
      </Class>
      <Class name="NSGlyphInfo">
        <Patch>Enumerations[NSCharacterCollection].BaseType=NSUInteger</Patch>
      </Class>
      <Class name="NSGradient">
        <Patch>Methods[GetColorLocationAtIndex].Parameters[location].Type=CGFloat</Patch>
        <Patch>Methods[GetColorLocationAtIndex].Parameters[location].IsOut=true</Patch>
        <Patch>Methods[InitWithColorsAtLocationsColorSpace].Parameters[locations].Type=IntPtr</Patch>
        <Patch>Methods[InitWithColorsAndLocations].Parameters[firstColor,...].Generate=false</Patch>
        <Patch><![CDATA[Methods[InitWithColorsAndLocations].Parameters[firstColor]=<Parameter Generate="true" IsOut="false" IsByRef="false"><Summary><Line>MISSING</Line></Summary><Name>firstColor</Name><Type>NSColor</Type></Parameter>]]></Patch>
        <Patch><![CDATA[Methods[InitWithColorsAndLocations].Parameters[values]=<Parameter Generate="true" IsOut="false" IsByRef="false"><Summary><Line>MISSING</Line></Summary><Name>values</Name><Type>params object[]</Type></Parameter>]]></Patch>
        <Patch>Enumerations[Gradient_Drawing_Options].Name=NSGradientDrawingOptions</Patch>
        <Patch>Enumerations[NSGradientDrawingOptions].BaseType=NSUInteger</Patch>
      </Class>
      <Class name="NSGraphicsContext">
        <Patch>Methods[RestoreGraphicsState]{Static=True}.Generate=false</Patch>
        <Patch>Methods[SaveGraphicsState]{Static=True}.Generate=false</Patch>
      </Class>
      <Class name="NSHelpManager">
      </Class>
      <Class name="NSImage">
        <Patch>Methods[CGImageForProposedRectContextHints].Parameters[proposedDestRect].Type=NSRect</Patch>
        <Patch>Methods[CGImageForProposedRectContextHints].Parameters[proposedDestRect].IsByRef=true</Patch>
        <Patch>Methods[ImageNamed].ReturnType=NSImage</Patch>
        <Patch>Methods[InitByReferencingFile].GenerateConstructor=false</Patch>
        <Patch>Methods[InitByReferencingURL].GenerateConstructor=false</Patch>
        <Patch>Methods[InitWithDataIgnoringOrientation].GenerateConstructor=false</Patch>
        <Patch>Methods[InitWithIconRef].GenerateConstructor=false</Patch>
        <Patch>Properties[Delegate].Type=Id</Patch>
        <Replace type="Html">
          <Source><![CDATA[<dd><p><p class=]]></Source>
          <With><![CDATA[<dd><p class=]]></With>
        </Replace>
      </Class>
      <Class name="NSImageCell">
        <Replace type="Html">
          <Source><![CDATA[)<pre class=]]></Source>
          <With><![CDATA[)</p><pre class=]]></With>
        </Replace>
        <Replace type="Xhtml">
          <Source><![CDATA[NSImageCell.h</code></div></p>]]></Source>
          <With><![CDATA[NSImageCell.h</code></div>]]></With>
        </Replace>
      </Class>
      <Class name="NSImageRep">
        <Patch>Methods[CGImageForProposedRectContextHints].Parameters[proposedDestRect].Type=NSRect</Patch>
        <Patch>Methods[CGImageForProposedRectContextHints].Parameters[proposedDestRect].IsByRef=true</Patch>
        <Patch>Methods[ImageRepWithContentsOfFile].ReturnType=NSImageRep</Patch>
        <Patch>Methods[ImageRepWithContentsOfFile].CopyInDescendants=true</Patch>
        <Patch>Methods[ImageRepWithContentsOfURL].ReturnType=NSImageRep</Patch>
        <Patch>Methods[ImageRepWithContentsOfURL].CopyInDescendants=true</Patch>
        <Patch>Methods[ImageRepWithPasteboard].ReturnType=NSImageRep</Patch>
        <Patch>Methods[ImageRepWithPasteboard].CopyInDescendants=true</Patch>
        <Patch>Enumerations[Display_Device_Matching].Name=NSDisplayDeviceMatching</Patch>
        <!-- TODO: Move to constants -->
        <Patch>Enumerations[NSDisplayDeviceMatching].Generate=false</Patch>
      </Class>
      <Class name="NSImageView">
      </Class>
      <Class name="NSLayoutConstraint">
        <Patch>Methods[ConstraintWithItemAttributeRelatedByToItemAttributeMultiplierConstant].ReturnType=NSLayoutConstraint</Patch>
        <Patch>Enumerations[NSLayoutPriority].BaseType=int</Patch>
        <Patch>Enumerations[NSLayoutPriority].MixedType=float,float</Patch>
        <Replace type="Html">
          <Source><![CDATA[/* <!--a-->choose<!--/a--> <!--a-->only<!--/a--> <!--a-->one<!--/a--> <!--a-->of<!--/a--> <!--a-->these<!--/a--> */]]></Source>
          <With><![CDATA[<!-- -->]]></With>
        </Replace>
        <Replace type="Html">
          <Source><![CDATA[/* <!--a-->choose<!--/a--> <!--a-->only<!--/a--> <!--a-->one<!--/a--> <!--a-->of<!--/a--> <!--a-->these<!--/a--> <!--a-->three<!--/a--> */]]></Source>
          <With><![CDATA[<!-- -->]]></With>
        </Replace>
        <Replace type="Html">
          <Source><![CDATA[// <!--a-->default<!--/a-->]]></Source>
          <With><![CDATA[<!-- -->]]></With>
        </Replace>
        <Replace type="Generated">
          <Source><![CDATA[= NSLayoutAttribute]]></Source>
          <With><![CDATA[= 1 << NSLayoutAttribute.NSLayoutAttribute]]></With>
        </Replace>
      </Class>
      <Class name="NSLayoutManager">
        <Patch>Methods[CharacterIndexForPointInTextContainerFractionOfDistanceBetweenInsertionPoints].Parameters[partialFraction].Type=CGFloat</Patch>
        <Patch>Methods[CharacterIndexForPointInTextContainerFractionOfDistanceBetweenInsertionPoints].Parameters[partialFraction].IsOut=true</Patch>
        <Patch>Methods[GetFirstUnlaidCharacterIndexGlyphIndex].Parameters[charIndex].Type=NSUInteger</Patch>
        <Patch>Methods[GetFirstUnlaidCharacterIndexGlyphIndex].Parameters[charIndex].IsOut=true</Patch>
        <Patch>Methods[GetFirstUnlaidCharacterIndexGlyphIndex].Parameters[glyphIndex].Type=NSUInteger</Patch>
        <Patch>Methods[GetFirstUnlaidCharacterIndexGlyphIndex].Parameters[glyphIndex].IsOut=true</Patch>
        <Patch>Methods[GetGlyphsRange].Parameters[glyphArray].Type=IntPtr</Patch>
        <Patch>Methods[GetGlyphsInRangeGlyphsCharacterIndexesGlyphInscriptionsElasticBits].Parameters[glyphBuffer].Type=IntPtr</Patch>
        <Patch>Methods[GetGlyphsInRangeGlyphsCharacterIndexesGlyphInscriptionsElasticBits].Parameters[charIndexBuffer].Type=NSUInteger</Patch>
        <Patch>Methods[GetGlyphsInRangeGlyphsCharacterIndexesGlyphInscriptionsElasticBits].Parameters[charIndexBuffer].IsOut=true</Patch>
        <Patch>Methods[GetGlyphsInRangeGlyphsCharacterIndexesGlyphInscriptionsElasticBits].Parameters[inscribeBuffer].Type=IntPtr</Patch>
        <Patch>Methods[GetGlyphsInRangeGlyphsCharacterIndexesGlyphInscriptionsElasticBits].Parameters[elasticBuffer].Type=bool</Patch>
        <Patch>Methods[GetGlyphsInRangeGlyphsCharacterIndexesGlyphInscriptionsElasticBits].Parameters[elasticBuffer].IsOut=true</Patch>
        <Patch>Methods[GetGlyphsInRangeGlyphsCharacterIndexesGlyphInscriptionsElasticBitsBidiLevels].Parameters[glyphBuffer].Type=IntPtr</Patch>
        <Patch>Methods[GetGlyphsInRangeGlyphsCharacterIndexesGlyphInscriptionsElasticBitsBidiLevels].Parameters[charIndexBuffer].Type=NSUInteger</Patch>
        <Patch>Methods[GetGlyphsInRangeGlyphsCharacterIndexesGlyphInscriptionsElasticBitsBidiLevels].Parameters[charIndexBuffer].IsOut=true</Patch>
        <Patch>Methods[GetGlyphsInRangeGlyphsCharacterIndexesGlyphInscriptionsElasticBitsBidiLevels].Parameters[inscribeBuffer].Type=IntPtr</Patch>
        <Patch>Methods[GetGlyphsInRangeGlyphsCharacterIndexesGlyphInscriptionsElasticBitsBidiLevels].Parameters[elasticBuffer].Type=bool</Patch>
        <Patch>Methods[GetGlyphsInRangeGlyphsCharacterIndexesGlyphInscriptionsElasticBitsBidiLevels].Parameters[elasticBuffer].IsOut=true</Patch>
        <Patch>Methods[GetGlyphsInRangeGlyphsCharacterIndexesGlyphInscriptionsElasticBitsBidiLevels].Parameters[bidiLevelBuffer].Type=IntPtr</Patch>
        <Patch>Methods[GetLineFragmentInsertionPointsForCharacterAtIndexAlternatePositionsInDisplayOrderPositionsCharacterIndexes].Parameters[positions].Type=IntPtr</Patch>
        <Patch>Methods[GetLineFragmentInsertionPointsForCharacterAtIndexAlternatePositionsInDisplayOrderPositionsCharacterIndexes].Parameters[charIndexes].Type=IntPtr</Patch>
        <Patch>Methods[GlyphAtIndexIsValidIndex].Parameters[isValidIndex].Type=bool</Patch>
        <Patch>Methods[GlyphAtIndexIsValidIndex].Parameters[isValidIndex].IsOut=true</Patch>
        <Patch>Methods[GlyphIndexForPointInTextContainerFractionOfDistanceThroughGlyph].Parameters[partialFraction].Type=CGFloat</Patch>
        <Patch>Methods[GlyphIndexForPointInTextContainerFractionOfDistanceThroughGlyph].Parameters[partialFraction].IsOut=true</Patch>
        <Patch>Methods[InsertGlyphsLengthForStartingGlyphAtIndexCharacterIndex].Parameters[glyphs].Type=IntPtr</Patch>
        <Patch>Methods[RectArrayForCharacterRangeWithinSelectedCharacterRangeInTextContainerRectCount].Parameters[rectCount].Type=NSUInteger</Patch>
        <Patch>Methods[RectArrayForCharacterRangeWithinSelectedCharacterRangeInTextContainerRectCount].Parameters[rectCount].IsOut=true</Patch>
        <Patch>Methods[RectArrayForGlyphRangeWithinSelectedGlyphRangeInTextContainerRectCount].Parameters[rectCount].Type=NSUInteger</Patch>
        <Patch>Methods[RectArrayForGlyphRangeWithinSelectedGlyphRangeInTextContainerRectCount].Parameters[rectCount].IsOut=true</Patch>
        <Patch>Methods[SetLocationsStartingGlyphIndexesCountForGlyphRange].Parameters[glyphIndexes].Type=IntPtr</Patch>
        <Patch>Methods[ShowPackedGlyphsLengthGlyphRangeAtPointFontColorPrintingAdjustment].Parameters[glyphs].Type=IntPtr</Patch>
        <Patch>Methods[ShowCGGlyphsPositionsCountFontMatrixAttributesInContext].Parameters[glyphs].Type=IntPtr</Patch>
        <Patch>Methods[ShowCGGlyphsPositionsCountFontMatrixAttributesInContext].Parameters[positions].Type=IntPtr</Patch>
    
        <Patch>Properties[Delegate].Type=Id</Patch>
        <Patch>Enumerations[Glyph_Attributes].Name=NSGlyphAttributes</Patch>
        <Patch>Enumerations[NSGlyphAttributes].BaseType=NSInteger</Patch>
        <Patch>Enumerations[NSGlyphInscription].BaseType=NSUInteger</Patch>
        <Patch>Enumerations[NSTypesetterBehavior].BaseType=NSInteger</Patch>
      </Class>
      <Class name="NSLevelIndicator">
      </Class>
      <Class name="NSLevelIndicatorCell">
      </Class>
      <Class name="NSMatrix">
        <Patch>Methods[CellAtRowColumn].ReturnType=NSCell</Patch>
        <Patch>Methods[CellWithTag].ReturnType=NSCell</Patch>
        <Patch>Methods[GetNumberOfRowsColumns].Parameters[rowCount].Type=NSInteger</Patch>
        <Patch>Methods[GetNumberOfRowsColumns].Parameters[rowCount].IsOut=true</Patch>
        <Patch>Methods[GetNumberOfRowsColumns].Parameters[columnCount].Type=NSInteger</Patch>
        <Patch>Methods[GetNumberOfRowsColumns].Parameters[columnCount].IsOut=true</Patch>
        <Patch>Methods[GetRowColumnForPoint].Parameters[row].Type=NSInteger</Patch>
        <Patch>Methods[GetRowColumnForPoint].Parameters[row].IsOut=true</Patch>
        <Patch>Methods[GetRowColumnForPoint].Parameters[column].Type=NSInteger</Patch>
        <Patch>Methods[GetRowColumnForPoint].Parameters[column].IsOut=true</Patch>
        <Patch>Methods[GetRowColumnOfCell].Parameters[row].Type=NSInteger</Patch>
        <Patch>Methods[GetRowColumnOfCell].Parameters[row].IsOut=true</Patch>
        <Patch>Methods[GetRowColumnOfCell].Parameters[column].Type=NSInteger</Patch>
        <Patch>Methods[GetRowColumnOfCell].Parameters[column].IsOut=true</Patch>
        <Patch>Properties[Delegate].Type=Id</Patch>
        <Patch>Properties[KeyCell].Type=NSCell</Patch>
        <Patch>Properties[Prototype].Type=NSCell</Patch>
        <Patch>Properties[SelectedCell].Type=NSCell</Patch>
        <Patch>Enumerations[NSMatrixMode].BaseType=NSUInteger</Patch>
        <Replace type="Generated">
          <Source>public virtual Class CellClass</Source>
          <With>public new Class CellClass</With>
        </Replace>
      </Class>
      <Class name="NSMenu">
        <Patch>Properties[Delegate].Type=Id</Patch>
        <Replace type="Xhtml">
          <Source><![CDATA[<a href="#//apple_ref/doc/c_ref/NSMenuPropertyItemKeyEquivalent">NSMenuPropertyItemKeyEquivalent</a> = 1 &amp;lt;&amp;lt; 2,]]></Source>
          <With><![CDATA[<a href="#//apple_ref/doc/c_ref/NSMenuPropertyItemKeyEquivalent">, NSMenuPropertyItemKeyEquivalent</a> = 1 &amp;lt;&amp;lt; 2,]]></With>
        </Replace>
      </Class>
      <Class name="NSMenuItem">
        <Patch>Properties[State].Type=NSCellStateValue</Patch>
        <Replace type="Generated">
          <Source>
            <![CDATA[{
            get { return ObjectiveCRuntime.SendMessage<bool>(this, "hasSubmenu"); }
            set { ObjectiveCRuntime.SendMessage(this, "setSubmenu:", value); }
        }]]>
          </Source>
          <With>
            <![CDATA[{
            get { return ObjectiveCRuntime.SendMessage<bool>(this, "hasSubmenu"); }
        }]]>
          </With>
        </Replace>
        <Replace type="Generated">
          <Source>
            <![CDATA[{
            get { return ObjectiveCRuntime.SendMessage<NSMenu>(this, "submenu"); }
        }]]>
          </Source>
          <With>
            <![CDATA[{
            get { return ObjectiveCRuntime.SendMessage<NSMenu>(this, "submenu"); }
            set { ObjectiveCRuntime.SendMessage(this, "setSubmenu:", value); }
        }]]>
          </With>
        </Replace>
      </Class>
      <Class name="NSMenuItemCell">
        <Patch>Properties[Tag].Generate=false</Patch>
      </Class>
      <Class name="NSMenuView">
      </Class>
      <Class name="NSMutableAttributedString_AppKitAdditions">
        <Patch>AdditionFor=NSMutableAttributedString</Patch>
      </Class>
      <Class name="NSMutableParagraphStyle">
      </Class>
      <Class name="NSNib">
      </Class>
      <Class name="NSNibConnector">
      </Class>
      <Class name="NSNibControlConnector">
      </Class>
      <Class name="NSNibOutletConnector">
      </Class>
      <Class name="NSObjectController">
      </Class>
      <Class name="NSOpenGLContext">
        <Patch>Methods[InitWithCGLContextObj].GenerateConstructor=false</Patch>
        <Patch>Methods[GetValuesForParameter].Parameters[vals].Type=IntPtr</Patch>
        <Patch>Methods[SetValuesForParameter].Parameters[vals].Type=IntPtr</Patch>
        <Patch>Enumerations[NSOpenGLContextParameter].BaseType=int</Patch>
      </Class>
      <Class name="NSOpenGLLayer">
        <Patch>Methods[CanDrawInOpenGLContextPixelFormatForLayerTimeDisplayTime].Parameters[timeStamp].Type=IntPtr</Patch>
        <Patch>Methods[DrawInOpenGLContextPixelFormatForLayerTimeDisplayTime].Parameters[timeStamp].Type=IntPtr</Patch>
      </Class>
      <Class name="NSOpenGLPixelBuffer">
        <Patch>Methods[InitWithCGLPBufferObj].GenerateConstructor=false</Patch>
      </Class>
      <Class name="NSOpenGLPixelFormat">
        <Patch>Methods[GetValuesForAttributeForVirtualScreen].Parameters[vals].Type=IntPtr</Patch>
        <Patch>Methods[InitWithAttributes].Parameters[attribs].Type=IntPtr</Patch>
        <Patch>Methods[InitWithAttributes].GenerateConstructor=false</Patch>
        <Patch>Methods[InitWithCGLPixelFormatObj].GenerateConstructor=false</Patch>
        <Replace type="Html">
          <Source><![CDATA[instead.)<div class="declaration">]]></Source>
          <With><![CDATA[instead.)</p><div class="declaration">]]></With>
        </Replace>
        <Replace type="Html">
          <Source><![CDATA[(<strong class="deprecated">Deprecated.</strong>&#032;)<div class="declarati]]></Source>
          <With><![CDATA[(<strong class="deprecated">Deprecated.</strong>&#032;)</p><div class="declaration">]]></With>
        </Replace>
      </Class>
      <Class name="NSOpenGLView">
      </Class>
      <Class name="NSOpenPanel">
      </Class>
      <Class name="NSOutlineView">
        <Patch>Properties[Delegate].Type=Id</Patch>
        <Patch>Properties[DataSource].Type=Id</Patch>
        <!-- TODO: Move to constants -->
        <Patch>Enumerations[Drop_on_Item_Index].Generate=false</Patch>
      </Class>
      <Class name="NSPageLayout">
      </Class>
      <Class name="NSPanel">
        <Patch>Enumerations[Style_Masks].Generate=false</Patch>

        <!-- TODO: Combine with other panels -->
        <Patch>Enumerations[Alert_Panel_Return_Values].Name=NSAlertPanelReturn</Patch>
        <Patch>Enumerations[NSAlertPanelReturn].BaseType=NSInteger</Patch>
        <Patch>Enumerations[NSAlertPanelReturn].Generate=false</Patch>
        <!-- TODO: Combine with other panels -->
        <Patch>Enumerations[Modal_Panel_Return_Values].Name=NSModalPanelReturn</Patch>
        <Patch>Enumerations[NSModalPanelReturn].BaseType=NSInteger</Patch>
        <Patch>Enumerations[NSModalPanelReturn].Generate=false</Patch>

        <Patch>Constants[NSOKButton]=<![CDATA[<Constant Generate="true"><Summary><Line>The OK button</Line></Summary><MinAvailability>Mac OS X v10.0</MinAvailability><Name>NSOKButton</Name><Type>NSInteger</Type><Static>true</Static><Value>1</Value></Constant>]]></Patch>
        <Patch>Constants[NSCancelButton]=<![CDATA[<Constant Generate="true"><Summary><Line>The Cancel button</Line></Summary><MinAvailability>Mac OS X v10.0</MinAvailability><Name>NSCancelButton</Name><Type>NSInteger</Type><Static>true</Static><Value>0</Value></Constant>]]></Patch>
        <Patch>Constants[NSAlertDefaultReturn]=<![CDATA[<Constant Generate="true"><Summary><Line>The user pressed the default button.</Line></Summary><MinAvailability>Mac OS X v10.0</MinAvailability><Name>NSAlertDefaultReturn</Name><Type>NSInteger</Type><Static>true</Static><Value>1</Value></Constant>]]></Patch>
        <Patch>Constants[NSAlertAlternateReturn]=<![CDATA[<Constant Generate="true"><Summary><Line>The user pressed the alternate button.</Line></Summary><MinAvailability>Mac OS X v10.0</MinAvailability><Name>NSAlertAlternateReturn</Name><Type>NSInteger</Type><Static>true</Static><Value>0</Value></Constant>]]></Patch>
        <Patch>Constants[NSAlertOtherReturn]=<![CDATA[<Constant Generate="true"><Summary><Line>The user pressed a second alternate button.</Line></Summary><MinAvailability>Mac OS X v10.0</MinAvailability><Name>NSAlertOtherReturn</Name><Type>NSInteger</Type><Static>true</Static><Value>-1</Value></Constant>]]></Patch>
        <Patch>Constants[NSAlertErrorReturn]=<![CDATA[<Constant Generate="true"><Summary><Line>The alert cannot identify the reason it was closed; it may have been closed by an external source or by a button other than those listed above.</Line></Summary><MinAvailability>Mac OS X v10.0</MinAvailability><Name>NSAlertErrorReturn</Name><Type>NSInteger</Type><Static>true</Static><Value>-2</Value></Constant>]]></Patch>

        <Replace type="Xhtml">
          <Source><![CDATA[<a href="#//apple_ref/doc/c_ref/NSHUDWindowMask">NSHUDWindowMask</a>]]></Source>
          <With><![CDATA[<a href="#//apple_ref/doc/c_ref/NSHUDWindowMask">, NSHUDWindowMask</a>]]></With>
        </Replace>
        <Replace type="Generated">
          <Source>public virtual bool WorksWhenModal</Source>
          <With>public new bool WorksWhenModal</With>
        </Replace>
      </Class>
      <Class name="NSParagraphStyle">
        <Replace type="Xhtml">
          <Source><![CDATA[typedef <!--a-->NSUInteger<!--/a--><a href="#//apple_ref/doc/c_ref/NSLineBreakMode">NSLineBreakMode</a>]]></Source>
          <With><![CDATA[typedef <!--a-->NSUInteger<!--/a--><a href="#//apple_ref/doc/c_ref/NSLineBreakMode"> NSLineBreakMode</a>]]></With>
        </Replace>
      </Class>
      <Class name="NSPasteboard">
         <Replace type="Html">
          <Source><![CDATA[<dd><p><p class=]]></Source>
          <With><![CDATA[<dd><p class=]]></With>
        </Replace>
      </Class>
      <Class name="NSPasteboardItem">
      </Class>
      <Class name="NSPathCell">
        <Patch>Properties[Delegate].Type=Id</Patch>
      </Class>
      <Class name="NSPathComponentCell">
      </Class>
      <Class name="NSPathControl">
        <Patch>Properties[Delegate].Type=Id</Patch>
      </Class>
      <Class name="NSPDFImageRep">
      </Class>
      <Class name="NSPersistentDocument">
      </Class>
      <Class name="NSPICTImageRep">
      </Class>
      <Class name="NSPopover">
        <Patch>Properties[Appearance].Type=NSPopoverAppearance</Patch>
        <Patch>Properties[Behavior].Type=NSPopoverBehavior</Patch>
        <Patch>Properties[ContentViewController].Type=NSViewController</Patch>
      </Class>
      <Class name="NSPopUpButton">
      </Class>
      <Class name="NSPopUpButtonCell">
        <Patch>Enumerations[NSPopUpArrowPosition].BaseType=NSUInteger</Patch>
      </Class>
      <Class name="NSPredicateEditor">
      </Class>
      <Class name="NSPredicateEditorRowTemplate">
      </Class>
      <Class name="NSPrinter">
        <Patch>Enumerations[NSPrinterTableStatus].BaseType=NSUInteger</Patch>
      </Class>
      <Class name="NSPrintInfo">
        <Replace type="Html">
          <Source><![CDATA[)<pre class=]]></Source>
          <With><![CDATA[)</p><pre class=]]></With>
        </Replace>
        <Replace type="Xhtml">
          <Source><![CDATA[NSPrintJobSavingFileNameExtensionHidden']]></Source>
          <With><![CDATA[NSPrintJobSavingFileNameExtensionHidden]]></With>
        </Replace>
      </Class>
      <Class name="NSPrintOperation">
        <Patch>Enumerations[NSPrintingPageOrder].BaseType=NSInteger</Patch>
      </Class>
      <Class name="NSPrintPanel">
        <Patch>Methods[AddAccessoryController].Parameters[accessoryController].Type=INSPrintPanelAccessorizing</Patch>
        <Patch>Methods[RemoveAccessoryController].Parameters[accessoryController].Type=INSPrintPanelAccessorizing</Patch>
      </Class>
      <Class name="NSProgressIndicator">
        <Patch>Enumerations[NSProgressIndicatorStyle].BaseType=NSUInteger</Patch>
        <Patch>Enumerations[NSProgressIndicatorThickness].BaseType=NSUInteger</Patch>
      </Class>
      <Class name="NSResponder">
      </Class>
      <Class name="NSRuleEditor">
        <Patch>Properties[Delegate].Type=Id</Patch>
        <Patch>Enumerations[Nesting_Modes].Name=NSRuleEditorNestingMode</Patch>
        <Patch>Enumerations[NSRuleEditorNestingMode].BaseType=NSUInteger</Patch>
        <Patch>Enumerations[Row_Types].Name=NSRuleEditorRowType</Patch>
        <Patch>Enumerations[NSRuleEditorRowType].BaseType=NSUInteger</Patch>
      </Class>
      <Class name="NSRulerMarker">
      </Class>
      <Class name="NSRulerView">
        <Patch>Enumerations[NSRulerOrientation].BaseType=NSUInteger</Patch>
      </Class>
      <Class name="NSRunningApplication">
      </Class>
      <Class name="NSSavePanel">
        <Patch>Methods[BeginSheetModalForWindowCompletionHandler].Parameters[handler].Type=Block</Patch>
        <Patch>Methods[BeginSheetModalForWindowCompletionHandler].Parameters[handler].IsBlock=false</Patch>
        <Patch>Methods[BeginWithCompletionHandler].Parameters[handler].Type=Block</Patch>
        <Patch>Methods[BeginWithCompletionHandler].Parameters[handler].IsBlock=false</Patch>
        <Patch>Properties[Delegate].Type=Id</Patch>
        <!-- TODO: Move to constant -->
        <Patch>Enumerations[Button_tags].Generate=false</Patch>
      </Class>
      <Class name="NSScreen">
        <Patch>Properties[SupportedWindowDepths].Type=IntPtr</Patch>
        <Patch>Properties[SupportedWindowDepths].Getter.ReturnType=IntPtr</Patch>
      </Class>
      <Class name="NSScroller">
        <Patch>Enumerations[NSScrollArrowPosition].BaseType=NSUInteger</Patch>
        <Patch>Enumerations[NSScrollerArrow].BaseType=NSUInteger</Patch>
        <Patch>Enumerations[NSScrollerPart].BaseType=NSUInteger</Patch>
        <Patch>Enumerations[NSUsableScrollerParts].BaseType=NSUInteger</Patch>
        <Replace type="Html">
          <Source><![CDATA[)<pre class=]]></Source>
          <With><![CDATA[)</p><pre class=]]></With>
        </Replace>
        <Replace type="Html">
          <Source><![CDATA[instead.)<div class="declaration">]]></Source>
          <With><![CDATA[instead.)</p><div class="declaration">]]></With>
        </Replace>
      </Class>
      <Class name="NSScrollView">
        <Patch>Properties[ContentView].Generate=false</Patch>
        <Replace type="Html">
          <Source><![CDATA[instead.)<div class="declaration">]]></Source>
          <With><![CDATA[instead.)</p><div class="declaration">]]></With>
        </Replace>
      </Class>
      <Class name="NSSearchField">
      </Class>
      <Class name="NSSearchFieldCell">
      </Class>
      <Class name="NSSecureTextField">
      </Class>
      <Class name="NSSecureTextFieldCell">
      </Class>
      <Class name="NSSegmentedCell">
        <Patch>Enumerations[NSSegmentSwitchTracking].BaseType=NSUInteger</Patch>
      </Class>
      <Class name="NSSegmentedControl">
      </Class>
      <Class name="NSShadow">
      </Class>
      <Class name="NSSlider">
        <Patch>Properties[TitleCell].Type=NSCell</Patch>
      </Class>
      <Class name="NSSliderCell">
        <Patch>Properties[TitleCell].Type=NSCell</Patch>
        <Patch>Enumerations[NSTickMarkPosition].BaseType=NSUInteger</Patch>
        <Patch>Enumerations[NSSliderType].BaseType=NSUInteger</Patch>
      </Class>
      <Class name="NSSound">
        <Patch>Methods[SoundNamed].ReturnType=NSSound</Patch>
        <Patch>Properties[Delegate].Type=Id</Patch>
      </Class>
      <Class name="NSSpeechRecognizer">
        <Patch>Properties[Delegate].Type=Id</Patch>
      </Class>
      <Class name="NSSpeechSynthesizer">
        <Patch>Properties[Delegate].Type=Id</Patch>
      </Class>
      <Class name="NSSpellChecker">
        <Patch>Methods[CheckSpellingOfStringStartingAtLanguageWrapInSpellDocumentWithTagWordCount].Parameters[wordCount].Type=NSInteger</Patch>
        <Patch>Methods[CheckSpellingOfStringStartingAtLanguageWrapInSpellDocumentWithTagWordCount].Parameters[wordCount].IsOut=true</Patch>
        <Patch>Methods[CheckStringRangeTypesOptionsInSpellDocumentWithTagOrthographyWordCount].Parameters[wordCount].Type=NSInteger</Patch>
        <Patch>Methods[CheckStringRangeTypesOptionsInSpellDocumentWithTagOrthographyWordCount].Parameters[wordCount].IsOut=true</Patch>
      </Class>
      <Class name="NSSplitView">
        <Patch>Properties[Delegate].Type=Id</Patch>
      </Class>
      <Class name="NSStatusBar">
      </Class>
      <Class name="NSStatusItem">
      </Class>
      <Class name="NSStepper">
      </Class>
      <Class name="NSStepperCell">
      </Class>
      <Class name="NSString_AppKitAdditions">
        <Patch>AdditionFor=NSString</Patch>
      </Class>
      <Class name="NSTableCellView">
      </Class>
      <Class name="NSTableColumn">
        <Patch>Methods[DataCellForRow].ReturnType=NSCell</Patch>
        <Patch>Properties[DataCell].Type=NSCell</Patch>
        <Patch>Properties[HeaderCell].Type=NSCell</Patch>
        <Patch>Properties[Identifier].Type=NSString</Patch>
        <Patch>Enumerations[Resizing_Modes].Name=NSResizingMode</Patch>
        <Patch>Enumerations[NSResizingMode].BaseType=NSUInteger</Patch>
      </Class>
      <Class name="NSTableHeaderCell">
      </Class>
      <Class name="NSTableHeaderView">
      </Class>
      <Class name="NSTableRowView">
      </Class>
      <Class name="NSTableView">
        <Patch>Methods[DragImageForRowsWithIndexesTableColumnsEventOffset].Parameters[dragImageOffset].Type=NSPoint</Patch>
        <Patch>Methods[DragImageForRowsWithIndexesTableColumnsEventOffset].Parameters[dragImageOffset].IsByRef=true</Patch>
        <Patch>Properties[DataSource].Type=Id</Patch>
        <Patch>Properties[Delegate].Type=Id</Patch>
        <Patch>Properties[GridStyleMask].Type=NSTableViewGridLineStyle</Patch>
        <Patch>Enumerations[NSTableViewDraggingDestinationFeedbackStyle].BaseType=NSInteger</Patch>
        <Patch>Enumerations[Grid_styles].Name=NSTableViewGridLineStyle</Patch>
        <Patch>Enumerations[NSTableViewGridLineStyle].BaseType=NSUInteger</Patch>
        <Patch>Enumerations[NSTableViewGridLineStyle].Flags=true</Patch>
        <Patch>Enumerations[No_Animation_Effects].Generate=false</Patch>
        <Patch>Enumerations[Row_Animation_Effects].Generate=false</Patch>
        <Patch>Enumerations[NSTableViewAnimationOptions].Values[NSTableViewAnimationEffectNone]=<![CDATA[<EnumerationValue Generate="true"><Summary><Line>Specifies no animation effect should be used. Specifying any animation negates this effect.</Line></Summary><MinAvailability>Mac OS X v10.7</MinAvailability><Name>NSTableViewAnimationEffectNone</Name><Value>0x0</Value></EnumerationValue>]]></Patch>
        <Patch>Enumerations[NSTableViewAnimationOptions].Values[NSTableViewAnimationEffectFade]=<![CDATA[<EnumerationValue Generate="true"><Summary><Line>Specifies that the tableview will use a fade for row or column removal. The effect can be combined with any NSTableViewAnimationOptions constant.</Line></Summary><MinAvailability>Mac OS X v10.7</MinAvailability><Name>NSTableViewAnimationEffectFade</Name><Value>0x1</Value></EnumerationValue>]]></Patch>
        <Patch>Enumerations[NSTableViewAnimationOptions].Values[NSTableViewAnimationEffectGap]=<![CDATA[<EnumerationValue Generate="true"><Summary><Line>Creates a gap for newly inserted rows. This is useful for drag and drop animations that animate to a newly opened gap and should be used in the delegate method tableView:acceptDrop:row:dropOperation:.</Line></Summary><MinAvailability>Mac OS X v10.7</MinAvailability><Name>NSTableViewAnimationEffectGap</Name><Value>0x2</Value></EnumerationValue>]]></Patch>
      </Class>
      <Class name="NSTabView">
        <Patch>Properties[Delegate].Type=Id</Patch>
      </Class>
      <Class name="NSTabViewItem">
        <Patch>Enumerations[NSTabState].BaseType=NSUInteger</Patch>
      </Class>
      <Class name="NSText">
        <Patch>Properties[Delegate].Type=Id</Patch>
        <Patch>Enumerations[NSTextAlignment].BaseType=NSUInteger</Patch>
        <Patch>Enumerations[Additional_Writing_Directions].Name=NSAdditionalWritingDirection</Patch>
        <Patch>Enumerations[NSAdditionalWritingDirection].BaseType=NSInteger</Patch>
        <Patch>Enumerations[Movement_Codes].Name=NSMovementCode</Patch>
        <Patch>Enumerations[NSMovementCode].BaseType=NSInteger</Patch>
        <Patch>Enumerations[Commonly_used_Unicode_characters].Name=NSCommonUnicodeCharacters</Patch>
        <Patch>Enumerations[NSCommonUnicodeCharacters].BaseType=uint</Patch>
      </Class>
      <Class name="NSTextAttachment">
        <!-- TODO: Move to constants -->
        <Patch>Enumerations[Attachment_Character].Name=NSAttachmentCharacter</Patch>
        <Patch>Enumerations[NSAttachmentCharacter].Generate=false</Patch>
      </Class>
      <Class name="NSTextAttachmentCell">
      </Class>
      <Class name="NSTextBlock">
      </Class>
      <Class name="NSTextContainer">
        <Patch>Enumerations[NSLineMovementDirection].BaseType=NSUInteger</Patch>
        <Patch>Enumerations[NSLineSweepDirection].BaseType=NSUInteger</Patch>
      </Class>
      <Class name="NSTextField">
        <Patch>Properties[Delegate].Type=Id</Patch>
      </Class>
      <Class name="NSTextFieldCell">
      </Class>
      <Class name="NSTextFinder">
        <Patch>Properties[Client].Type=Id</Patch>
        <Patch>Properties[FindBarContainer].Type=Id</Patch>
      </Class>
      <Class name="NSTextInputContext">
      </Class>
      <Class name="NSTextList">
      </Class>
      <Class name="NSTextStorage">
        <Patch>Properties[Delegate].Type=Id</Patch>
        <Patch>Enumerations[Change_notifications].Name=NSTextStorageEditedMask</Patch>
        <Patch>Enumerations[NSTextStorageEditedMask].BaseType=NSUInteger</Patch>
        <Patch>Enumerations[NSTextStorageEditedMask].Flags=true</Patch>
      </Class>
      <Class name="NSTextTab">
        <Patch>Enumerations[NSTextTabType].BaseType=NSUInteger</Patch>
      </Class>
      <Class name="NSTextTable">
      </Class>
      <Class name="NSTextTableBlock">
      </Class>
      <Class name="NSTextView">
        <Patch>Methods[CompletionsForPartialWordRangeIndexOfSelectedItem].Parameters[index].Type=NSInteger</Patch>
        <Patch>Methods[CompletionsForPartialWordRangeIndexOfSelectedItem].Parameters[index].IsOut=true</Patch>
        <Patch>Properties[Delegate].Type=Id</Patch>
        <Patch>Enumerations[NSSelectionGranularity].BaseType=NSUInteger</Patch>
        <Patch>Enumerations[NSSelectionAffinity].BaseType=NSUInteger</Patch>
        <Patch>Enumerations[NSFindPanelAction].BaseType=NSUInteger</Patch>
        <Replace type="Html">
          <Source><![CDATA[)<pre class=]]></Source>
          <With><![CDATA[)</p><pre class=]]></With>
        </Replace>
        <Replace type="Xhtml">
          <Source>
            <![CDATA[</a>
NSString *NSFindPanelCaseInsensitiveSearch
<a]]>
          </Source>
          <With>
            <![CDATA[</a>;
NSString *NSFindPanelCaseInsensitiveSearch;
<a]]>
          </With>
        </Replace>
        <Replace type="Generated">
          <Source>public virtual bool IsRulerVisible</Source>
          <With>public new bool IsRulerVisible</With>
        </Replace>
      </Class>
      <Class name="NSTokenField">
        <Patch>Properties[Delegate].Type=Id</Patch>
      </Class>
      <Class name="NSTokenFieldCell">
        <Patch>Properties[Delegate].Type=Id</Patch>
      </Class>
      <Class name="NSToolbar">
        <Patch>Properties[Delegate].Type=Id</Patch>
      </Class>
      <Class name="NSToolbarItem">
        <Patch>Enumerations[Item_Priority].Name=NSItemPriority</Patch>
        <Patch>Enumerations[NSItemPriority].BaseType=NSInteger</Patch>
        <Replace type="Html">
          <Source><![CDATA[<dd><p><p class=]]></Source>
          <With><![CDATA[<dd><p class=]]></With>
        </Replace>
      </Class>
      <Class name="NSToolbarItemGroup">
      </Class>
      <Class name="NSTouch">
        <Patch>Properties[Identity].Type=INSCopying</Patch>
        <Patch>Properties[Identity].Getter.ReturnType=INSCopying</Patch>
        <Replace type="Generated">
          <Source>NSUIntegerMax</Source>
          <With>UInt32.MaxValue</With>
        </Replace>
      </Class>
      <Class name="NSTrackingArea">
      </Class>
      <Class name="NSTreeController">
      </Class>
      <Class name="NSTreeNode">
        <Patch>Methods[TreeNodeWithRepresentedObject].ReturnType=NSTreeNode</Patch>
      </Class>
      <Class name="NSTypesetter">
        <Patch>Methods[PrintingAdjustmentInLayoutManagerForNominallySpacedGlyphRangePackedGlyphsCount].Parameters[packedGlyphs].Type=IntPtr</Patch>
        <Patch>Methods[GetGlyphsInRangeGlyphsCharacterIndexesGlyphInscriptionsElasticBitsBidiLevels].Parameters[glyphBuffer].Type=IntPtr</Patch>
        <Patch>Methods[GetGlyphsInRangeGlyphsCharacterIndexesGlyphInscriptionsElasticBitsBidiLevels].Parameters[charIndexBuffer].Type=IntPtr</Patch>
        <Patch>Methods[GetGlyphsInRangeGlyphsCharacterIndexesGlyphInscriptionsElasticBitsBidiLevels].Parameters[inscribeBuffer].Type=IntPtr</Patch>
        <Patch>Methods[GetGlyphsInRangeGlyphsCharacterIndexesGlyphInscriptionsElasticBitsBidiLevels].Parameters[elasticBuffer].Type=IntPtr</Patch>
        <Patch>Methods[GetGlyphsInRangeGlyphsCharacterIndexesGlyphInscriptionsElasticBitsBidiLevels].Parameters[bidiLevelBuffer].Type=IntPtr</Patch>
        <Patch>Methods[SetBidiLevelsForGlyphRange].Parameters[levels].Type=IntPtr</Patch>
        <Patch>Methods[SetLocationWithAdvancementsForStartOfGlyphRange].Parameters[advancements].Type=IntPtr</Patch>
        <Patch>Methods[SubstituteGlyphsInRangeWithGlyphs].Parameters[glyphs].Type=IntPtr</Patch>
        <Patch>Methods[WillSetLineFragmentRectForGlyphRangeUsedRectBaselineOffset].Parameters[baselineOffset].Type=CGFloat</Patch>
        <Patch>Methods[WillSetLineFragmentRectForGlyphRangeUsedRectBaselineOffset].Parameters[baselineOffset].IsOut=true</Patch>
        <Patch>Methods[LayoutGlyphsInLayoutManagerStartingAtGlyphIndexMaxNumberOfLineFragmentsNextGlyphIndex].Parameters[nextGlyph].Type=NSUInteger</Patch>
        <Patch>Methods[LayoutGlyphsInLayoutManagerStartingAtGlyphIndexMaxNumberOfLineFragmentsNextGlyphIndex].Parameters[nextGlyph].IsOut=true</Patch>
      </Class>
      <Class name="NSURL_AppKitAdditions">
        <Patch>AdditionFor=NSURL</Patch>
      </Class>
      <Class name="NSUserDefaultsController">
        <Patch>Properties[SharedUserDefaultsController].Type=NSUserDefaultsController</Patch>
      </Class>
      <Class name="NSView">
        <Patch>Methods[GetRectsBeingDrawnCount].Parameters[rects].Type=IntPtr</Patch>
        <Patch>Methods[GetRectsBeingDrawnCount].Parameters[count].Type=NSInteger</Patch>
        <Patch>Methods[GetRectsBeingDrawnCount].Parameters[count].IsOut=true</Patch>
        <Patch>Methods[GetRectsExposedDuringLiveResizeCount].Parameters[count].Type=NSInteger</Patch>
        <Patch>Methods[GetRectsExposedDuringLiveResizeCount].Parameters[count].IsOut=true</Patch>
        <Patch>Methods[AdjustPageHeightNewTopBottomLimit].Parameters[newBottom].Type=CGFloat</Patch>
        <Patch>Methods[AdjustPageHeightNewTopBottomLimit].Parameters[newBottom].IsOut=true</Patch>
        <Patch>Methods[AdjustPageWidthNewLeftRightLimit].Parameters[newRight].Type=CGFloat</Patch>
        <Patch>Methods[AdjustPageWidthNewLeftRightLimit].Parameters[newRight].IsOut=true</Patch>
        <Patch>Methods[SortSubviewsUsingFunctionContext].Parameters[compare].Type=IdComparator</Patch>
        <Patch>Methods[ViewWithTag].ReturnType=NSView</Patch>
        <Patch>Properties[Animator]=<![CDATA[<Property Generate="true" Static="false"><Summary><Line>Returns a proxy object for the receiver that can be used to initiate implied animation for property changes. (required)</Line></Summary><MinAvailability>Mac OS X v10.5</MinAvailability><Name>Animator</Name><Type>Id</Type><Getter Generate="true" Static="false" GenerateConstructor="true"><Summary><Line>Returns a proxy object for the receiver that can be used to initiate implied animation for property changes. (required)</Line></Summary><MinAvailability>Mac OS X v10.5</MinAvailability><Name>Animator</Name><Selector>animator</Selector><Signature>- (id)animator</Signature><ReturnType>Id</ReturnType><ReturnsDocumentation>Returns a proxy object for the receiver that can initiate implied animations in response to property changes.</ReturnsDocumentation><Parameters /></Getter></Property>]]></Patch>
        <Patch>Properties[Animator].Type=NSView</Patch>
        <Patch>Properties[Animator].Getter.ReturnType=NSView</Patch>
        <Patch>Properties[AutoresizingMask].Type=NSAutoresizingMask</Patch>
        <Patch>Enumerations[Resizing_masks].Name=NSAutoresizingMask</Patch>
        <Patch>Enumerations[NSAutoresizingMask].BaseType=NSUInteger</Patch>
        <Patch>Enumerations[NSAutoresizingMask].Flags=true</Patch>
        <Replace type="Html">
          <Source><![CDATA[instead.)<div class="declaration">]]></Source>
          <With><![CDATA[instead.)</p><div class="declaration">]]></With>
        </Replace>
      </Class>
      <Class name="NSViewAnimation">
      </Class>
      <Class name="NSViewController">
      </Class>
      <Class name="NSWindow">
        <Patch>Methods[ContentRectForFrameRectStyleMask].Parameters[windowStyle].Type=NSWindowStyleMask</Patch>
        <Patch>Methods[FrameRectForContentRectStyleMask].Parameters[windowStyle].Type=NSWindowStyleMask</Patch>
        <Patch>Methods[MinFrameWidthWithTitleStyleMask].Parameters[windowStyle].Type=NSWindowStyleMask</Patch>
        <Patch>Methods[InitWithContentRectStyleMaskBackingDefer].Parameters[windowStyle].Type=NSWindowStyleMask</Patch>
        <Patch>Methods[InitWithContentRectStyleMaskBackingDeferScreen].Parameters[windowStyle].Type=NSWindowStyleMask</Patch>
        <Patch>Methods[InitWithWindowRef].GenerateConstructor=false</Patch>
        <Patch>Methods[NextEventMatchingMask].Parameters[eventMask].Type=NSEventMask</Patch>
        <Patch>Methods[NextEventMatchingMaskUntilDateInModeDequeue].Parameters[eventMask].Type=NSEventMask</Patch>

        <Patch>DelegateMethods[WindowDidDecodeRestorableState].Generate=false</Patch>
        <Patch>DelegateMethods[WindowWillEncodeRestorableState].Generate=false</Patch>

        <Patch>Properties[Animator]=<![CDATA[<Property Generate="true" Static="false"><Summary><Line>Returns a proxy object for the receiver that can be used to initiate implied animation for property changes. (required)</Line></Summary><MinAvailability>Mac OS X v10.5</MinAvailability><Name>Animator</Name><Type>Id</Type><Getter Generate="true" Static="false" GenerateConstructor="true"><Summary><Line>Returns a proxy object for the receiver that can be used to initiate implied animation for property changes. (required)</Line></Summary><MinAvailability>Mac OS X v10.5</MinAvailability><Name>Animator</Name><Selector>animator</Selector><Signature>- (id)animator</Signature><ReturnType>Id</ReturnType><ReturnsDocumentation>Returns a proxy object for the receiver that can initiate implied animations in response to property changes.</ReturnsDocumentation><Parameters /></Getter></Property>]]></Patch>
        <Patch>Properties[Animator].Type=NSWindow</Patch>
        <Patch>Properties[Animator].Getter.ReturnType=NSWindow</Patch>
        <Patch>Properties[ContentView].Type=NSView</Patch>
        <Patch>Properties[ContentView].Getter.ReturnType=NSView</Patch>
        <Patch>Properties[Delegate].Type=Id</Patch>
        <Patch>Properties[StyleMask].Type=NSWindowStyleMask</Patch>
        <Patch>Properties[RestorationClass].Type=Class</Patch>

        <Patch>Enumerations[Window_Style_Masks].Name=NSWindowStyleMask</Patch>
        <Patch>Enumerations[NSWindowStyleMask].BaseType=NSUInteger</Patch>
        <Patch>Enumerations[NSWindowStyleMask].Flags=true</Patch>
        <Patch>Enumerations[NSWindowStyleMask].Values[NSDocModalWindowMask]=<![CDATA[<EnumerationValue Generate="true"><Summary><Line>The panel is created as a modal sheet.</Line></Summary><MinAvailability>Mac OS X v10.0</MinAvailability><Name>NSDocModalWindowMask</Name><Value>1 &amp;lt;&amp;lt; 6</Value></EnumerationValue>]]></Patch>
        <Patch>Enumerations[NSWindowStyleMask].Values[NSNonactivatingPanelMask]=<![CDATA[<EnumerationValue Generate="true"><Summary><Line>The panel can receive keyboard input without activating the owning application.</Line><Line>Valid only for an instance of NSPanel or its subclasses; not valid for a window.</Line></Summary><MinAvailability>Mac OS X v10.2</MinAvailability><Name>NSNonactivatingPanelMask</Name><Value>1 &amp;lt;&amp;lt; 7</Value></EnumerationValue>]]></Patch>
        <Patch>Enumerations[NSWindowStyleMask].Values[NSHUDWindowMask]=<![CDATA[<EnumerationValue Generate="true"><Summary><Line>The panel is created as a transparent panel (sometimes called a “heads-up display”).</Line><Line>Valid only for an instance of NSPanel or its subclasses; not valid for a window.</Line><Line>Using the C bitwise OR operator, , NSHUDWindowMask can be combined with other style masks (some of which are documented in Window_Style_Masks) with the following results:</Line><Line>The following constants cannot be combined with , NSHUDWindowMask: NSMiniaturizableWindowMask, NSTexturedBackgroundWindowMask, NSDocModalWindowMask, and NSUnifiedTitleAndToolbarWindowMask.</Line></Summary><MinAvailability>Mac OS X v10.5</MinAvailability><Name>NSHUDWindowMask</Name><Value>1 &amp;lt;&amp;lt; 13</Value></EnumerationValue>]]></Patch>
        <Patch>Enumerations[NSWindowStyleMask].Values[NSUnifiedTitleAndToolbarWindowMask]=<![CDATA[<EnumerationValue Generate="true"><Summary><Line>Specifies a window whose toolbar and title bar are rendered on a single continuous background.</Line></Summary><MinAvailability>Mac OS X v10.4</MinAvailability><Name>NSUnifiedTitleAndToolbarWindowMask</Name><Value>1 &amp;lt;&amp;lt; 12</Value></EnumerationValue>]]></Patch>
        <Patch>Enumerations[NSWindowStyleMask].Values[NSFullScreenWindowMask]=<![CDATA[<EnumerationValue Generate="true"><Summary><Line>Indicates that a window has fullscreen appearance.</Line><Line>A fullscreen window does not draw its titlebar, and may have special handling for its toolbar.</Line></Summary><MinAvailability>Mac OS X v10.7</MinAvailability><Name>NSFullScreenWindowMask</Name><Value>1 &amp;lt;&amp;lt; 14</Value></EnumerationValue>]]></Patch>
    
        <Patch>Enumerations[Controlling_the_Look_of_a_Window_and_Its_Toolbar].Generate=false</Patch>
        <Patch>Enumerations[Supporting_Full_Screen_Appearance.].Generate=false</Patch>
        <Patch>Enumerations[Managing_Scaling_Factors].Generate=false</Patch>
        <!-- TODO: Merge with other ordering -->
        <Patch>Enumerations[NSRunLoop_Ordering_Modes_for_NSWindow].Name=NSWindowRunLoopOrderingMode</Patch>
        <Patch>Enumerations[NSWindowRunLoopOrderingMode].BaseType=NSInteger</Patch>
        <Patch>Enumerations[Explicit_Window_Depth_Limits].Name=NSWindowDepthLimit</Patch>
        <Patch>Enumerations[NSWindowDepthLimit].BaseType=int</Patch>
        <Replace type="Html">
          <Source><![CDATA[<dd><p><p class=]]></Source>
          <With><![CDATA[<dd><p class=]]></With>
        </Replace>
        <Replace type="Xhtml">
          <Source><![CDATA[// <!--a-->let<!--/a--><!--a-->AppKit<!--/a--><!--a-->infer<!--/a--><!--a-->animation<!--/a--><!--a-->behavior<!--/a--><!--a-->for<!--/a--><!--a-->this<!--/a--><!--a-->window<!--/a-->]]></Source>
          <With><![CDATA[ ]]></With>
        </Replace>
        <Replace type="Xhtml">
          <Source><![CDATA[// <!--a-->suppress<!--/a--><!--a-->inferred<!--/a--><!--a-->animations<!--/a--> (don'<!--a-->t<!--/a--><!--a-->animate<!--/a-->)]]></Source>
          <With><![CDATA[ ]]></With>
        </Replace>
        <Replace type="Xhtml">
          <Source>
            <![CDATA[};
enum {]]>
          </Source>
          <With><![CDATA[ , ]]></With>
        </Replace>
      </Class>
      <Class name="NSWindowController">
        <Patch>Methods[InitWithWindowNibPathOwner].GenerateConstructor=false</Patch>
      </Class>
      <Class name="NSWorkspace">
        <Patch>Methods[GetFileSystemInfoForPathIsRemovableIsWritableIsUnmountableDescriptionType].Parameters[removableFlag].Type=bool</Patch>
        <Patch>Methods[GetFileSystemInfoForPathIsRemovableIsWritableIsUnmountableDescriptionType].Parameters[removableFlag].IsOut=true</Patch>
        <Patch>Methods[GetFileSystemInfoForPathIsRemovableIsWritableIsUnmountableDescriptionType].Parameters[writableFlag].Type=bool</Patch>
        <Patch>Methods[GetFileSystemInfoForPathIsRemovableIsWritableIsUnmountableDescriptionType].Parameters[writableFlag].IsOut=true</Patch>
        <Patch>Methods[GetFileSystemInfoForPathIsRemovableIsWritableIsUnmountableDescriptionType].Parameters[unmountableFlag].Type=bool</Patch>
        <Patch>Methods[GetFileSystemInfoForPathIsRemovableIsWritableIsUnmountableDescriptionType].Parameters[unmountableFlag].IsOut=true</Patch>
        <Patch>Methods[GetFileSystemInfoForPathIsRemovableIsWritableIsUnmountableDescriptionType].Parameters[description].Type=NSString</Patch>
        <Patch>Methods[GetFileSystemInfoForPathIsRemovableIsWritableIsUnmountableDescriptionType].Parameters[description].IsOut=true</Patch>
        <Patch>Methods[GetFileSystemInfoForPathIsRemovableIsWritableIsUnmountableDescriptionType].Parameters[fileSystemType].Type=NSString</Patch>
        <Patch>Methods[GetFileSystemInfoForPathIsRemovableIsWritableIsUnmountableDescriptionType].Parameters[fileSystemType].IsOut=true</Patch>
        <Patch>Methods[PerformFileOperationSourceDestinationFilesTag].Parameters[tag].Type=NSInteger</Patch>
        <Patch>Methods[PerformFileOperationSourceDestinationFilesTag].Parameters[tag].IsOut=true</Patch>
      </Class>

      <Class name="NSActionCell.Deprecated">
        <Patch>AdditionFor=NSActionCell</Patch>
      </Class>
      <Class name="NSApplication.Deprecated">
        <Patch>AdditionFor=NSApplication</Patch>
      </Class>
      <Class name="NSATSTypesetter.Deprecated">
        <Patch>AdditionFor=NSATSTypesetter</Patch>
        <Patch>Methods[InsertGlyphAtGlyphIndexCharacterIndex].Generate=false</Patch>
      </Class>
      <Class name="NSAttributedString_AppKitAdditions.Deprecated">
        <Patch>AdditionFor=NSAttributedString_AppKitAdditions</Patch>
        <Replace type="Generated">
          <Source>NSAttributedString_AppKitAdditionsClass</Source>
          <With>NSAttributedString.NSAttributedStringClass</With>
        </Replace>
      </Class>
      <Class name="NSBezierPath.Deprecated">
        <Patch>AdditionFor=NSBezierPath</Patch>
      </Class>
      <Class name="NSBrowser.Deprecated">
        <Patch>AdditionFor=NSBrowser</Patch>
      </Class>
      <Class name="NSCachedImageRep.Deprecated">
        <Patch>AdditionFor=NSCachedImageRep</Patch>
      </Class>
      <Class name="NSCell.Deprecated">
        <Patch>AdditionFor=NSCell</Patch>
      </Class>
      <Class name="NSCollectionViewItem.Deprecated">
        <Patch>AdditionFor=NSCollectionViewItem</Patch>
      </Class>
      <Class name="NSControl.Deprecated">
        <Patch>AdditionFor=NSControl</Patch>
      </Class>
      <Class name="NSDocument.Deprecated">
        <Patch>AdditionFor=NSDocument</Patch>
      </Class>
      <Class name="NSDocumentController.Deprecated">
        <Patch>AdditionFor=NSDocumentController</Patch>
      </Class>
      <Class name="NSFileWrapper.Deprecated">
        <Patch>AdditionFor=NSFileWrapper</Patch>
      </Class>
      <Class name="NSFont.Deprecated">
        <Patch>AdditionFor=NSFont</Patch>
        <Patch>Methods[PositionOfGlyphPrecededByGlyphIsNominal].Parameters[flag].Type=bool</Patch>
        <Patch>Methods[PositionOfGlyphPrecededByGlyphIsNominal].Parameters[flag].IsOut=true</Patch>
        <Patch>Methods[PositionOfGlyphStruckOverGlyphMetricsExist].Parameters[flag].Type=bool</Patch>
        <Patch>Methods[PositionOfGlyphStruckOverGlyphMetricsExist].Parameters[flag].IsOut=true</Patch>
        <Patch>Methods[PositionOfGlyphStruckOverRectMetricsExist].Parameters[flag].Type=bool</Patch>
        <Patch>Methods[PositionOfGlyphStruckOverRectMetricsExist].Parameters[flag].IsOut=true</Patch>
        <Patch>Methods[PositionOfGlyphWithRelationToBaseGlyphTotalAdvancementMetricsExist].Parameters[flag].Type=bool</Patch>
        <Patch>Methods[PositionOfGlyphWithRelationToBaseGlyphTotalAdvancementMetricsExist].Parameters[flag].IsOut=true</Patch>
        <Patch>Methods[PositionsForCompositeSequenceNumberOfGlyphsPointArray].Parameters[glyphs].Type=IntPtr</Patch>
      </Class>
      <Class name="NSGraphicsContext.Deprecated">
        <Patch>AdditionFor=NSGraphicsContext</Patch>
      </Class>
      <Class name="NSImage.Deprecated">
        <Patch>AdditionFor=NSImage</Patch>
      </Class>
      <Class name="NSMenu.Deprecated">
        <Patch>AdditionFor=NSMenu</Patch>
      </Class>
      <Class name="NSMenuItem.Deprecated">
        <Patch>AdditionFor=NSMenuItem</Patch>
      </Class>
      <Class name="NSOpenPanel.Deprecated">
        <Patch>AdditionFor=NSOpenPanel</Patch>
      </Class>
      <Class name="NSPageLayout.Deprecated">
        <Patch>AdditionFor=NSPageLayout</Patch>
      </Class>
      <Class name="NSPersistentDocument.Deprecated">
        <Patch>AdditionFor=NSPersistentDocument</Patch>
      </Class>
      <Class name="NSPrinter.Deprecated">
        <Patch>AdditionFor=NSPrinter</Patch>
      </Class>
      <Class name="NSPrintInfo.Deprecated">
        <Patch>AdditionFor=NSPrintInfo</Patch>
      </Class>
      <Class name="NSPrintOperation.Deprecated">
        <Patch>AdditionFor=NSPrintOperation</Patch>
      </Class>
      <Class name="NSPrintPanel.Deprecated">
        <Patch>AdditionFor=NSPrintPanel</Patch>
      </Class>
      <Class name="NSProgressIndicator.Deprecated">
        <Patch>AdditionFor=NSProgressIndicator</Patch>
      </Class>
      <Class name="NSSavePanel.Deprecated">
        <Patch>AdditionFor=NSSavePanel</Patch>
      </Class>
      <Class name="NSScroller.Deprecated">
        <Patch>AdditionFor=NSScroller</Patch>
      </Class>
      <Class name="NSSound.Deprecated">
        <Patch>AdditionFor=NSSound</Patch>
      </Class>
      <Class name="NSSpellChecker.Deprecated">
        <Patch>AdditionFor=NSSpellChecker</Patch>
      </Class>
      <Class name="NSSplitView.Deprecated">
        <Patch>AdditionFor=NSSplitView</Patch>
      </Class>
      <Class name="NSTableColumn.Deprecated">
        <Patch>AdditionFor=NSTableColumn</Patch>
      </Class>
      <Class name="NSTableView.Deprecated">
        <Patch>AdditionFor=NSTableView</Patch>
      </Class>
      <Class name="NSTextField.Deprecated">
        <Patch>AdditionFor=NSTextField</Patch>
      </Class>
      <Class name="NSTextView.Deprecated">
        <Patch>AdditionFor=NSTextView</Patch>
      </Class>
      <Class name="NSWindow.Deprecated">
        <Patch>AdditionFor=NSWindow</Patch>
      </Class>
      <Class name="NSWorkspace.Deprecated">
        <Patch>AdditionFor=NSWorkspace</Patch>
      </Class>
    </Classes>
    <Protocols>
      <Protocol name="NSAccessibility">
      </Protocol>
      <Protocol name="NSAlertDelegate">
        <Patch>DelegateFor=NSAlert</Patch>
        <Patch>DelegateProperty=Delegate</Patch>
      </Protocol>
      <Protocol name="NSAnimatablePropertyContainer">
        <Patch>Properties[Animator].Generate=false</Patch>
      </Protocol>
      <Protocol name="NSAnimationDelegate">
        <Patch>DelegateFor=NSAnimation</Patch>
        <Patch>DelegateProperty=Delegate</Patch>
      </Protocol>
      <Protocol name="NSApplicationDelegate">
        <Patch>DelegateFor=NSApplication</Patch>
        <Patch>DelegateProperty=Delegate</Patch>
      </Protocol>
      <Protocol name="NSBrowserDelegate">
        <Patch>BaseType=NSControlTextEditingDelegate</Patch>
        <Patch>DelegateFor=NSBrowser</Patch>
        <Patch>DelegateProperty=Delegate</Patch>
        <Patch>Methods[BrowserDraggingImageForRowsWithIndexesInColumnWithEventOffset].Parameters[dragImageOffset].Type=NSPoint</Patch>
        <Patch>Methods[BrowserDraggingImageForRowsWithIndexesInColumnWithEventOffset].Parameters[dragImageOffset].IsByRef=true</Patch>
        <Patch>Methods[BrowserValidateDropProposedRowColumnDropOperation].Parameters[row].Type=NSInteger</Patch>
        <Patch>Methods[BrowserValidateDropProposedRowColumnDropOperation].Parameters[row].IsByRef=true</Patch>
        <Patch>Methods[BrowserValidateDropProposedRowColumnDropOperation].Parameters[column].Type=NSInteger</Patch>
        <Patch>Methods[BrowserValidateDropProposedRowColumnDropOperation].Parameters[column].IsByRef=true</Patch>
        <Patch>Methods[BrowserValidateDropProposedRowColumnDropOperation].Parameters[dropOperation].Type=NSBrowserDropOperation</Patch>
        <Patch>Methods[BrowserValidateDropProposedRowColumnDropOperation].Parameters[dropOperation].IsByRef=true</Patch>
      </Protocol>
      <Protocol name="NSChangeSpelling">
      </Protocol>
      <Protocol name="NSCollectionViewDelegate">
        <Patch>DelegateFor=NSCollectionView</Patch>
        <Patch>DelegateProperty=Delegate</Patch>
        <Patch>Methods[CollectionViewDraggingImageForItemsAtIndexesWithEventOffset].Parameters[dragImageOffset].Type=NSPoint</Patch>
        <Patch>Methods[CollectionViewDraggingImageForItemsAtIndexesWithEventOffset].Parameters[dragImageOffset].IsByRef=true</Patch>
        <Patch>Methods[CollectionViewValidateDropProposedIndexDropOperation].Parameters[proposedDropIndex].Type=NSInteger</Patch>
        <Patch>Methods[CollectionViewValidateDropProposedIndexDropOperation].Parameters[proposedDropIndex].IsByRef=true</Patch>
        <Patch>Methods[CollectionViewValidateDropProposedIndexDropOperation].Parameters[proposedDropOperation].Type=NSCollectionViewDropOperation</Patch>
        <Patch>Methods[CollectionViewValidateDropProposedIndexDropOperation].Parameters[proposedDropOperation].IsByRef=true</Patch>
      </Protocol>
      <Protocol name="NSColorPanelDelegate">
        <Patch>BaseType=NSPanelDelegate</Patch>
        <Patch>DelegateFor=NSColorPanel</Patch>
        <Patch>DelegateProperty=Delegate</Patch>
      </Protocol>
      <Protocol name="NSColorPickingCustom">
      </Protocol>
      <Protocol name="NSColorPickingDefault">
      </Protocol>
      <Protocol name="NSComboBoxCellDataSource">
      </Protocol>
      <Protocol name="NSComboBoxDataSource">
      </Protocol>
      <Protocol name="NSComboBoxDelegate">
        <Patch>BaseType=NSTextFieldDelegate</Patch>
        <Patch>DelegateFor=NSComboBox</Patch>
        <Patch>DelegateProperty=Delegate</Patch>
      </Protocol>
      <Protocol name="NSControlTextEditingDelegate">
        <Patch>DelegateFor=NSControl</Patch>
        <Patch>Methods[ControlTextViewCompletionsForPartialWordRangeIndexOfSelectedItem].Parameters[index].Type=NSInteger</Patch>
        <Patch>Methods[ControlTextViewCompletionsForPartialWordRangeIndexOfSelectedItem].Parameters[index].IsByRef=true</Patch>
        <!--
        <Patch>Methods[ControlTextDidBeginEditing]=<![CDATA[<Method Generate="true" Static="false" GenerateConstructor="true"><Summary><Line>Sent when a control with editable text begins an editing session.</Line></Summary><MinAvailability>Mac OS X v10.0</MinAvailability><Name>ControlTextDidBeginEditing</Name><Selector>controlTextDidBeginEditing:</Selector><Signature>- (void)controlTextDidBeginEditing:(NSNotification *)aNotification</Signature><ReturnType>void</ReturnType><ReturnsDocumentation /><Parameters><Parameter Generate="true" IsOut="false" IsByRef="false" IsBlock="false"><Summary><Line>The notification object. The name of the notification is always NSControlTextDidBeginEditingNotification.</Line></Summary><Name>aNotification</Name><Type>NSNotification</Type></Parameter></Parameters></Method>]]></Patch>
        <Patch>Methods[ControlTextDidChange]=<![CDATA[<Method Generate="true" Static="false" GenerateConstructor="true"><Summary><Line>Sent when the text in the receiving control changes.</Line></Summary><MinAvailability>Mac OS X v10.0</MinAvailability><Name>ControlTextDidChange</Name><Selector>controlTextDidChange:</Selector><Signature>- (void)controlTextDidChange:(NSNotification *)aNotification</Signature><ReturnType>void</ReturnType><ReturnsDocumentation /><Parameters><Parameter Generate="true" IsOut="false" IsByRef="false" IsBlock="false"><Summary><Line>The notification object. The name of the notification is always NSControlTextDidChangeNotification.</Line></Summary><Name>aNotification</Name><Type>NSNotification</Type></Parameter></Parameters></Method>]]></Patch>
        <Patch>Methods[ControlTextDidEndEditing]=<![CDATA[<Method Generate="true" Static="false" GenerateConstructor="true"><Summary><Line>Sent when a control with editable text ends an editing session.</Line></Summary><MinAvailability>Mac OS X v10.0</MinAvailability><Name>ControlTextDidEndEditing</Name><Selector>controlTextDidEndEditing:</Selector><Signature>- (void)controlTextDidEndEditing:(NSNotification *)aNotification</Signature><ReturnType>void</ReturnType><ReturnsDocumentation /><Parameters><Parameter Generate="true" IsOut="false" IsByRef="false" IsBlock="false"><Summary><Line>The notification object. The name of the notification is always NSControlTextDidEndEditingNotification.</Line></Summary><Name>aNotification</Name><Type>NSNotification</Type></Parameter></Parameters></Method>]]></Patch>
        -->
      </Protocol>
      <Protocol name="NSDatePickerCellDelegate">
        <Patch>DelegateFor=NSDatePickerCell</Patch>
        <Patch>DelegateProperty=Delegate</Patch>
        <Patch>Methods[DatePickerCellValidateProposedDateValueTimeInterval].Parameters[proposedTimeInterval].Type=double</Patch>
        <Patch>Methods[DatePickerCellValidateProposedDateValueTimeInterval].Parameters[proposedTimeInterval].IsByRef=true</Patch>
      </Protocol>
      <Protocol name="NSDictionaryControllerKeyValuePair">
      </Protocol>
      <Protocol name="NSDockTilePlugIn">
      </Protocol>
      <Protocol name="NSDraggingDestination">
      </Protocol>
      <Protocol name="NSDraggingInfo">
        <Patch>Enumerations[NSDraggingItemEnumerationOptions].Generate=false</Patch>
        <Replace type="Html">
          <Source><![CDATA[)<pre class=]]></Source>
          <With><![CDATA[)</p><pre class=]]></With>
        </Replace>
        <Replace type="Generated">
          <Source>NSUIntegerMax</Source>
          <With>UInt32.MaxValue</With>
        </Replace>
      </Protocol>
      <Protocol name="NSDraggingSource">
      </Protocol>
      <Protocol name="NSDrawerDelegate">
        <Patch>DelegateFor=NSDrawer</Patch>
        <Patch>DelegateProperty=Delegate</Patch>
      </Protocol>
      <Protocol name="NSEditor">
      </Protocol>
      <Protocol name="NSEditorRegistration">
      </Protocol>
      <Protocol name="NSFontManagerDelegate">
        <Patch>DelegateFor=NSFontManager</Patch>
        <Patch>DelegateProperty=Delegate</Patch>
      </Protocol>
      <Protocol name="NSFontPanelValidation">
        <Patch>Enumerations[Mode_Masks].Name=NSFontPanelModeMask</Patch>
        <Patch>Enumerations[NSFontPanelModeMask].BaseType=NSUInteger</Patch>
        <Patch>Enumerations[NSFontPanelModeMask].Flags=true</Patch>
      </Protocol>
      <Protocol name="NSGlyphStorage">
        <Patch>Methods[InsertGlyphsLengthForStartingGlyphAtIndexCharacterIndex].Parameters[glyphs].Type=IntPtr</Patch>
        <Patch>Enumerations[Layout_Options].Name=NSLayoutOption</Patch>
        <Patch>Enumerations[NSLayoutOption].BaseType=NSUInteger</Patch>
        <Patch>Enumerations[NSLayoutOption].Flags=true</Patch>
      </Protocol>
      <Protocol name="NSIgnoreMisspelledWords">
      </Protocol>
      <Protocol name="NSImageDelegate">
        <Patch>DelegateFor=NSImage</Patch>
        <Patch>DelegateProperty=Delegate</Patch>
      </Protocol>
      <Protocol name="NSLayoutManagerDelegate">
        <Patch>DelegateFor=NSLayoutManager</Patch>
        <Patch>DelegateProperty=Delegate</Patch>
      </Protocol>
      <Protocol name="NSMatrixDelegate">
        <Patch>BaseType=NSControlTextEditingDelegate</Patch>
        <Patch>DelegateFor=NSMatrix</Patch>
        <Patch>DelegateProperty=Delegate</Patch>
      </Protocol>
      <Protocol name="NSMenuDelegate">
        <Patch>DelegateFor=NSMenu</Patch>
        <Patch>DelegateProperty=Delegate</Patch>
        <Patch>Methods[MenuHasKeyEquivalentForEventTargetAction].Parameters[target].Type=Id</Patch>
        <Patch>Methods[MenuHasKeyEquivalentForEventTargetAction].Parameters[target].IsOut=true</Patch>
        <Patch>Methods[MenuHasKeyEquivalentForEventTargetAction].Parameters[action].Type=IntPtr</Patch>
        <Patch>Methods[MenuHasKeyEquivalentForEventTargetAction].Parameters[action].IsOut=true</Patch>
      </Protocol>
      <Protocol name="NSMenuValidation">
      </Protocol>
      <Protocol name="NSNibAwaking">
      </Protocol>
      <Protocol name="NSOpenSavePanelDelegate">
        <Patch>DelegateFor=NSOpenSavePanel</Patch>
        <Patch>DelegateProperty=Delegate</Patch>
      </Protocol>
      <Protocol name="NSOutlineViewDataSource">
      </Protocol>
      <Protocol name="NSOutlineViewDelegate">
        <Patch>BaseType=NSTableViewDelegate</Patch>
        <Patch>DelegateFor=NSOutlineView</Patch>
        <Patch>DelegateProperty=Delegate</Patch>
<Patch>Methods[OutlineViewColumnDidMove]=<![CDATA[
<Method Generate="true" CopyInDescendants="false" Static="false" GenerateConstructor="true">
<Summary>
<Line>Invoked whenever the user moves a column in the outline view.</Line>
</Summary>
<MinAvailability>Mac OS X v10.0</MinAvailability>
<Name>OutlineViewColumnDidMove</Name>
<Selector>outlineViewColumnDidMove:</Selector>
<Signature>- (void)outlineViewColumnDidMove:(NSNotification *)notification</Signature>
<ReturnType>void</ReturnType>
<Parameters>
<Parameter Generate="true" CopyInDescendants="false" IsOut="false" IsByRef="false" IsBlock="false"><Summary><Line>The posted notification.</Line></Summary><Name>notification</Name><Type>NSNotification</Type></Parameter></Parameters></Method>
]]></Patch>
<Patch>Methods[OutlineViewColumnDidResize]=<![CDATA[
<Method Generate="true" CopyInDescendants="false" Static="false" GenerateConstructor="true">
<Summary>
<Line>Invoked whenever the user resizes a column in the outline view.</Line>
</Summary>
<MinAvailability>Mac OS X v10.0</MinAvailability>
<Name>OutlineViewColumnDidResize</Name>
<Selector>outlineViewColumnDidResize:</Selector>
<Signature>- (void)outlineViewColumnDidResize:(NSNotification *)notification</Signature>
<ReturnType>void</ReturnType>
<Parameters>
<Parameter Generate="true" CopyInDescendants="false" IsOut="false" IsByRef="false" IsBlock="false"><Summary><Line>The posted notification.</Line></Summary><Name>notification</Name><Type>NSNotification</Type></Parameter></Parameters></Method>
]]></Patch>
<Patch>Methods[OutlineViewItemDidCollapse]=<![CDATA[
<Method Generate="true" CopyInDescendants="false" Static="false" GenerateConstructor="true">
<Summary>
<Line>Invoked when the did collapse notification is posted—that is, whenever the user collapses an item in the outline view.</Line>
</Summary>
<MinAvailability>Mac OS X v10.0</MinAvailability>
<Name>OutlineViewItemDidCollapse</Name>
<Selector>outlineViewItemDidCollapse:</Selector>
<Signature>- (void)outlineViewItemDidCollapse:(NSNotification *)notification</Signature>
<ReturnType>void</ReturnType>
<Parameters>
<Parameter Generate="true" CopyInDescendants="false" IsOut="false" IsByRef="false" IsBlock="false"><Summary><Line>The posted notification.</Line></Summary><Name>notification</Name><Type>NSNotification</Type></Parameter></Parameters></Method>
]]></Patch>
<Patch>Methods[OutlineViewItemDidExpand]=<![CDATA[
<Method Generate="true" CopyInDescendants="false" Static="false" GenerateConstructor="true">
<Summary>
<Line>Invoked when notification is posted—that is, whenever the user expands an item in the outline view.</Line>
</Summary>
<MinAvailability>Mac OS X v10.0</MinAvailability>
<Name>OutlineViewItemDidExpand</Name>
<Selector>outlineViewItemDidExpand:</Selector>
<Signature>- (void)outlineViewItemDidExpand:(NSNotification *)notification</Signature>
<ReturnType>void</ReturnType>
<Parameters>
<Parameter Generate="true" CopyInDescendants="false" IsOut="false" IsByRef="false" IsBlock="false"><Summary><Line>The posted notification.</Line></Summary><Name>notification</Name><Type>NSNotification</Type></Parameter></Parameters></Method>
]]></Patch>
<Patch>Methods[OutlineViewItemWillCollapse]=<![CDATA[
<Method Generate="true" CopyInDescendants="false" Static="false" GenerateConstructor="true">
<Summary>
<Line>Invoked when notification is posted—that is, whenever the user is about to collapse an item in the outline view.</Line>
</Summary>
<MinAvailability>Mac OS X v10.0</MinAvailability>
<Name>OutlineViewItemWillCollapse</Name>
<Selector>outlineViewItemWillCollapse:</Selector>
<Signature>- (void)outlineViewItemWillCollapse:(NSNotification *)notification</Signature>
<ReturnType>void</ReturnType>
<Parameters>
<Parameter Generate="true" CopyInDescendants="false" IsOut="false" IsByRef="false" IsBlock="false"><Summary><Line>The posted notification.</Line></Summary><Name>notification</Name><Type>NSNotification</Type></Parameter></Parameters></Method>
]]></Patch>
<Patch>Methods[OutlineViewItemWillExpand]=<![CDATA[
<Method Generate="true" CopyInDescendants="false" Static="false" GenerateConstructor="true">
<Summary>
<Line>Invoked when notification is posted—that is, whenever the user is about to expand an item in the outline view.</Line>
</Summary>
<MinAvailability>Mac OS X v10.0</MinAvailability>
<Name>OutlineViewItemWillExpand</Name>
<Selector>outlineViewItemWillExpand:</Selector>
<Signature>- (void)outlineViewItemWillExpand:(NSNotification *)notification</Signature>
<ReturnType>void</ReturnType>
<Parameters>
<Parameter Generate="true" CopyInDescendants="false" IsOut="false" IsByRef="false" IsBlock="false"><Summary><Line>The posted notification.</Line></Summary><Name>notification</Name><Type>NSNotification</Type></Parameter></Parameters></Method>
]]></Patch>
<Patch>Methods[OutlineViewSelectionDidChange]=<![CDATA[
<Method Generate="true" CopyInDescendants="false" Static="false" GenerateConstructor="true">
<Summary>
<Line>Invoked when the selection did change notification is posted—that is, immediately after the outline view’s selection has changed.</Line>
</Summary>
<MinAvailability>Mac OS X v10.0</MinAvailability>
<Name>OutlineViewSelectionDidChange</Name>
<Selector>outlineViewSelectionDidChange:</Selector>
<Signature>- (void)outlineViewSelectionDidChange:(NSNotification *)notification</Signature>
<ReturnType>void</ReturnType>
<Parameters>
<Parameter Generate="true" CopyInDescendants="false" IsOut="false" IsByRef="false" IsBlock="false"><Summary><Line>The posted notification.</Line></Summary><Name>notification</Name><Type>NSNotification</Type></Parameter></Parameters></Method>
]]></Patch>
<Patch>Methods[OutlineViewSelectionIsChanging]=<![CDATA[
<Method Generate="true" CopyInDescendants="false" Static="false" GenerateConstructor="true">
<Summary>
<Line>Invoked when notification is posted—that is, whenever the outline view’s selection changes.</Line>
</Summary>
<MinAvailability>Mac OS X v10.0</MinAvailability>
<Name>OutlineViewSelectionIsChanging</Name>
<Selector>outlineViewSelectionIsChanging:</Selector>
<Signature>- (void)outlineViewSelectionIsChanging:(NSNotification *)notification</Signature>
<ReturnType>void</ReturnType>
<Parameters>
<Parameter Generate="true" CopyInDescendants="false" IsOut="false" IsByRef="false" IsBlock="false"><Summary><Line>The posted notification.</Line></Summary><Name>notification</Name><Type>NSNotification</Type></Parameter></Parameters></Method>
]]></Patch>
      </Protocol>
      <Protocol name="NSPanelDelegate">
        <Patch>BaseType=NSWindowDelegate</Patch>
        <Patch>DelegateFor=NSPanel</Patch>
        <Patch>DelegateProperty=Delegate</Patch>
      </Protocol>
      <Protocol name="NSPasteboardItemDataProvider">
      </Protocol>
      <Protocol name="NSPasteboardReading">
        <Patch>Enumerations[Pasteboard_Reading_Options].Name=NSPasteboardReadingOptions</Patch>
        <Patch>Enumerations[NSPasteboardReadingOptions].BaseType=NSUInteger</Patch>
      </Protocol>
      <Protocol name="NSPasteboardWriting">
        <Patch>Enumerations[Pasteboard_Writing_Options].Name=NSPasteboardWritingOptions</Patch>
        <Patch>Enumerations[NSPasteboardWritingOptions].BaseType=NSUInteger</Patch>
      </Protocol>
      <Protocol name="NSPathCellDelegate">
        <Patch>DelegateFor=NSPathCell</Patch>
        <Patch>DelegateProperty=Delegate</Patch>
      </Protocol>
      <Protocol name="NSPathControlDelegate">
        <Patch>DelegateFor=NSPathControl</Patch>
        <Patch>DelegateProperty=Delegate</Patch>
      </Protocol>
      <Protocol name="NSPlaceholders">
      </Protocol>
      <Protocol name="NSPopoverDelegate">
        <Patch>DelegateFor=NSPopover</Patch>
        <Patch>DelegateProperty=Delegate</Patch>
      </Protocol>
      <Protocol name="NSPrintPanelAccessorizing">
      </Protocol>
      <Protocol name="NSRuleEditorDelegate">
        <Patch>DelegateFor=NSRuleEditor</Patch>
        <Patch>DelegateProperty=Delegate</Patch>
      </Protocol>
      <Protocol name="NSRulerViewDelegate">
        <Patch>DelegateFor=NSRulerView</Patch>
      </Protocol>
      <Protocol name="NSServicesRequests">
      </Protocol>
      <Protocol name="NSSoundDelegate">
        <Patch>DelegateFor=NSSound</Patch>
        <Patch>DelegateProperty=Delegate</Patch>
      </Protocol>
      <Protocol name="NSSpeechRecognizerDelegate">
        <Patch>DelegateFor=NSSpeechRecognizer</Patch>
        <Patch>DelegateProperty=Delegate</Patch>
      </Protocol>
      <Protocol name="NSSpeechSynthesizerDelegate">
        <Patch>DelegateFor=NSSpeechSynthesizer</Patch>
        <Patch>DelegateProperty=Delegate</Patch>
      </Protocol>
      <Protocol name="NSSplitViewDelegate">
        <Patch>DelegateFor=NSSplitView</Patch>
        <Patch>DelegateProperty=Delegate</Patch>
      </Protocol>
      <Protocol name="NSTableViewDataSource;NSTableDataSource">
      </Protocol>
      <Protocol name="NSTableViewDelegate">
        <Patch>BaseType=NSControlTextEditingDelegate</Patch>
        <Patch>DelegateFor=NSTableView</Patch>
        <Patch>DelegateProperty=Delegate</Patch>
      </Protocol>
      <Protocol name="NSTabViewDelegate">
        <Patch>DelegateFor=NSTabView</Patch>
        <Patch>DelegateProperty=Delegate</Patch>
      </Protocol>
      <Protocol name="NSTextAttachmentCell">
      </Protocol>
      <Protocol name="NSTextDelegate">
        <Patch>DelegateFor=NSText</Patch>
        <Patch>DelegateProperty=Delegate</Patch>
      </Protocol>
      <Protocol name="NSTextFieldDelegate">
        <Patch>BaseType=NSControlTextEditingDelegate</Patch>
        <Patch>DelegateFor=NSTextField</Patch>
        <Patch>DelegateProperty=Delegate</Patch>
      </Protocol>
      <Protocol name="NSTextFinderClient">
        <Patch>Methods[StringAtIndexEffectiveRangeEndsWithSearchBoundary].Parameters[outFlag].Type=bool</Patch>
        <Patch>Methods[StringAtIndexEffectiveRangeEndsWithSearchBoundary].Parameters[outFlag].IsOut=true</Patch>
      </Protocol>
      <Protocol name="NSTextFinderBarContainer">
      </Protocol>
      <Protocol name="NSTextInput">
      </Protocol>
      <Protocol name="NSTextInputClient">
      </Protocol>
      <Protocol name="NSTextLayoutOrientationProvider">
      </Protocol>
      <Protocol name="NSTextStorageDelegate">
        <Patch>DelegateFor=NSTextStorage</Patch>
        <Patch>DelegateProperty=Delegate</Patch>
      </Protocol>
      <Protocol name="NSTextViewDelegate">
        <Patch>DelegateFor=NSTextView</Patch>
        <Patch>DelegateProperty=Delegate</Patch>
        <Patch>Methods[TextViewCompletionsForPartialWordRangeIndexOfSelectedItem].Parameters[index].Type=NSInteger</Patch>
        <Patch>Methods[TextViewCompletionsForPartialWordRangeIndexOfSelectedItem].Parameters[index].IsOut=true</Patch>
        <Patch>Methods[TextViewWillCheckTextInRangeOptionsTypes].Parameters[checkingTypes].Type=NSTextCheckingTypes</Patch>
        <Patch>Methods[TextViewWillCheckTextInRangeOptionsTypes].Parameters[checkingTypes].IsByRef=true</Patch>
      </Protocol>
      <Protocol name="NSTokenFieldCellDelegate">
        <Patch>DelegateFor=NSTokenFieldCell</Patch>
        <Patch>DelegateProperty=Delegate</Patch>
        <Patch>Methods[TokenFieldCellCompletionsForSubstringIndexOfTokenIndexOfSelectedItem].Parameters[selectedIndex].Type=NSInteger</Patch>
        <Patch>Methods[TokenFieldCellCompletionsForSubstringIndexOfTokenIndexOfSelectedItem].Parameters[selectedIndex].IsOut=true</Patch>
      </Protocol>
      <Protocol name="NSTokenFieldDelegate">
        <Patch>DelegateFor=NSTokenField</Patch>
        <Patch>DelegateProperty=Delegate</Patch>
        <Patch>Methods[TokenFieldCompletionsForSubstringIndexOfTokenIndexOfSelectedItem].Parameters[selectedIndex].Type=NSInteger</Patch>
        <Patch>Methods[TokenFieldCompletionsForSubstringIndexOfTokenIndexOfSelectedItem].Parameters[selectedIndex].IsOut=true</Patch>
      </Protocol>
      <Protocol name="NSToolbarDelegate">
        <Patch>DelegateFor=NSToolbar</Patch>
        <Patch>DelegateProperty=Delegate</Patch>
      </Protocol>
      <Protocol name="NSToolbarItemValidation">
      </Protocol>
      <Protocol name="NSToolTipOwner">
      </Protocol>
      <Protocol name="NSUserInterfaceValidations">
      </Protocol>
      <Protocol name="NSUserInterfaceItemIdentification">
      </Protocol>
      <Protocol name="NSUserInterfaceItemSearching">
      </Protocol>
      <Protocol name="NSValidatedUserInterfaceItem">
      </Protocol>
      <Protocol name="NSWindowDelegate">
        <Patch>DelegateFor=NSWindow</Patch>
        <Patch>DelegateProperty=Delegate</Patch>
      </Protocol>
      <Protocol name="NSWindowRestoration">
      </Protocol>
      <Protocol name="NSWindowScripting">
      </Protocol>

      <Protocol name="NSDraggingSource.Deprecated"></Protocol>

    </Protocols>
    <Enumerations>
      <Enumeration name="NSTrackingAreaOptions">
        <Patch>BaseType=NSUInteger</Patch>
      </Enumeration>
      <Enumeration name="NSTrackingRectTag">
        <Patch>BaseType=NSUInteger</Patch>
      </Enumeration>
    </Enumerations>
  </Framework>
  <Framework name="AVFoundation" usings="Foundation,AppKit,ApplicationServices,CoreMedia,QuartzCore,Kernel" assembly="Monobjc.AVFoundation">
    <Types>
      <Type name="AVFoundationFramework.Functions">
      </Type>
      <Type name="AVFoundationFramework.AudioSettings.Constants">
      </Type>
      <Type name="AVFoundationFramework.Constants">
      </Type>
      <Type name="AVFoundationFramework.Error.Constants">
        <Patch>Enumerations[General_Error_Codes].Name=AVErrorCodes</Patch>
        <Patch>Enumerations[AVErrorCodes].BaseType=int</Patch>
      </Type>
      <Type name="AVFoundationFramework.ID3.Constants">
      </Type>
      <Type name="AVFoundationFramework.iTunes.Constants">
      </Type>
      <Type name="AVFoundationFramework.QuickTime.Constants">
      </Type>
    </Types>
    <Classes>
      <Class name="AVAsset">
        <Patch>Methods[AssetWithURL].ReturnType=AVAsset</Patch>
      </Class>
      <Class name="AVAssetExportSession"></Class>
      <Class name="AVAssetImageGenerator">
        <Patch>Methods[CopyCGImageAtTimeActualTimeError].Parameters[actualTime].Type=CMTime</Patch>
        <Patch>Methods[CopyCGImageAtTimeActualTimeError].Parameters[actualTime].IsOut=true</Patch>
        <Replace type="Html">
          <Source><![CDATA[<h3 class="constantGroup">AVAssetImageGeneratorResult</h3><p class="abstract">Constants to indicate the outcome of image generation.</p><pre class="declaration">
{]]></Source>
          <With><![CDATA[<h3 class="constantGroup">AVAssetImageGeneratorResult</h3><p class="abstract">Constants to indicate the outcome of image generation.</p><pre class="declaration">
enum {]]></With>
        </Replace>
        <Replace type="Generated">
          <Source><![CDATA[ObjectiveCRuntime.GetInstance<CMTime>(Marshal.ReadIntPtr(__local1));]]></Source>
          <With><![CDATA[(CMTime) Marshal.PtrToStructure(__local1, typeof(CMTime));]]></With>
        </Replace>
      </Class>
      <Class name="AVAssetReader">
        <Patch>Enumerations[Reader_Status_Constants].Name=AVAssetReaderStatus</Patch>
        <Patch>Enumerations[AVAssetReaderStatus].BaseType=NSInteger</Patch>
      </Class>
      <Class name="AVAssetReaderAudioMixOutput"></Class>
      <Class name="AVAssetReaderOutput"></Class>
      <Class name="AVAssetReaderTrackOutput"></Class>
      <Class name="AVAssetReaderVideoCompositionOutput"></Class>
      <Class name="AVAssetTrack"></Class>
      <Class name="AVAssetTrackSegment"></Class>
      <Class name="AVAssetWriter">
        <Patch>Enumerations[Status_Constants].Name=AVAssetWriterStatus</Patch>
        <Patch>Enumerations[AVAssetWriterStatus].BaseType=NSInteger</Patch>
      </Class>
      <Class name="AVAssetWriterInput"></Class>
      <Class name="AVAssetWriterInputPixelBufferAdaptor"></Class>
      <Class name="AVAudioMix"></Class>
      <Class name="AVAudioMixInputParameters">
        <Patch>Methods[GetVolumeRampForTimeStartVolumeEndVolumeTimeRange].Parameters[startVolume].Type=float</Patch>
        <Patch>Methods[GetVolumeRampForTimeStartVolumeEndVolumeTimeRange].Parameters[startVolume].IsOut=true</Patch>
        <Patch>Methods[GetVolumeRampForTimeStartVolumeEndVolumeTimeRange].Parameters[endVolume].Type=float</Patch>
        <Patch>Methods[GetVolumeRampForTimeStartVolumeEndVolumeTimeRange].Parameters[endVolume].IsOut=true</Patch>
        <Patch>Methods[GetVolumeRampForTimeStartVolumeEndVolumeTimeRange].Parameters[timeRange].Type=CMTimeRange</Patch>
        <Patch>Methods[GetVolumeRampForTimeStartVolumeEndVolumeTimeRange].Parameters[timeRange].IsOut=true</Patch>
        <Replace type="Generated">
          <Source><![CDATA[ObjectiveCRuntime.GetInstance<CMTimeRange>(Marshal.ReadIntPtr(__local3));]]></Source>
          <With><![CDATA[(CMTimeRange) Marshal.PtrToStructure(__local3, typeof(CMTimeRange));]]></With>
        </Replace>
      </Class>
      <Class name="AVAudioPlayer"></Class>
      <Class name="AVAudioRecorder"></Class>
      <Class name="AVCaptureAudioChannel"></Class>
      <Class name="AVCaptureAudioDataOutput"></Class>
      <Class name="AVCaptureAudioFileOutput"></Class>
      <Class name="AVCaptureAudioPreviewOutput"></Class>
      <Class name="AVCaptureConnection">
        <Patch>Enumerations[AVCaptureVideoOrientation].Generate=false</Patch>
      </Class>
      <Class name="AVCaptureDevice"></Class>
      <Class name="AVCaptureDeviceFormat"></Class>
      <Class name="AVCaptureDeviceInput"></Class>
      <Class name="AVCaptureDeviceInputSource"></Class>
      <Class name="AVCaptureFileOutput"></Class>
      <Class name="AVCaptureInput"></Class>
      <Class name="AVCaptureInputPort"></Class>
      <Class name="AVCaptureMovieFileOutput"></Class>
      <Class name="AVCaptureOutput"></Class>
      <Class name="AVCaptureScreenInput"></Class>
      <Class name="AVCaptureSession"></Class>
      <Class name="AVCaptureStillImageOutput"></Class>
      <Class name="AVCaptureVideoDataOutput"></Class>
      <Class name="AVCaptureVideoPreviewLayer">
        <Patch>Methods[InitWithSessionWithNoConnection].GenerateConstructor=false</Patch>
      </Class>
      <Class name="AVComposition"></Class>
      <Class name="AVCompositionTrack"></Class>
      <Class name="AVCompositionTrackSegment"></Class>
      <Class name="AVFrameRateRange"></Class>
      <Class name="AVMetadataItem">
        <Patch>Properties[Key].Type=Id</Patch>
        <Patch>Properties[Value].Type=Id</Patch>
      </Class>
      <Class name="AVMutableAudioMix">
        <Replace type="Generated">
          <Source><![CDATA[public virtual NSArray InputParameters]]></Source>
          <With><![CDATA[public new NSArray InputParameters]]></With>
        </Replace>
      </Class>
      <Class name="AVMutableAudioMixInputParameters">
        <Replace type="Generated">
          <Source><![CDATA[public virtual int TrackID]]></Source>
          <With><![CDATA[public new int TrackID]]></With>
        </Replace>
      </Class>
      <Class name="AVMutableComposition">
        <Replace type="Generated">
          <Source><![CDATA[public virtual CGSize NaturalSize]]></Source>
          <With><![CDATA[public new CGSize NaturalSize]]></With>
        </Replace>
      </Class>
      <Class name="AVMutableCompositionTrack">
        <Replace type="Generated">
          <Source><![CDATA[public virtual NSString ExtendedLanguageTag]]></Source>
          <With><![CDATA[public new NSString ExtendedLanguageTag]]></With>
        </Replace>
        <Replace type="Generated">
          <Source><![CDATA[public virtual NSString LanguageCode]]></Source>
          <With><![CDATA[public new NSString LanguageCode]]></With>
        </Replace>
        <Replace type="Generated">
          <Source><![CDATA[public virtual int NaturalTimeScale]]></Source>
          <With><![CDATA[public new int NaturalTimeScale]]></With>
        </Replace>
        <Replace type="Generated">
          <Source><![CDATA[public virtual CGAffineTransform PreferredTransform]]></Source>
          <With><![CDATA[public new CGAffineTransform PreferredTransform]]></With>
        </Replace>
        <Replace type="Generated">
          <Source><![CDATA[public virtual float PreferredVolume]]></Source>
          <With><![CDATA[public new float PreferredVolume]]></With>
        </Replace>
        <Replace type="Generated">
          <Source><![CDATA[public virtual NSArray Segments]]></Source>
          <With><![CDATA[public new NSArray Segments]]></With>
        </Replace>
      </Class>
      <Class name="AVMutableMetadataItem">
        <Patch>Properties[Key].Type=Id</Patch>
        <Patch>Properties[Value].Type=Id</Patch>
        <Replace type="Generated">
          <Source><![CDATA[public virtual CMTime Duration]]></Source>
          <With><![CDATA[ public new CMTime Duration]]></With>
        </Replace>
        <Replace type="Generated">
          <Source><![CDATA[public virtual NSDictionary ExtraAttributes]]></Source>
          <With><![CDATA[public new NSDictionary ExtraAttributes]]></With>
        </Replace>
        <Replace type="Generated">
          <Source><![CDATA[public virtual Id Key]]></Source>
          <With><![CDATA[public new Id Key]]></With>
        </Replace>
        <Replace type="Generated">
          <Source><![CDATA[public virtual NSString KeySpace]]></Source>
          <With><![CDATA[public new NSString KeySpace]]></With>
        </Replace>
        <Replace type="Generated">
          <Source><![CDATA[public virtual NSLocale Locale]]></Source>
          <With><![CDATA[public new NSLocale Locale]]></With>
        </Replace>
        <Replace type="Generated">
          <Source><![CDATA[public virtual CMTime Time]]></Source>
          <With><![CDATA[public new CMTime Time]]></With>
        </Replace>
        <Replace type="Generated">
          <Source><![CDATA[public virtual Id Value]]></Source>
          <With><![CDATA[public new Id Value]]></With>
        </Replace>
	  </Class>
      <Class name="AVMutableTimedMetadataGroup">
        <Replace type="Generated">
          <Source><![CDATA[public virtual NSArray Items]]></Source>
          <With><![CDATA[public new NSArray Items]]></With>
        </Replace>
        <Replace type="Generated">
          <Source><![CDATA[public virtual CMTimeRange TimeRange]]></Source>
          <With><![CDATA[public new CMTimeRange TimeRange]]></With>
        </Replace>
      </Class>
      <Class name="AVMutableVideoComposition">
        <Replace type="Generated">
          <Source><![CDATA[public virtual AVVideoCompositionCoreAnimationTool AnimationTool]]></Source>
          <With><![CDATA[public new AVVideoCompositionCoreAnimationTool AnimationTool]]></With>
        </Replace>
        <Replace type="Generated">
          <Source><![CDATA[public virtual CMTime FrameDuration]]></Source>
          <With><![CDATA[public new CMTime FrameDuration]]></With>
        </Replace>
        <Replace type="Generated">
          <Source><![CDATA[public virtual NSArray Instructions]]></Source>
          <With><![CDATA[public new NSArray Instructions]]></With>
        </Replace>
        <Replace type="Generated">
          <Source><![CDATA[public virtual CGSize RenderSize]]></Source>
          <With><![CDATA[public new CGSize RenderSize]]></With>
        </Replace>
      </Class>
      <Class name="AVMutableVideoCompositionInstruction">
        <Replace type="Generated">
          <Source><![CDATA[public virtual bool EnablePostProcessing]]></Source>
          <With><![CDATA[public new bool EnablePostProcessing]]></With>
        </Replace>
        <Replace type="Generated">
          <Source><![CDATA[public virtual NSArray LayerInstructions]]></Source>
          <With><![CDATA[public new NSArray LayerInstructions]]></With>
        </Replace>
        <Replace type="Generated">
          <Source><![CDATA[public virtual CMTimeRange TimeRange]]></Source>
          <With><![CDATA[public new CMTimeRange TimeRange]]></With>
        </Replace>
      </Class>
      <Class name="AVMutableVideoCompositionLayerInstruction">
        <Replace type="Generated">
          <Source><![CDATA[public virtual int TrackID]]></Source>
          <With><![CDATA[public new int TrackID]]></With>
        </Replace>
      </Class>
      <Class name="AVPlayer">
        <Patch>Methods[PlayerWithPlayerItem].ReturnType=AVPlayer</Patch>
        <Patch>Methods[PlayerWithURL].ReturnType=AVPlayer</Patch>
      </Class>
      <Class name="AVPlayerItem"></Class>
      <Class name="AVPlayerItemAccessLog"></Class>
      <Class name="AVPlayerItemAccessLogEvent"></Class>
      <Class name="AVPlayerItemErrorLog"></Class>
      <Class name="AVPlayerItemErrorLogEvent"></Class>
      <Class name="AVPlayerItemTrack"></Class>
      <Class name="AVPlayerLayer"></Class>
      <Class name="AVQueuePlayer"></Class>
      <Class name="AVSynchronizedLayer"></Class>
      <Class name="AVTimedMetadataGroup"></Class>
      <Class name="AVURLAsset">
        <Replace type="Generated">
          <Source><![CDATA[0UL]]></Source>
          <With><![CDATA[0]]></With>
        </Replace>
        <Replace type="Generated">
          <Source><![CDATA[1UL <<]]></Source>
          <With><![CDATA[1U <<]]></With>
        </Replace>
        <Replace type="Generated">
          <Source><![CDATA[0xFFFFUL]]></Source>
          <With><![CDATA[0xFFFFU]]></With>
        </Replace>
      </Class>
      <Class name="AVVideoComposition"></Class>
      <Class name="AVVideoCompositionCoreAnimationTool"></Class>
      <Class name="AVVideoCompositionInstruction"></Class>
      <Class name="AVVideoCompositionLayerInstruction">
        <Patch>Methods[GetOpacityRampForTimeStartOpacityEndOpacityTimeRange].Parameters[startOpacity].Type=float</Patch>
        <Patch>Methods[GetOpacityRampForTimeStartOpacityEndOpacityTimeRange].Parameters[startOpacity].IsOut=true</Patch>
        <Patch>Methods[GetOpacityRampForTimeStartOpacityEndOpacityTimeRange].Parameters[endOpacity].Type=float</Patch>
        <Patch>Methods[GetOpacityRampForTimeStartOpacityEndOpacityTimeRange].Parameters[endOpacity].IsOut=true</Patch>
        <Patch>Methods[GetOpacityRampForTimeStartOpacityEndOpacityTimeRange].Parameters[timeRange].Type=CMTimeRange</Patch>
        <Patch>Methods[GetOpacityRampForTimeStartOpacityEndOpacityTimeRange].Parameters[timeRange].IsOut=true</Patch>
        <Patch>Methods[GetTransformRampForTimeStartTransformEndTransformTimeRange].Parameters[startTransform].Type=CGAffineTransform</Patch>
        <Patch>Methods[GetTransformRampForTimeStartTransformEndTransformTimeRange].Parameters[startTransform].IsOut=true</Patch>
        <Patch>Methods[GetTransformRampForTimeStartTransformEndTransformTimeRange].Parameters[endTransform].Type=CGAffineTransform</Patch>
        <Patch>Methods[GetTransformRampForTimeStartTransformEndTransformTimeRange].Parameters[endTransform].IsOut=true</Patch>
        <Patch>Methods[GetTransformRampForTimeStartTransformEndTransformTimeRange].Parameters[timeRange].Type=CMTimeRange</Patch>
        <Patch>Methods[GetTransformRampForTimeStartTransformEndTransformTimeRange].Parameters[timeRange].IsOut=true</Patch>
        <Replace type="Generated">
          <Source><![CDATA[ObjectiveCRuntime.GetInstance<CMTimeRange>(Marshal.ReadIntPtr(__local3));]]></Source>
          <With><![CDATA[(CMTimeRange) Marshal.PtrToStructure(__local3, typeof(CMTimeRange));]]></With>
        </Replace>
      </Class>
      <Class name="NSCoder_AVFoundationAdditions">
        <Patch>AdditionFor=NSCoder</Patch>
      </Class>
      <Class name="NSValue_AVFoundationAdditions">
        <Patch>AdditionFor=NSValue</Patch>
      </Class>
    </Classes>
    <Protocols>
      <Protocol name="AVAsynchronousKeyValueLoading">
        <Patch>Enumerations[Key_Loading_Status].Name=AVKeyValueStatus</Patch>
        <Patch>Enumerations[AVKeyValueStatus].BaseType=NSInteger</Patch>
	  </Protocol>
      <Protocol name="AVAudioPlayerDelegate"></Protocol>
      <Protocol name="AVAudioRecorderDelegate"></Protocol>
      <Protocol name="AVCaptureAudioDataOutputSampleBufferDelegate"></Protocol>
      <Protocol name="AVCaptureFileOutputDelegate"></Protocol>
      <Protocol name="AVCaptureFileOutputRecordingDelegate"></Protocol>
      <Protocol name="AVCaptureVideoDataOutputSampleBufferDelegate"></Protocol>
    </Protocols>
  </Framework>
  <Framework name="CoreData" usings="Foundation,AppKit,QuartzCore" assembly="Monobjc.AppKit">
    <Types>
      <Type name="CoreDataFramework.Constants"></Type>
    </Types>
    <Classes>
      <Class name="NSAtomicStore">
      </Class>
      <Class name="NSAtomicStoreCacheNode">
      </Class>
      <Class name="NSAttributeDescription">
        <Patch>Enumerations[NSAttributeType].BaseType=NSUInteger</Patch>
      </Class>
      <Class name="NSEntityDescription">
      </Class>
      <Class name="NSEntityMapping">
        <Patch>Enumerations[Entity_Mapping_Types].Name=NSEntityMappingType</Patch>
        <Patch>Enumerations[NSEntityMappingType].BaseType=NSUInteger</Patch>
      </Class>
      <Class name="NSEntityMigrationPolicy">
      </Class>
      <Class name="NSExpressionDescription">
      </Class>
      <Class name="NSFetchedPropertyDescription">
      </Class>
      <Class name="NSFetchRequest">
        <Replace type="Html">
          <Source><![CDATA[<a href="#//apple_ref/doc/c_ref/NSCountResultType">NSCountResultType</a>]]></Source>
          <With><![CDATA[<a href="#//apple_ref/doc/c_ref/NSCountResultType">, NSCountResultType</a>]]></With>
        </Replace>
        <Replace type="Generated">
          <Source><![CDATA[public partial class NSFetchRequest : NSPersistentStoreRequest]]></Source>
          <With>
            <![CDATA[public partial class NSFetchRequest :
#if MACOSX_10_7
        NSPersistentStoreRequest
#else
        NSObject
#endif
]]>
          </With>
        </Replace>
      </Class>
      <Class name="NSFetchRequestExpression">
        <!-- TODO: Move to constant -->
        <Patch>Enumerations[Fetch_request_expression_type].Generate=false</Patch>
      </Class>
      <Class name="NSIncrementalStore">
      </Class>
      <Class name="NSIncrementalStoreNode">
        <Replace type="Generated">
          <Source><![CDATA[public virtual ulong Version]]></Source>
          <With><![CDATA[public new ulong Version]]></With>
        </Replace>
      </Class>
      <Class name="NSManagedObject">
        <Patch>Methods[ValidateValueForKeyError].Parameters[value].Type=IntPtr</Patch>
        <Replace type="Generated">
          <Source>public virtual Id ObservationInfo</Source>
          <With>public new Id ObservationInfo</With>
        </Replace>
      </Class>
      <Class name="NSManagedObjectContext">
      </Class>
      <Class name="NSManagedObjectID">
      </Class>
      <Class name="NSManagedObjectModel">
      </Class>
      <Class name="NSMappingModel">
      </Class>
      <Class name="NSMergeConflict">
      </Class>
      <Class name="NSMergePolicy">
      </Class>
      <Class name="NSMigrationManager">
      </Class>
      <Class name="NSPersistentStore">
      </Class>
      <Class name="NSPersistentStoreCoordinator">
      </Class>
      <Class name="NSPersistentStoreRequest">
      </Class>
      <Class name="NSPropertyDescription">
      </Class>
      <Class name="NSPropertyMapping">
      </Class>
      <Class name="NSRelationshipDescription">
        <Patch>Enumerations[NSDeleteRule].BaseType=NSUInteger</Patch>
      </Class>
      <Class name="NSSaveChangesRequest">
      </Class>

      <Class name="NSPersistentStoreCoordinator.Deprecated">
        <Patch>AdditionFor=NSPersistentStoreCoordinator</Patch>
      </Class>

    </Classes>
  </Framework>
  <Framework name="CoreFoundation" usings="Foundation" assembly="Monobjc.Foundation">
    <Types>
      <Type name="CFAllocator">

      </Type>
      <Type name="CFArray">

      </Type>
      <Type name="CFAttributedString">

      </Type>
      <Type name="CFBag">

      </Type>
      <Type name="CFBinaryHeap">

      </Type>
      <Type name="CFBitVector">

      </Type>
      <Type name="CFBoolean">

      </Type>
      <Type name="CFBundle">

      </Type>
      <Type name="CFCalendar">

      </Type>
      <Type name="CFCharacterSet">

      </Type>
      <Type name="CFData">

      </Type>
      <Type name="CFDate">

      </Type>
      <Type name="CFDateFormatter">

      </Type>
      <Type name="CFDictionary">

      </Type>
      <Type name="CFError">

      </Type>
      <Type name="CFFileDescriptor">

      </Type>
      <Type name="CFLocale">

      </Type>
      <Type name="CFMachPort">

      </Type>
      <Type name="CFMessagePort">

      </Type>
      <Type name="CFMutableArray">

      </Type>
      <Type name="CFMutableAttributedString">

      </Type>
      <Type name="CFMutableBag">

      </Type>
      <Type name="CFMutableBitVector">

      </Type>
      <Type name="CFMutableCharacterSet">

      </Type>
      <Type name="CFMutableData">

      </Type>
      <Type name="CFMutableDictionary">

      </Type>
      <Type name="CFMutableSet">

      </Type>
      <Type name="CFMutableString">

      </Type>
      <Type name="CFNotificationCenter">

      </Type>
      <Type name="CFNull">

      </Type>
      <Type name="CFNumber">

      </Type>
      <Type name="CFNumberFormatter">

      </Type>
      <Type name="CFPlugIn">

      </Type>
      <Type name="CFPlugInInstance">

      </Type>
      <Type name="CFPropertyList">

      </Type>
      <Type name="CFReadStream">

      </Type>
      <Type name="CFRunLoop">

      </Type>
      <Type name="CFRunLoopObserver">

      </Type>
      <Type name="CFRunLoopSource">

      </Type>
      <Type name="CFRunLoopTimer">

      </Type>
      <Type name="CFSet">

      </Type>
      <Type name="CFSocket">

      </Type>
      <Type name="CFString">
        <Replace type="Html">
          <Source><![CDATA[<dd><p><p class=]]></Source>
          <With><![CDATA[<dd><p class=]]></With>
        </Replace>
      </Type>
      <Type name="CFStringTokenizer">

      </Type>
      <Type name="CFTimeZone">

      </Type>
      <Type name="CFTree">

      </Type>
      <Type name="CFType">
        <Patch>Functions[CFCopyTypeIDDescription].Generate=false</Patch>
        <Patch>Functions[CFGetRetainCount].Generate=false</Patch>
        <Patch>Functions[CFGetTypeID].Generate=false</Patch>
        <Patch>Functions[CFHash].Generate=false</Patch>
      </Type>
      <Type name="CFURL">

      </Type>
      <Type name="CFUserNotification">

      </Type>
      <Type name="CFUUID">

      </Type>
      <Type name="CFWriteStream">

      </Type>
      <Type name="CFXMLNode">

      </Type>
      <Type name="CFXMLParser">

      </Type>
      <Type name="CFXMLTree">

      </Type>
    </Types>
    <Structures>
      <Structure name="CFHashCode"></Structure>
      <Structure name="CFIndex"></Structure>
      <Structure name="CFOptionFlags"></Structure>
      <Structure name="CFRange"></Structure>
      <Structure name="CFTypeID"></Structure>
    </Structures>
  </Framework>
  <Framework name="CoreLocation" usings="Foundation" assembly="Monobjc.CoreLocation">
    <Types>
      <Type name="CoreLocationFramework.Constants">
        <Patch>Enumerations[CLError].Generate=false</Patch>
        <Patch>Enumerations[CLDeviceOrientation].BaseType=int</Patch>
      </Type>
    </Types>
    <Classes>
      <Class name="CLLocation">
        <Patch>Methods[DistanceFromLocation].Parameters[location].Type=CLLocation</Patch>
        <Patch>Methods[GetDistanceFrom].Parameters[location].Type=CLLocation</Patch>
      </Class>
      <Class name="CLLocationManager">
        <Patch>MinAvailability=Mac OS X v10.6</Patch>
        <Patch>Properties[Delegate].Type=Id</Patch>
        <Patch>Properties[LocationServicesEnabled]{Static=True}.Generate=false</Patch>
        <Patch>Enumerations[CLError].BaseType=int</Patch>
        <Patch>Constants[CLLocationDistance].Generate=false</Patch>
      </Class>
      <Class name="CLRegion">
      </Class>
    </Classes>
    <Protocols>
      <Protocol name="CLLocationManagerDelegate">
        <Patch>DelegateFor=CLLocationManager</Patch>
        <Patch>DelegateProperty=Delegate</Patch>
      </Protocol>
    </Protocols>
  <Enumerations>
    <Enumeration name="CLAuthorizationStatus">
    </Enumeration>
  </Enumerations>
  </Framework>
  <Framework name="CoreMedia" usings="Foundation,AppKit,ApplicationServices" assembly="Monobjc.CoreMedia">
    <Types>
      <Type name="CoreMedia.Constants">
        <Patch>Enumerations[Invalid_Track_ID_Specifier].Generate=false</Patch>
      </Type>
      <Type name="CoreMedia.DataTypes">
      </Type>
      <Type name="CMAttachment">
        <Patch>Enumerations[Attachment_Propagation].Name=CMAttachmentMode</Patch>
        <Patch>Enumerations[CMAttachmentMode].BaseType=uint</Patch>
        <Patch>Functions[CMGetAttachment].Parameters[attachmentModeOut].Type=CMAttachmentMode</Patch>
        <Patch>Functions[CMGetAttachment].Parameters[attachmentModeOut].IsOut=true</Patch>
        <Replace type="Generated">
          <Source><![CDATA[ObjectiveCRuntime.GetInstance<CMAttachmentMode>(Marshal.ReadIntPtr(__local1));]]></Source>
          <With><![CDATA[(CMAttachmentMode) Marshal.ReadInt32(__local1);]]></With>
        </Replace>
      </Type>
      <Type name="CMBlockBuffer">
        <Patch>Enumerations[Custom_Block_Source_Version].Generate=false</Patch>
        <Patch>Enumerations[CMBlockBuffer_Flags].Name=CMBlockBufferFlags</Patch>
        <Patch>Enumerations[CMBlockBufferFlags].BaseType=uint</Patch>
        <Patch>Enumerations[Error_Flags].Name=CMBlockBufferErrors</Patch>
        <Patch>Enumerations[CMBlockBufferErrors].BaseType=int</Patch>
        <Patch>Functions[CMBlockBufferAccessDataBytes].Parameters[returnedPointer].Type=IntPtr</Patch>
        <Patch>Functions[CMBlockBufferAccessDataBytes].Parameters[returnedPointer].IsOut=true</Patch>
        <Patch>Functions[CMBlockBufferAppendMemoryBlock].Parameters[customBlockSource].Type=CMBlockBufferCustomBlockSource</Patch>
        <Patch>Functions[CMBlockBufferAppendMemoryBlock].Parameters[customBlockSource].IsByRef=true</Patch>
        <Patch>Functions[CMBlockBufferCreateContiguous].Parameters[customBlockSource].Type=CMBlockBufferCustomBlockSource</Patch>
        <Patch>Functions[CMBlockBufferCreateContiguous].Parameters[customBlockSource].IsByRef=true</Patch>
        <Patch>Functions[CMBlockBufferCreateContiguous].Parameters[newBBufOut].Type=IntPtr</Patch>
        <Patch>Functions[CMBlockBufferCreateContiguous].Parameters[newBBufOut].IsOut=true</Patch>
        <Patch>Functions[CMBlockBufferCreateEmpty].Parameters[newBBufOut].Type=IntPtr</Patch>
        <Patch>Functions[CMBlockBufferCreateEmpty].Parameters[newBBufOut].IsOut=true</Patch>
        <Patch>Functions[CMBlockBufferCreateWithBufferReference].Parameters[newBBufOut].Type=IntPtr</Patch>
        <Patch>Functions[CMBlockBufferCreateWithBufferReference].Parameters[newBBufOut].IsOut=true</Patch>
        <Patch>Functions[CMBlockBufferCreateWithMemoryBlock].Parameters[customBlockSource].Type=CMBlockBufferCustomBlockSource</Patch>
        <Patch>Functions[CMBlockBufferCreateWithMemoryBlock].Parameters[customBlockSource].IsByRef=true</Patch>
        <Patch>Functions[CMBlockBufferCreateWithMemoryBlock].Parameters[newBBufOut].Type=IntPtr</Patch>
        <Patch>Functions[CMBlockBufferCreateWithMemoryBlock].Parameters[newBBufOut].IsOut=true</Patch>
        <Patch>Functions[CMBlockBufferGetDataPointer].Parameters[lengthAtOffset].Type=IntPtr</Patch>
        <Patch>Functions[CMBlockBufferGetDataPointer].Parameters[lengthAtOffset].IsOut=true</Patch>
        <Patch>Functions[CMBlockBufferGetDataPointer].Parameters[totalLength].Type=IntPtr</Patch>
        <Patch>Functions[CMBlockBufferGetDataPointer].Parameters[totalLength].IsOut=true</Patch>
        <Patch>Functions[CMBlockBufferGetDataPointer].Parameters[dataPointer].Type=IntPtr</Patch>
        <Patch>Functions[CMBlockBufferGetDataPointer].Parameters[dataPointer].IsOut=true</Patch>
        <Patch>Functions[CMBlockBufferGetTypeID].Generate=false</Patch>
        <Replace type="Generated">
          <Source><![CDATA[= (1L<<]]></Source>
          <With><![CDATA[= (1 <<]]></With>
        </Replace>
        <Replace type="Generated">
          <Source><![CDATA[ObjectiveCRuntime.GetInstance<CMBlockBufferCustomBlockSource>(Marshal.ReadIntPtr(__local1));]]></Source>
          <With><![CDATA[(CMBlockBufferCustomBlockSource) Marshal.PtrToStructure(__local1, typeof(CMBlockBufferCustomBlockSource));]]></With>
        </Replace>
      </Type>
      <Type name="CMBufferQueue">
        <Patch>Functions[CMBufferQueueCallForEachBuffer].Parameters[s].Name=callback</Patch>
        <Patch>Functions[CMBufferQueueCallForEachBuffer].Parameters[callback].Type=CMBufferQueueCallback</Patch>
        <Patch>Functions[CMBufferQueueCallForEachBuffer].Parameters[refcon](0).Generate=false</Patch>
        <Patch>Functions[CMBufferQueueCreate].Parameters[callbacks].Type=CMBufferCallbacks</Patch>
        <Patch>Functions[CMBufferQueueCreate].Parameters[callbacks].IsByRef=true</Patch>
        <Patch>Functions[CMBufferQueueCreate].Parameters[queueOut].Type=IntPtr</Patch>
        <Patch>Functions[CMBufferQueueCreate].Parameters[queueOut].IsOut=true</Patch>
        <Patch>Functions[CMBufferQueueGetCallbacksForUnsortedSampleBuffers].ReturnType=IntPtr</Patch>
        <Patch>Functions[CMBufferQueueGetCallbacksForUnsortedSampleBuffers].Parameters[d].Generate=false</Patch>
        <Patch>Functions[CMBufferQueueGetTypeID].Generate=false</Patch>
        <Patch>Functions[CMBufferQueueInstallTrigger].Parameters[triggerTokenOut].Type=IntPtr</Patch>
        <Patch>Functions[CMBufferQueueInstallTrigger].Parameters[triggerTokenOut].IsOut=true</Patch>
        <Patch>Functions[CMBufferQueueInstallTriggerWithIntegerThreshold].Parameters[triggerTokenOut].Type=IntPtr</Patch>
        <Patch>Functions[CMBufferQueueInstallTriggerWithIntegerThreshold].Parameters[triggerTokenOut].IsOut=true</Patch>
        <Patch>Functions[CMBufferQueueResetWithCallback].Parameters[d].Name=callback</Patch>
        <Patch>Functions[CMBufferQueueResetWithCallback].Parameters[callback].Type=CMBufferQueueCallback</Patch>
        <Patch>Functions[CMBufferQueueResetWithCallback].Parameters[refcon](0).Generate=false</Patch>
        <Patch>Enumerations[Error_Codes].Name=CMBufferQueueErrorCodes</Patch>
        <Patch>Enumerations[CMBufferQueueErrorCodes].BaseType=int</Patch>
        <Patch>Enumerations[Trigger_Conditions].Name=CMBufferQueueTriggerConditions</Patch>
        <Patch>Enumerations[CMBufferQueueTriggerConditions].BaseType=int</Patch>
        <Replace type="Generated">
          <Source><![CDATA[ObjectiveCRuntime.GetInstance<CMBufferCallbacks>(Marshal.ReadIntPtr(__local1));]]></Source>
          <With><![CDATA[(CMBufferCallbacks) Marshal.PtrToStructure(__local1, typeof(CMBufferCallbacks));]]></With>
        </Replace>
      </Type>
      <Type name="CMFormatDescription">
        <Patch>Constants[eoFormatDescriptionRef].Generate=false</Patch>
        <Patch>Functions[CMFormatDescriptionGetTypeID].Generate=false</Patch>
        <Patch>Functions[CMAudioFormatDescriptionCreate].Parameters[asbd].Type=AudioStreamBasicDescription</Patch>
        <Patch>Functions[CMAudioFormatDescriptionCreate].Parameters[asbd].IsByRef=true</Patch>
        <Patch>Functions[CMAudioFormatDescriptionCreate].Parameters[layout].Type=AudioChannelLayout</Patch>
        <Patch>Functions[CMAudioFormatDescriptionCreate].Parameters[layout].IsByRef=true</Patch>
        <Patch>Functions[CMAudioFormatDescriptionCreate].Parameters[outDesc].Type=IntPtr</Patch>
        <Patch>Functions[CMAudioFormatDescriptionCreate].Parameters[outDesc].IsOut=true</Patch>
        <Patch>Functions[CMAudioFormatDescriptionEqual].Parameters[equalityMaskOut].Type=CMAudioFormatDescriptionMask</Patch>
        <Patch>Functions[CMAudioFormatDescriptionEqual].Parameters[equalityMaskOut].IsOut=true</Patch>				
        <Patch>Functions[CMAudioFormatDescriptionGetChannelLayout].ReturnType=IntPtr</Patch>
        <Patch>Functions[CMAudioFormatDescriptionGetChannelLayout].Parameters[layoutSize].Type=NSUInteger</Patch>
        <Patch>Functions[CMAudioFormatDescriptionGetChannelLayout].Parameters[layoutSize].IsOut=true</Patch>
        <Patch>Functions[CMAudioFormatDescriptionGetFormatList].ReturnType=IntPtr</Patch>
        <Patch>Functions[CMAudioFormatDescriptionGetFormatList].Parameters[formatListSize].Type=NSUInteger</Patch>
        <Patch>Functions[CMAudioFormatDescriptionGetFormatList].Parameters[formatListSize].IsOut=true</Patch>
        <Patch>Functions[CMAudioFormatDescriptionGetMostCompatibleFormat].ReturnType=IntPtr</Patch>
        <Patch>Functions[CMAudioFormatDescriptionGetRichestDecodableFormat].ReturnType=IntPtr</Patch>
        <Patch>Functions[CMAudioFormatDescriptionGetStreamBasicDescription].ReturnType=IntPtr</Patch>
        <Patch>Functions[CMTextFormatDescriptionGetDefaultStyle].Parameters[descOut].Type=IntPtr</Patch>
        <Patch>Functions[CMTextFormatDescriptionGetDefaultStyle].Parameters[descOut].IsOut=true</Patch>
        <Patch>Functions[CMTextFormatDescriptionGetDefaultStyle].Parameters[outLocalFontID].Type=ushort</Patch>
        <Patch>Functions[CMTextFormatDescriptionGetDefaultStyle].Parameters[outLocalFontID].IsOut=true</Patch>
        <Patch>Functions[CMTextFormatDescriptionGetDefaultStyle].Parameters[outBold].Type=bool</Patch>
        <Patch>Functions[CMTextFormatDescriptionGetDefaultStyle].Parameters[outBold].IsOut=true</Patch>
        <Patch>Functions[CMTextFormatDescriptionGetDefaultStyle].Parameters[outItalic].Type=bool</Patch>
        <Patch>Functions[CMTextFormatDescriptionGetDefaultStyle].Parameters[outItalic].IsOut=true</Patch>
        <Patch>Functions[CMTextFormatDescriptionGetDefaultStyle].Parameters[outUnderline].Type=bool</Patch>
        <Patch>Functions[CMTextFormatDescriptionGetDefaultStyle].Parameters[outUnderline].IsOut=true</Patch>
        <Patch>Functions[CMTextFormatDescriptionGetDefaultStyle].Parameters[outFontSize].Type=CGFloat</Patch>
        <Patch>Functions[CMTextFormatDescriptionGetDefaultStyle].Parameters[outFontSize].IsOut=true</Patch>
        <Patch>Functions[CMTextFormatDescriptionGetDefaultStyle].Parameters[outColorComponents[4]].Name=outColorComponents</Patch>
        <Patch>Functions[CMTextFormatDescriptionGetDefaultStyle].Parameters[outColorComponents].Type=IntPtr</Patch>
				
        <Patch>Functions[CMAudioFormatDescriptionCreate].Generate=false</Patch>
        <Patch>Functions[CMAudioFormatDescriptionGetMagicCookie].Generate=false</Patch>
        <Patch>Functions[CMFormatDescriptionCreate].Generate=false</Patch>
        <Patch>Functions[CMFormatDescriptionGetExtension].Generate=false</Patch>
        <Patch>Functions[CMMetadataFormatDescriptionCreateWithKeys].Generate=false</Patch>
        <Patch>Functions[CMMetadataFormatDescriptionGetKeyWithLocalID].Generate=false</Patch>
        <Patch>Functions[CMMuxedFormatDescriptionCreate].Generate=false</Patch>
        <Patch>Functions[CMTextFormatDescriptionGetDefaultTextBox].Generate=false</Patch>
        <Patch>Functions[CMTextFormatDescriptionGetDisplayFlags].Generate=false</Patch>
        <Patch>Functions[CMTextFormatDescriptionGetFontName].Generate=false</Patch>
        <Patch>Functions[CMTextFormatDescriptionGetJustification].Generate=false</Patch>
        <Patch>Functions[CMTimeCodeFormatDescriptionCreate].Generate=false</Patch>
        <Patch>Functions[CMTimeCodeFormatDescriptionGetFrameDuration].Generate=false</Patch>
        <Patch>Functions[CMTimeCodeFormatDescriptionGetFrameQuanta].Generate=false</Patch>
        <Patch>Functions[CMTimeCodeFormatDescriptionGetTimeCodeFlags].Generate=false</Patch>
        <Patch>Functions[CMVideoFormatDescriptionCreate].Generate=false</Patch>
        <Patch>Functions[CMVideoFormatDescriptionCreateForImageBuffer].Generate=false</Patch>
        <Patch>Functions[CMVideoFormatDescriptionGetCleanAperture].Generate=false</Patch>
        <Patch>Functions[CMVideoFormatDescriptionGetDimensions].Generate=false</Patch>
        <Patch>Functions[CMVideoFormatDescriptionGetExtensionKeysCommonWithImageBuffers].Generate=false</Patch>
        <Patch>Functions[CMVideoFormatDescriptionGetPresentationDimensions].Generate=false</Patch>
        <Patch>Functions[CMVideoFormatDescriptionMatchesImageBuffer].Generate=false</Patch>
				
        <Patch>Enumerations[CMMediaType].BaseType=uint</Patch>
        <Patch>Enumerations[Error_Codes].Name=CMFormatDescriptionErrorCodes</Patch>
        <Patch>Enumerations[CMFormatDescriptionErrorCodes].BaseType=int</Patch>
        <Patch>Enumerations[CMTimeCodeFormatType].BaseType=int</Patch>
        <Patch>Enumerations[Time_Code_Flags].Name=CMFormatDescriptionTimeCodeFlags</Patch>
        <Patch>Enumerations[CMFormatDescriptionTimeCodeFlags].BaseType=int</Patch>
        <Patch>Enumerations[CMTextDisplayFlags].BaseType=uint</Patch>
        <Patch>Enumerations[CMTextFormatType].BaseType=int</Patch>
        <Patch>Enumerations[CMTextJustificationValue].BaseType=sbyte</Patch>
        <Patch>Enumerations[Audio_Format_Description_Masks].Name=CMAudioFormatDescriptionMask</Patch>
        <Patch>Enumerations[CMAudioFormatDescriptionMask].BaseType=uint</Patch>
        <Patch>Enumerations[CMMuxedStreamType].Values[kCMMuxedStreamType_DV].Value=0x65762020</Patch>
        <Patch>Enumerations[CMClosedCaptionFormatType].BaseType=uint</Patch>
        <Patch>Enumerations[Video_Profiles].Name=CMFormatDescriptionVideoProfiles</Patch>
        <Patch>Enumerations[CMFormatDescriptionVideoProfiles].BaseType=uint</Patch>
        <Patch>Enumerations[CMVideoCodecType].Values[kCMVideoCodecType_422YpCbCr8].Value=CMPixelFormatType.kCMPixelFormat_422YpCbCr8</Patch>
				
        <Replace type="Generated">
          <Source><![CDATA[ObjectiveCRuntime.GetInstance<CMAudioFormatDescriptionMask>(Marshal.ReadIntPtr(__local1));]]></Source>
          <With><![CDATA[(CMAudioFormatDescriptionMask) Marshal.ReadInt32(__local1);]]></With>
        </Replace>
      </Type>
      <Type name="CMSampleBuffer">
        <Patch>Functions[CMAudioSampleBufferCreateWithPacketDescriptions].Parameters[packetDescriptions].Type=AudioStreamPacketDescription</Patch>
        <Patch>Functions[CMAudioSampleBufferCreateWithPacketDescriptions].Parameters[packetDescriptions].IsByRef=true</Patch>
        <Patch>Functions[CMAudioSampleBufferCreateWithPacketDescriptions].Parameters[sBufOut].Type=IntPtr</Patch>
        <Patch>Functions[CMAudioSampleBufferCreateWithPacketDescriptions].Parameters[sBufOut].IsOut=true</Patch>
        <Patch>Functions[CMSampleBufferCopySampleBufferForRange].Parameters[sBufOut].Type=IntPtr</Patch>
        <Patch>Functions[CMSampleBufferCopySampleBufferForRange].Parameters[sBufOut].IsOut=true</Patch>
        <Patch>Functions[CMSampleBufferCreate].Parameters[sampleTimingArray].Type=CMSampleTimingInfo</Patch>
        <Patch>Functions[CMSampleBufferCreate].Parameters[sampleTimingArray].IsByRef=true</Patch>
        <Patch>Functions[CMSampleBufferCreate].Parameters[sampleSizeArray].Type=NSUInteger</Patch>
        <Patch>Functions[CMSampleBufferCreate].Parameters[sampleSizeArray].IsByRef=true</Patch>
        <Patch>Functions[CMSampleBufferCreate].Parameters[sBufOut].Type=IntPtr</Patch>
        <Patch>Functions[CMSampleBufferCreate].Parameters[sBufOut].IsOut=true</Patch>
        <Patch>Functions[CMSampleBufferCreateCopy].Parameters[sbufCopyOut].Type=IntPtr</Patch>
        <Patch>Functions[CMSampleBufferCreateCopy].Parameters[sbufCopyOut].IsOut=true</Patch>
        <Patch>Functions[CMSampleBufferCreateCopyWithNewTiming].Parameters[sampleTimingArray].Type=CMSampleTimingInfo</Patch>
        <Patch>Functions[CMSampleBufferCreateCopyWithNewTiming].Parameters[sampleTimingArray].IsByRef=true</Patch>
        <Patch>Functions[CMSampleBufferCreateCopyWithNewTiming].Parameters[sbufCopyOut].Type=IntPtr</Patch>
        <Patch>Functions[CMSampleBufferCreateCopyWithNewTiming].Parameters[sbufCopyOut].IsOut=true</Patch>
        <Patch>Functions[CMSampleBufferCreateForImageBuffer].Parameters[sampleTiming].Type=CMSampleTimingInfo</Patch>
        <Patch>Functions[CMSampleBufferCreateForImageBuffer].Parameters[sampleTiming].IsByRef=true</Patch>
        <Patch>Functions[CMSampleBufferCreateForImageBuffer].Parameters[sBufOut].Type=IntPtr</Patch>
        <Patch>Functions[CMSampleBufferCreateForImageBuffer].Parameters[sBufOut].IsOut=true</Patch>
		<Patch>Functions[CMSampleBufferGetTypeID].Generate=false</Patch>
        <Patch>Functions[CMSampleBufferCallForEachSample].Parameters[s].Name=callback</Patch>
        <Patch>Functions[CMSampleBufferCallForEachSample].Parameters[callback].Type=CMSampleBufferCallForEachSampleCallback</Patch>
        <Patch>Functions[CMSampleBufferCallForEachSample].Parameters[index].Generate=false</Patch>
        <Patch>Functions[CMSampleBufferCallForEachSample].Parameters[refcon](0).Generate=false</Patch>
				
        <Patch>Functions[CMAudioSampleBufferCreateWithPacketDescriptions].Generate=false</Patch>
        <Patch>Functions[CMSampleBufferCreate].Generate=false</Patch>
        <Patch>Functions[CMSampleBufferCreateCopyWithNewTiming].Generate=false</Patch>
        <Patch>Functions[CMSampleBufferCreateForImageBuffer].Generate=false</Patch>
        <Patch>Functions[CMSampleBufferGetAudioBufferListWithRetainedBlockBuffer].Generate=false</Patch>
        <Patch>Functions[CMSampleBufferGetAudioStreamPacketDescriptions].Generate=false</Patch>
        <Patch>Functions[CMSampleBufferGetAudioStreamPacketDescriptionsPtr].Generate=false</Patch>
        <Patch>Functions[CMSampleBufferGetOutputSampleTimingInfoArray].Generate=false</Patch>
        <Patch>Functions[CMSampleBufferGetSampleSizeArray].Generate=false</Patch>
        <Patch>Functions[CMSampleBufferGetSampleTimingInfo].Generate=false</Patch>
        <Patch>Functions[CMSampleBufferGetSampleTimingInfoArray].Generate=false</Patch>
        <Patch>Functions[CMSampleBufferSetDataBufferFromAudioBufferList].Generate=false</Patch>
        <Patch>Functions[CMSampleBufferSetInvalidateCallback].Generate=false</Patch>
				
        <Patch>Enumerations[Error_Codes].Name=CMSampleBufferErrorCodes</Patch>
        <Patch>Enumerations[CMSampleBufferErrorCodes].BaseType=int</Patch>
      </Type>
      <Type name="CMTime">
        <Patch>Enumerations[CMTime_Flags].Name=CMTimeFlags</Patch>
        <Patch>Enumerations[CMTimeFlags].BaseType=uint</Patch>
        <Patch>Enumerations[Rounding_Methods].Name=CMTimeRoundingMethod</Patch>
        <Patch>Enumerations[CMTimeRoundingMethod].BaseType=uint</Patch>
        <Replace type="Generated">
          <Source><![CDATA[= 1UL<<]]></Source>
          <With><![CDATA[= 1U <<]]></With>
        </Replace>
        <Replace type="Generated">
          <Source><![CDATA[public static partial class CMTime]]></Source>
          <With><![CDATA[public partial struct CMTime]]></With>
        </Replace>
      </Type>
      <Type name="CMTimeRange">
        <Replace type="Generated">
          <Source><![CDATA[public static partial class CMTimeRange]]></Source>
          <With><![CDATA[public partial struct CMTimeRange]]></With>
        </Replace>
      </Type>
    </Types>
  </Framework>
  <Framework name="CoreMIDI" usings="Foundation" assembly="Monobjc.CoreMIDI">
    <Types>
      <Type name="MIDIServices">
      </Type>
      <Type name="MIDISetup">
      </Type>
      <Type name="MIDIThruConnection">
      </Type>
    </Types>
  </Framework>
  <Framework name="CoreServices" usings="CoreFoundation,Foundation,ApplicationServices" assembly="Monobjc.AppKit">
    <Types>
      <Type name="UTType">
        <Replace type="Xhtml">
          <Source><![CDATA[const <!--a-->CFStringRef<!--/a-->]]></Source>
          <With><![CDATA[const <!--a-->CFStringRef <!--/a-->]]></With>
        </Replace>
        <Replace type="Xhtml">
          <Source><![CDATA[>kUTTypeAppleICNS</a>]]></Source>
          <With><![CDATA[>kUTTypeAppleICNS;</a>]]></With>
        </Replace>
      </Type>
    </Types>
  </Framework>
  <Framework name="CoreWLAN" usings="Foundation,Security,SecurityFoundation" assembly="Monobjc.CoreWLAN">
    <Types>
      <Type name="CoreWLANFramework.Constants">
      </Type>
      <Type name="CoreWLANFramework.Types">
        <Patch>Enumerations[CWChannelBand].BaseType=NSInteger</Patch>
        <Patch>Enumerations[CWChannelWidth].BaseType=NSInteger</Patch>
        <Patch>Enumerations[CWCipherKeyFlags].BaseType=NSUInteger</Patch>
        <Patch>Enumerations[CWErr].BaseType=NSInteger</Patch>
        <Patch>Enumerations[CWIBSSModeSecurity].BaseType=NSInteger</Patch>
        <Patch>Enumerations[CWInterfaceMode].BaseType=NSInteger</Patch>
        <Patch>Enumerations[CWPHYMode].BaseType=NSInteger</Patch>
        <Patch>Enumerations[CWSecurity].BaseType=NSInteger</Patch>
        <Replace type="Generated">
          <Source><![CDATA[1UL <<]]></Source>
          <With><![CDATA[1U <<]]></With>
        </Replace>
      </Type>
      <Type name="CoreWLANFramework.Util">
        <Patch>Functions[CWKeychainCopyEAPIdentity].Parameters[identity].Type=IntPtr</Patch>
        <Patch>Functions[CWKeychainCopyEAPIdentity].Parameters[identity].IsOut=true</Patch>
        <Patch>Functions[CWKeychainCopyEAPIdentityList].Parameters[list].Type=NSArray</Patch>
        <Patch>Functions[CWKeychainCopyEAPIdentityList].Parameters[list].IsOut=true</Patch>
        <Patch>Functions[CWKeychainCopyEAPUsernameAndPassword].Parameters[username].Type=NSString</Patch>
        <Patch>Functions[CWKeychainCopyEAPUsernameAndPassword].Parameters[username].IsOut=true</Patch>
        <Patch>Functions[CWKeychainCopyEAPUsernameAndPassword].Parameters[password].Type=NSString</Patch>
        <Patch>Functions[CWKeychainCopyEAPUsernameAndPassword].Parameters[password].IsOut=true</Patch>
        <Patch>Functions[CWKeychainCopyPassword].Parameters[password].Type=NSString</Patch>
        <Patch>Functions[CWKeychainCopyPassword].Parameters[password].IsOut=true</Patch>
      </Type>
    </Types>
    <Classes>
      <Class name="CW8021XProfile">
        <Patch>MinAvailability=Mac OS X v10.6</Patch>
      </Class>
      <Class name="CW8021XProfile.Deprecated">
        <Patch>AdditionFor=CW8021XProfile</Patch>
        <Patch>Methods[Init].Generate=false</Patch>
        <Patch>Properties[AlwaysPromptForPassword].Type=bool</Patch>
      </Class>
      <Class name="CWChannel">
      </Class>
      <Class name="CWConfiguration">
        <Patch>Methods[Init].Generate=false</Patch>
      </Class>
      <Class name="CWConfiguration.Deprecated">
        <Patch>AdditionFor=CWConfiguration</Patch>
      </Class>
      <Class name="CWInterface">
        <Patch>Methods[Init].Generate=false</Patch>
      </Class>
      <Class name="CWMutableConfiguration">
        <Replace type="Generated">
          <Source><![CDATA[public virtual NSOrderedSet NetworkProfiles]]></Source>
          <With><![CDATA[public new NSOrderedSet NetworkProfiles]]></With>
        </Replace>
        <Replace type="Generated">
          <Source><![CDATA[public virtual bool RememberJoinedNetworks]]></Source>
          <With><![CDATA[public new bool RememberJoinedNetworks]]></With>
        </Replace>
        <Replace type="Generated">
          <Source><![CDATA[public virtual bool RequireAdministratorForAssociation]]></Source>
          <With><![CDATA[public new bool RequireAdministratorForAssociation]]></With>
        </Replace>
        <Replace type="Generated">
          <Source><![CDATA[public virtual bool RequireAdministratorForIBSSMode]]></Source>
          <With><![CDATA[public new bool RequireAdministratorForIBSSMode]]></With>
        </Replace>
        <Replace type="Generated">
          <Source><![CDATA[public virtual bool RequireAdministratorForPower]]></Source>
          <With><![CDATA[public new bool RequireAdministratorForPower]]></With>
        </Replace>
      </Class>
      <Class name="CWMutableNetworkProfile">
        <Patch>MinAvailability=Mac OS X v10.7</Patch>
      </Class>
      <Class name="CWNetwork">
      </Class>
      <Class name="CWNetworkProfile">
      </Class>
      <Class name="CWWirelessProfile">
        <Patch>MinAvailability=Mac OS X v10.6</Patch>
      </Class>
      <Class name="CWWirelessProfile.Deprecated">
        <Patch>AdditionFor=CWWirelessProfile</Patch>
        <Patch>Methods[Init].Generate=false</Patch>
        <Patch>Properties[AlwaysPromptForPassword].Type=bool</Patch>
      </Class>
    </Classes>
  </Framework>
  <Framework name="DiscRecording" usings="Foundation" assembly="Monobjc.DiscRecording">
    <Classes>
      <Class name="DRBurn">
      </Class>
      <Class name="DRBurn_Header">
        <Patch>AdditionFor=DRBurn</Patch>
      </Class>
      <Class name="DRBurn_ImageContentCreation">
        <Patch>AdditionFor=DRBurn</Patch>
      </Class>
      <Class name="DRBurn_PropertyConvenienceMethods">
        <Patch>AdditionFor=DRBurn</Patch>
      </Class>
      <Class name="DRCDTextBlock">
        <Replace type="Xhtml">
          <Source><![CDATA[<span class="param">key</span>]]></Source>
          <With><![CDATA[<span class="param">key </span>]]></With>
        </Replace>
        <Replace type="Xhtml">
          <Source><![CDATA[<span class="param">lang</span>]]></Source>
          <With><![CDATA[<span class="param">lang </span>]]></With>
        </Replace>
        <Replace type="Xhtml">
          <Source><![CDATA[<span class="param">track</span>]]></Source>
          <With><![CDATA[<span class="param">track </span>]]></With>
        </Replace>
        <Replace type="Xhtml">
          <Source><![CDATA[<span class="param">value</span>]]></Source>
          <With><![CDATA[<span class="param">value </span>]]></With>
        </Replace>
      </Class>
      <Class name="DRCDText_Header">
        <Patch>AdditionFor=DRCDTextBlock</Patch>
      </Class>
      <Class name="DRCDTextBlock_PropertyConvenienceMethods">
        <Patch>AdditionFor=DRCDTextBlock</Patch>
      </Class>
      <Class name="DRContentFile_Header">

      </Class>
      <Class name="DRContentFolder_Header">

      </Class>
      <Class name="DRContentObject_Header">

      </Class>
      <Class name="DRContentProperties_Header">

      </Class>
      <Class name="DRContentTrack_Header">

      </Class>
      <Class name="DRCoreBurn_Header">

      </Class>
      <Class name="DRCoreCDText_Header">

      </Class>
      <Class name="DRCoreDevice_Header">

      </Class>
      <Class name="DRCoreErase_Header">

      </Class>
      <Class name="DRCoreErrors_Header">

      </Class>
      <Class name="DRCoreNotifications_Header">

      </Class>
      <Class name="DRCoreObject_Header">

      </Class>
      <Class name="DRCoreStatus_Header">

      </Class>
      <Class name="DRCoreTrack_Header">

      </Class>
      <Class name="DRDevice">
      </Class>
      <Class name="DRDevice_Header">
        <Patch>AdditionFor=DRDevice</Patch>
      </Class>
      <Class name="DRDevice_InfoConvenience">
        <Patch>AdditionFor=DRDevice</Patch>
      </Class>
      <Class name="DRDevice_StatusConvenience">
        <Patch>AdditionFor=DRDevice</Patch>
      </Class>
      <Class name="DRErase">
      </Class>
      <Class name="DRErase_Header">
        <Patch>AdditionFor=DRErase</Patch>
      </Class>
      <Class name="DRErase_PropertyConvenienceMethods">
        <Patch>AdditionFor=DRErase</Patch>
      </Class>
      <Class name="DRFile">
      </Class>
      <Class name="DRFile_Header">
        <Patch>AdditionFor=DRFile</Patch>
        <Patch>Enumerations[File_Fork_Types].Name=DRFileFork</Patch>
        <Patch>Enumerations[DRFileFork].BaseType=uint</Patch>
      </Class>
      <Class name="DRFile_VirtualFiles">
        <Patch>AdditionFor=DRFile</Patch>
        <Replace type="Xhtml">
          <Source><![CDATA[<span class="param">name</span>]]></Source>
          <With><![CDATA[<span class="param">name </span>]]></With>
        </Replace>
      </Class>
      <Class name="DRFile_VirtualLinks">
        <Patch>AdditionFor=DRFile</Patch>
        <Replace type="Xhtml">
          <Source><![CDATA[<span class="param">original</span>]]></Source>
          <With><![CDATA[<span class="param">original </span>]]></With>
        </Replace>
        <Replace type="Xhtml">
          <Source><![CDATA[<span class="param">linkType</span>]]></Source>
          <With><![CDATA[<span class="param">linkType </span>]]></With>
        </Replace>
      </Class>
      <Class name="DRFolder">
      </Class>
      <Class name="DRFolder_Header">
        <Patch>AdditionFor=DRFolder</Patch>
      </Class>
      <Class name="DRFolder_VirtualFolders">
        <Patch>AdditionFor=DRFolder</Patch>
      </Class>
      <Class name="DRFSObject">
        <Replace type="Xhtml">
          <Source><![CDATA[<span class="param">filesystem</span>]]></Source>
          <With><![CDATA[<span class="param">filesystem </span>]]></With>
        </Replace>
        <Replace type="Xhtml">
          <Source><![CDATA[<span class="param">key</span>]]></Source>
          <With><![CDATA[<span class="param">key </span>]]></With>
        </Replace>
        <Replace type="Xhtml">
          <Source><![CDATA[<span class="param">name</span>]]></Source>
          <With><![CDATA[<span class="param">name </span>]]></With>
        </Replace>
        <Replace type="Xhtml">
          <Source><![CDATA[<span class="param">properties</span>]]></Source>
          <With><![CDATA[<span class="param">properties </span>]]></With>
        </Replace>
        <Replace type="Xhtml">
          <Source><![CDATA[<span class="param">property</span>]]></Source>
          <With><![CDATA[<span class="param">property </span>]]></With>
        </Replace>
      </Class>
      <Class name="DRFSObject_Header">
        <Patch>AdditionFor=DRFSObject</Patch>
        <Patch>Enumerations[DRFilesystemInclusionMask_constants].Name=DRFilesystemInclusionMask</Patch>
        <Patch>Enumerations[DRFilesystemInclusionMask].BaseType=uint</Patch>
        <Patch>Enumerations[DRFilesystemInclusionMask].Flags=true</Patch>
      </Class>
      <Class name="DRMSF">
        <Patch>Methods[InitWithFrames].GenerateConstructor=false</Patch>
      </Class>
      <Class name="DRMSF_Header">
        <Patch>AdditionFor=DRMSF</Patch>
      </Class>
      <Class name="DRMSFFormatter">
      </Class>
      <Class name="DRMSFFormatter_Header">
        <Patch>AdditionFor=DRMSFFormatter</Patch>
      </Class>
      <Class name="DRNotificationCenter">
        <Replace type="Xhtml">
          <Source><![CDATA[<span class="param">observer</span>]]></Source>
          <With><![CDATA[<span class="param">observer </span>]]></With>
        </Replace>
        <Replace type="Xhtml">
          <Source><![CDATA[<span class="param">aSelector</span>]]></Source>
          <With><![CDATA[<span class="param">aSelector </span>]]></With>
        </Replace>
        <Replace type="Xhtml">
          <Source><![CDATA[<span class="param">notificationName</span>]]></Source>
          <With><![CDATA[<span class="param">notificationName </span>]]></With>
        </Replace>
        <Replace type="Xhtml">
          <Source><![CDATA[<span class="param">aName</span>]]></Source>
          <With><![CDATA[<span class="param">aName </span>]]></With>
        </Replace>
      </Class>
      <Class name="DRStatus">
        <Patch>BaseType=NSObject</Patch>
      </Class>
      <Class name="DRTrack">
      </Class>
      <Class name="DRTrack_Header">
        <Patch>AdditionFor=DRTrack</Patch>
        <Patch>Enumerations[Track_Flags].Name=DRTrackFlags</Patch>
        <Patch>Enumerations[DRTrackFlags].BaseType=int</Patch>
        <Patch>Enumerations[DRTrackFlags].Flags=true</Patch>
      </Class>
      <Class name="DRTrack_AudioContentCreation">
        <Patch>AdditionFor=DRTrack</Patch>
        <Replace type="Xhtml">
          <Source><![CDATA[<span class="param">length</span>]]></Source>
          <With><![CDATA[<span class="param">length </span>]]></With>
        </Replace>
      </Class>
      <Class name="DRTrack_DataContentCreation">
        <Patch>AdditionFor=DRTrack</Patch>
      </Class>
      <Class name="DRTrack_PropertyConvenience">
        <Patch>AdditionFor=DRTrack</Patch>
      </Class>
    </Classes>
    <Protocols>
      <Protocol name="DRFileDataProduction">
        <Patch>Methods[ProduceFileForkIntoBufferLengthAtAddressBlockSize].Parameters[buffer].Type=IntPtr</Patch>
        <Replace type="Xhtml">
          <Source><![CDATA[<span class="param">file</span>]]></Source>
          <With><![CDATA[<span class="param">file </span>]]></With>
        </Replace>
        <Replace type="Xhtml">
          <Source><![CDATA[<span class="param">fork</span>]]></Source>
          <With><![CDATA[<span class="param">fork </span>]]></With>
        </Replace>
        <Replace type="Xhtml">
          <Source><![CDATA[<span class="param">buffer</span>]]></Source>
          <With><![CDATA[<span class="param">buffer </span>]]></With>
        </Replace>
        <Replace type="Xhtml">
          <Source><![CDATA[<span class="param">bufferLength</span>]]></Source>
          <With><![CDATA[<span class="param">bufferLength </span>]]></With>
        </Replace>
        <Replace type="Xhtml">
          <Source><![CDATA[<span class="param">address</span>]]></Source>
          <With><![CDATA[<span class="param">address </span>]]></With>
        </Replace>
      </Protocol>
      <Protocol name="DRTrackDataProduction">
        <Patch>Methods[ProduceDataForTrackIntoBufferLengthAtAddressBlockSizeIoFlags].Parameters[buffer].Type=IntPtr</Patch>
        <Patch>Methods[ProduceDataForTrackIntoBufferLengthAtAddressBlockSizeIoFlags].Parameters[flags].Type=uint</Patch>
        <Patch>Methods[ProduceDataForTrackIntoBufferLengthAtAddressBlockSizeIoFlags].Parameters[flags].IsOut=true</Patch>
        <Patch>Methods[ProducePreGapForTrackIntoBufferLengthAtAddressBlockSizeIoFlags].Parameters[flags].Type=uint</Patch>
        <Patch>Methods[ProducePreGapForTrackIntoBufferLengthAtAddressBlockSizeIoFlags].Parameters[flags].IsOut=true</Patch>
        <Patch>Methods[ProducePreGapForTrackIntoBufferLengthAtAddressBlockSizeIoFlags].Parameters[buffer].Type=IntPtr</Patch>
        <Patch>Methods[VerifyDataForTrackInBufferLengthAtAddressBlockSizeIoFlags].Parameters[buffer].Type=IntPtr</Patch>
        <Patch>Methods[VerifyDataForTrackInBufferLengthAtAddressBlockSizeIoFlags].Parameters[flags].Type=uint</Patch>
        <Patch>Methods[VerifyDataForTrackInBufferLengthAtAddressBlockSizeIoFlags].Parameters[flags].IsOut=true</Patch>
        <Patch>Methods[VerifyPreGapForTrackInBufferLengthAtAddressBlockSizeIoFlags].Parameters[buffer].Type=IntPtr</Patch>
        <Patch>Methods[VerifyPreGapForTrackInBufferLengthAtAddressBlockSizeIoFlags].Parameters[flags].Type=uint</Patch>
        <Patch>Methods[VerifyPreGapForTrackInBufferLengthAtAddressBlockSizeIoFlags].Parameters[flags].IsOut=true</Patch>
        <Replace type="Xhtml">
          <Source><![CDATA[<span class="param">burn</span>]]></Source>
          <With><![CDATA[<span class="param">burn </span>]]></With>
        </Replace>
        <Replace type="Xhtml">
          <Source><![CDATA[<span class="param">track</span>]]></Source>
          <With><![CDATA[<span class="param">track </span>]]></With>
        </Replace>
        <Replace type="Xhtml">
          <Source><![CDATA[<span class="param">buffer</span>]]></Source>
          <With><![CDATA[<span class="param">buffer </span>]]></With>
        </Replace>
        <Replace type="Xhtml">
          <Source><![CDATA[<span class="param">bufferLength</span>]]></Source>
          <With><![CDATA[<span class="param">bufferLength </span>]]></With>
        </Replace>
        <Replace type="Xhtml">
          <Source><![CDATA[<span class="param">address</span>]]></Source>
          <With><![CDATA[<span class="param">address </span>]]></With>
        </Replace>
        <Replace type="Xhtml">
          <Source><![CDATA[<span class="param">blockSize</span>]]></Source>
          <With><![CDATA[<span class="param">blockSize </span>]]></With>
        </Replace>
      </Protocol>
    </Protocols>
    <Enumerations>
      <Enumeration name="DRFileFork">
      </Enumeration>
      <Enumeration name="DRFilesystemInclusionMask">
      </Enumeration>
    </Enumerations>
  </Framework>
  <Framework name="DiscRecordingUI" usings="Foundation,AppKit,DiscRecording" assembly="Monobjc.DiscRecordingUI">
    <Types>
      <Type name="DiscRecordingUIFramework.Constants">
      </Type>
    </Types>
    <Classes>
      <Class name="DRBurnProgressPanel">
        <Replace type="Xhtml">
          <Source><![CDATA[<span class="param">burn</span>]]></Source>
          <With><![CDATA[<span class="param">burn </span>]]></With>
        </Replace>
        <Replace type="Xhtml">
          <Source><![CDATA[<span class="param">layout</span>]]></Source>
          <With><![CDATA[<span class="param">layout </span>]]></With>
        </Replace>
        <Replace type="Generated">
          <Source>public virtual NSString Description</Source>
          <With>public new NSString Description</With>
        </Replace>
      </Class>
      <Class name="DRBurnProgressPanel_Header">
        <Patch>AdditionFor=DRBurnProgressPanel</Patch>
      </Class>
      <Class name="DRBurnSession_Header">
      </Class>
      <Class name="DRBurnSetupPanel">
      </Class>
      <Class name="DRBurnSetupPanel_Header">
        <Patch>AdditionFor=DRBurnSetupPanel</Patch>
      </Class>
      <Class name="DREraseProgressPanel">
        <Replace type="Xhtml">
          <Source><![CDATA[<span class="param">erase</span>]]></Source>
          <With><![CDATA[<span class="param">erase </span>]]></With>
        </Replace>
        <Replace type="Generated">
          <Source>public virtual NSString Description</Source>
          <With>public new NSString Description</With>
        </Replace>
      </Class>
      <Class name="DREraseProgressPanel_Header">
        <Patch>AdditionFor=DREraseProgressPanel</Patch>
      </Class>
      <Class name="DREraseSession_Header">
      </Class>
      <Class name="DREraseSetupPanel">
      </Class>
      <Class name="DREraseSetupPanel_Header">
        <Patch>AdditionFor=DREraseSetupPanel</Patch>
      </Class>
      <Class name="DRSetupPanel">
        <Replace type="Xhtml">
          <Source><![CDATA[<span class="param">owner</span>]]></Source>
          <With><![CDATA[<span class="param">owner </span>]]></With>
        </Replace>
        <Replace type="Xhtml">
          <Source><![CDATA[<span class="param">modalDelegate</span>]]></Source>
          <With><![CDATA[<span class="param">modalDelegate </span>]]></With>
        </Replace>
        <Replace type="Xhtml">
          <Source><![CDATA[<span class="param">didEndSelector</span>]]></Source>
          <With><![CDATA[<span class="param">didEndSelector </span>]]></With>
        </Replace>
      </Class>
      <Class name="DRSetupPanel_Header">
        <Patch>AdditionFor=DRSetupPanel</Patch>
      </Class>
    </Classes>
    <Protocols>
      <Protocol name="DRBurnProgressPanelDelegate">
        <Patch>DelegateFor=DRBurnProgressPanel</Patch>
        <Replace type="Xhtml">
          <Source><![CDATA[<span class="param">theBurnPanel</span>]]></Source>
          <With><![CDATA[<span class="param">theBurnPanel </span>]]></With>
        </Replace>
      </Protocol>
      <Protocol name="DREraseProgressPanelDelegate">
        <Patch>DelegateFor=DREraseProgressPanel</Patch>
        <Replace type="Xhtml">
          <Source><![CDATA[<span class="param">theErasePanel</span>]]></Source>
          <With><![CDATA[<span class="param">theErasePanel </span>]]></With>
        </Replace>
      </Protocol>
      <Protocol name="DRSetupPanelDelegate">
        <Patch>DelegateFor=DRSetupPanel</Patch>
        <Replace type="Xhtml">
          <Source><![CDATA[<span class="param">aPanel</span>]]></Source>
          <With><![CDATA[<span class="param">aPanel </span>]]></With>
        </Replace>
        <Replace type="Xhtml">
          <Source><![CDATA[<span class="param">device</span>]]></Source>
          <With><![CDATA[<span class="param">device </span>]]></With>
        </Replace>
        <Replace type="Xhtml">
          <Source><![CDATA[<span class="param">deviceA</span>]]></Source>
          <With><![CDATA[<span class="param">deviceA </span>]]></With>
        </Replace>
      </Protocol>
    </Protocols>
  </Framework>
  <Framework name="Foundation" usings="ApplicationServices" assembly="Monobjc.Foundation">
    <Types>
      <Type name="FoundationFramework.Constants">
        <Patch>Enumerations[_NSByteOrder].Name=NSByteOrder</Patch>
        <Patch>Enumerations[NSByteOrder].BaseType=NSInteger</Patch>
        <Patch>Enumerations[NSByteOrder].Values[NS_UnknownByteOrder].Value=0</Patch>
        <Patch>Enumerations[NSByteOrder].Values[NS_LittleEndian].Value=1</Patch>
        <Patch>Enumerations[NSByteOrder].Values[NS_BigEndian].Value=2</Patch>
        <Patch>Enumerations[NSRectEdge].BaseType=NSUInteger</Patch>
        <Patch>Enumerations[NSNotFound].Generate=false</Patch>
        <Patch>Enumerations[Memory_Allocation].Name=NSMemoryAllocation</Patch>
        <Patch>Enumerations[NSMemoryAllocation].BaseType=NSUInteger</Patch>
        <Patch>Enumerations[Enumeration_Options].Name=NSEnumerationOptions</Patch>
        <Patch>Enumerations[NSEnumerationOptions].BaseType=NSUInteger</Patch>
        <Patch>Enumerations[Sort_Options].Name=NSSortOptions</Patch>
        <Patch>Enumerations[NSSortOptions].BaseType=NSUInteger</Patch>
        <Patch>Enumerations[NSError_Codes].Name=NSErrorCode</Patch>
        <Patch>Enumerations[NSErrorCode].BaseType=NSInteger</Patch>
        <Patch>Enumerations[URL_Loading_System_Error_Codes].Name=NSURLLoadingSystemErrorCode</Patch>
        <Patch>Enumerations[NSURLLoadingSystemErrorCode].BaseType=NSInteger</Patch>
        <Replace type="Html">
          <Source><![CDATA[<dd><p><p class=]]></Source>
          <With><![CDATA[<dd><p class=]]></With>
        </Replace>
        <Replace type="Xhtml">
          <Source><![CDATA[// <!--a-->convenience<!--/a--><!--a-->combinations<!--/a-->]]></Source>
          <With><![CDATA[ ]]></With>
        </Replace>
        <Replace type="Xhtml">
          <Source><![CDATA[642<!--a-->m<!--/a-->]]></Source>
          <With><![CDATA[642, ]]></With>
        </Replace>
        <Replace type="Xhtml">
          <Source>
            <![CDATA[4095
]]>
          </Source>
          <With>
            <![CDATA[4095,
]]>
          </With>
        </Replace>
        <Replace type="Generated">
          <Source><![CDATA[1UL <<]]></Source>
          <With><![CDATA[1U <<]]></With>
        </Replace>
		<Replace type="Generated">
			<Source><![CDATA[public enum long : uint]]></Source>
			<With><![CDATA[public enum NSAlignmentOptions : ulong]]></With>
		</Replace>
      </Type>
      <Type name="FoundationFramework.DataTypes">
      </Type>
      <Type name="FoundationFramework.Functions">
        <Patch>Functions[NSAllHashTableObjects].Generate=false</Patch>
        <Patch>Functions[NSAllMapTableKeys].Generate=false</Patch>
        <Patch>Functions[NSAllMapTableValues].Generate=false</Patch>
        <Patch>Functions[NSAllocateCollectable].Generate=false</Patch>
        <Patch>Functions[NSAllocateMemoryPages].Generate=false</Patch>
        <Patch>Functions[NSAllocateObject].Generate=false</Patch>
        <Patch>Functions[NSCAssert].Generate=false</Patch>
        <Patch>Functions[NSCAssert1].Generate=false</Patch>
        <Patch>Functions[NSCAssert2].Generate=false</Patch>
        <Patch>Functions[NSCAssert3].Generate=false</Patch>
        <Patch>Functions[NSCAssert4].Generate=false</Patch>
        <Patch>Functions[NSCAssert5].Generate=false</Patch>
        <Patch>Functions[NSClassFromString].Generate=false</Patch>
        <Patch>Functions[NSCompareHashTables].Generate=false</Patch>
        <Patch>Functions[NSCompareMapTables].Generate=false</Patch>
        <Patch>Functions[NSContainsRect].Generate=false</Patch>
        <Patch>Functions[NSConvertHostDoubleToSwapped].Generate=false</Patch>
        <Patch>Functions[NSConvertHostFloatToSwapped].Generate=false</Patch>
        <Patch>Functions[NSConvertSwappedDoubleToHost].Generate=false</Patch>
        <Patch>Functions[NSConvertSwappedFloatToHost].Generate=false</Patch>
        <Patch>Functions[NSCopyHashTableWithZone].Generate=false</Patch>
        <Patch>Functions[NSCopyMapTableWithZone].Generate=false</Patch>
        <Patch>Functions[NSCopyMemoryPages].Generate=false</Patch>
        <Patch>Functions[NSCopyObject].Generate=false</Patch>
        <Patch>Functions[NSCountHashTable].Generate=false</Patch>
        <Patch>Functions[NSCountMapTable].Generate=false</Patch>
        <Patch>Functions[NSCParameterAssert].Generate=false</Patch>
        <Patch>Functions[NSCreateHashTable].Generate=false</Patch>
        <Patch>Functions[NSCreateHashTableWithZone].Generate=false</Patch>
        <Patch>Functions[NSCreateMapTable].Generate=false</Patch>
        <Patch>Functions[NSCreateMapTableWithZone].Generate=false</Patch>
        <Patch>Functions[NSCreateZone].Generate=false</Patch>
        <Patch>Functions[NSDeallocateMemoryPages].Generate=false</Patch>
        <Patch>Functions[NSDeallocateObject].Generate=false</Patch>
        <Patch>Functions[NSDecimalAdd].Generate=false</Patch>
        <Patch>Functions[NSDecimalCompact].Generate=false</Patch>
        <Patch>Functions[NSDecimalCompare].Generate=false</Patch>
        <Patch>Functions[NSDecimalCopy].Generate=false</Patch>
        <Patch>Functions[NSDecimalDivide].Generate=false</Patch>
        <Patch>Functions[NSDecimalIsNotANumber].Generate=false</Patch>
        <Patch>Functions[NSDecimalMultiply].Generate=false</Patch>
        <Patch>Functions[NSDecimalMultiplyByPowerOf10].Generate=false</Patch>
        <Patch>Functions[NSDecimalNormalize].Generate=false</Patch>
        <Patch>Functions[NSDecimalPower].Generate=false</Patch>
        <Patch>Functions[NSDecimalRound].Generate=false</Patch>
        <Patch>Functions[NSDecimalString].Generate=false</Patch>
        <Patch>Functions[NSDecimalSubtract].Generate=false</Patch>
        <Patch>Functions[NSDecrementExtraRefCountWasZero].Generate=false</Patch>
        <Patch>Functions[NSDefaultMallocZone].Generate=false</Patch>
        <Patch>Functions[NSDivideRect].Generate=false</Patch>
        <Patch>Functions[NSEndHashTableEnumeration].Generate=false</Patch>
        <Patch>Functions[NSEndMapTableEnumeration].Generate=false</Patch>
        <Patch>Functions[NSEnumerateHashTable].Generate=false</Patch>
        <Patch>Functions[NSEnumerateMapTable].Generate=false</Patch>
        <Patch>Functions[NSEqualPoints].Generate=false</Patch>
        <Patch>Functions[NSEqualRanges].Generate=false</Patch>
        <Patch>Functions[NSEqualRects].Generate=false</Patch>
        <Patch>Functions[NSEqualSizes].Generate=false</Patch>
        <Patch>Functions[NSExtraRefCount].Generate=false</Patch>
        <Patch>Functions[NSFileTypeForHFSTypeCode].Generate=false</Patch>
        <Patch>Functions[NSFreeHashTable].Generate=false</Patch>
        <Patch>Functions[NSFreeMapTable].Generate=false</Patch>
        <Patch>Functions[NSGetSizeAndAlignment].Generate=false</Patch>
        <Patch>Functions[NSGetUncaughtExceptionHandler].Generate=false</Patch>
        <Patch>Functions[NSHashGet].Generate=false</Patch>
        <Patch>Functions[NSHashInsert].Generate=false</Patch>
        <Patch>Functions[NSHashInsertIfAbsent].Generate=false</Patch>
        <Patch>Functions[NSHashInsertKnownAbsent].Generate=false</Patch>
        <Patch>Functions[NSHashRemove].Generate=false</Patch>
        <Patch>Functions[NSHeight].Generate=false</Patch>
        <Patch>Functions[NSHFSTypeCodeFromFileType].Generate=false</Patch>
        <Patch>Functions[NSHFSTypeOfFile].Generate=false</Patch>
        <Patch>Functions[NSHostByteOrder].Generate=false</Patch>
        <Patch>Functions[NSIncrementExtraRefCount].Generate=false</Patch>
        <Patch>Functions[NSInsetRect].Generate=false</Patch>
        <Patch>Functions[NSIntegralRect].Generate=false</Patch>
        <Patch>Functions[NSIntersectionRange].Generate=false</Patch>
        <Patch>Functions[NSIntersectionRect].Generate=false</Patch>
        <Patch>Functions[NSIntersectsRect].Generate=false</Patch>
        <Patch>Functions[NSIsEmptyRect].Generate=false</Patch>
        <Patch>Functions[NSJavaBundleCleanup].Generate=false</Patch>
        <Patch>Functions[NSJavaBundleSetup].Generate=false</Patch>
        <Patch>Functions[NSJavaClassesForBundle].Generate=false</Patch>
        <Patch>Functions[NSJavaClassesFromPath].Generate=false</Patch>
        <Patch>Functions[NSJavaNeedsToLoadClasses].Generate=false</Patch>
        <Patch>Functions[NSJavaNeedsVirtualMachine].Generate=false</Patch>
        <Patch>Functions[NSJavaObjectNamedInPath].Generate=false</Patch>
        <Patch>Functions[NSJavaProvidesClasses].Generate=false</Patch>
        <Patch>Functions[NSJavaSetup].Generate=false</Patch>
        <Patch>Functions[NSJavaSetupVirtualMachine].Generate=false</Patch>
        <Patch>Functions[NSLocationInRange].Generate=false</Patch>
        <Patch>Functions[NSLocalizedString].Generate=false</Patch>
        <Patch>Functions[NSLocalizedStringFromTable].Generate=false</Patch>
        <Patch>Functions[NSLocalizedStringFromTableInBundle].Generate=false</Patch>
        <Patch>Functions[NSLocalizedStringWithDefaultValue].Generate=false</Patch>
        <Patch>Functions[NSLog].Generate=false</Patch>
        <Patch>Functions[NSLogPageSize].Generate=false</Patch>
        <Patch>Functions[NSLogv].Generate=false</Patch>
        <Patch>Functions[NSMakeCollectable].Generate=false</Patch>
        <Patch>Functions[NSMakePoint].Generate=false</Patch>
        <Patch>Functions[NSMakeRange].Generate=false</Patch>
        <Patch>Functions[NSMakeRect].Generate=false</Patch>
        <Patch>Functions[NSMakeSize].Generate=false</Patch>
        <Patch>Functions[NSMapGet].Generate=false</Patch>
        <Patch>Functions[NSMapInsert].Generate=false</Patch>
        <Patch>Functions[NSMapInsertIfAbsent].Generate=false</Patch>
        <Patch>Functions[NSMapInsertKnownAbsent].Generate=false</Patch>
        <Patch>Functions[NSMapMember].Generate=false</Patch>
        <Patch>Functions[NSMapRemove].Generate=false</Patch>
        <Patch>Functions[NSMaxRange].Generate=false</Patch>
        <Patch>Functions[NSMaxX].Generate=false</Patch>
        <Patch>Functions[NSMaxY].Generate=false</Patch>
        <Patch>Functions[NSMidX].Generate=false</Patch>
        <Patch>Functions[NSMidY].Generate=false</Patch>
        <Patch>Functions[NSMinX].Generate=false</Patch>
        <Patch>Functions[NSMinY].Generate=false</Patch>
        <Patch>Functions[NSMouseInRect].Generate=false</Patch>
        <Patch>Functions[NSNextHashEnumeratorItem].Generate=false</Patch>
        <Patch>Functions[NSNextMapEnumeratorPair].Generate=false</Patch>
        <Patch>Functions[NSOffsetRect].Generate=false</Patch>
        <Patch>Functions[NSPageSize].Generate=false</Patch>
        <Patch>Functions[NSParameterAssert].Generate=false</Patch>
        <Patch>Functions[NSPointFromString].Generate=false</Patch>
        <Patch>Functions[NSPointInRect].Generate=false</Patch>
        <Patch>Functions[NSPointToCGPoint].Generate=false</Patch>
        <Patch>Functions[NSProtocolFromString].Generate=false</Patch>
        <Patch>Functions[NSRangeFromString].Generate=false</Patch>
        <Patch>Functions[NSReallocateCollectable].Generate=false</Patch>
        <Patch>Functions[NSRealMemoryAvailable].Generate=false</Patch>
        <Patch>Functions[NSRectFromCGRect].Generate=false</Patch>
        <Patch>Functions[NSRectFromString].Generate=false</Patch>
        <Patch>Functions[NSRectToCGRect].Generate=false</Patch>
        <Patch>Functions[NSRecycleZone].Generate=false</Patch>
        <Patch>Functions[NSResetHashTable].Generate=false</Patch>
        <Patch>Functions[NSResetMapTable].Generate=false</Patch>
        <Patch>Functions[NSRoundDownToMultipleOfPageSize].Generate=false</Patch>
        <Patch>Functions[NSRoundUpToMultipleOfPageSize].Generate=false</Patch>
        <Patch>Functions[NSSearchPathForDirectoriesInDomains].Generate=false</Patch>
        <Patch>Functions[NSSelectorFromString].Generate=false</Patch>
        <Patch>Functions[NSSetUncaughtExceptionHandler].Generate=false</Patch>
        <Patch>Functions[NSSetZoneName].Generate=false</Patch>
        <Patch>Functions[NSShouldRetainWithZone].Generate=false</Patch>
        <Patch>Functions[NSSizeFromCGSize].Generate=false</Patch>
        <Patch>Functions[NSSizeFromString].Generate=false</Patch>
        <Patch>Functions[NSSizeToCGSize].Generate=false</Patch>
        <Patch>Functions[NSStringFromHashTable].Generate=false</Patch>
        <Patch>Functions[NSStringFromMapTable].Generate=false</Patch>
        <Patch>Functions[NSSwapBigDoubleToHost].Generate=false</Patch>
        <Patch>Functions[NSSwapBigFloatToHost].Generate=false</Patch>
        <Patch>Functions[NSSwapBigIntToHost].Generate=false</Patch>
        <Patch>Functions[NSSwapBigLongLongToHost].Generate=false</Patch>
        <Patch>Functions[NSSwapBigLongToHost].Generate=false</Patch>
        <Patch>Functions[NSSwapBigShortToHost].Generate=false</Patch>
        <Patch>Functions[NSSwapDouble].Generate=false</Patch>
        <Patch>Functions[NSSwapFloat].Generate=false</Patch>
        <Patch>Functions[NSSwapHostDoubleToBig].Generate=false</Patch>
        <Patch>Functions[NSSwapHostDoubleToLittle].Generate=false</Patch>
        <Patch>Functions[NSSwapHostFloatToBig].Generate=false</Patch>
        <Patch>Functions[NSSwapHostFloatToLittle].Generate=false</Patch>
        <Patch>Functions[NSSwapHostIntToBig].Generate=false</Patch>
        <Patch>Functions[NSSwapHostIntToLittle].Generate=false</Patch>
        <Patch>Functions[NSSwapHostLongLongToBig].Generate=false</Patch>
        <Patch>Functions[NSSwapHostLongLongToLittle].Generate=false</Patch>
        <Patch>Functions[NSSwapHostLongToBig].Generate=false</Patch>
        <Patch>Functions[NSSwapHostLongToLittle].Generate=false</Patch>
        <Patch>Functions[NSSwapHostShortToBig].Generate=false</Patch>
        <Patch>Functions[NSSwapHostShortToLittle].Generate=false</Patch>
        <Patch>Functions[NSSwapInt].Generate=false</Patch>
        <Patch>Functions[NSSwapLittleDoubleToHost].Generate=false</Patch>
        <Patch>Functions[NSSwapLittleFloatToHost].Generate=false</Patch>
        <Patch>Functions[NSSwapLittleIntToHost].Generate=false</Patch>
        <Patch>Functions[NSSwapLittleLongLongToHost].Generate=false</Patch>
        <Patch>Functions[NSSwapLittleLongToHost].Generate=false</Patch>
        <Patch>Functions[NSSwapLittleShortToHost].Generate=false</Patch>
        <Patch>Functions[NSSwapLong].Generate=false</Patch>
        <Patch>Functions[NSSwapLongLong].Generate=false</Patch>
        <Patch>Functions[NSSwapShort].Generate=false</Patch>
        <Patch>Functions[NSUnionRange].Generate=false</Patch>
        <Patch>Functions[NSUnionRect].Generate=false</Patch>
        <Patch>Functions[NSWidth].Generate=false</Patch>
        <Patch>Functions[NSZoneCalloc].Generate=false</Patch>
        <Patch>Functions[NSZoneFree].Generate=false</Patch>
        <Patch>Functions[NSZoneFromPointer].Generate=false</Patch>
        <Patch>Functions[NSZoneMalloc].Generate=false</Patch>
        <Patch>Functions[NSZoneName].Generate=false</Patch>
        <Patch>Functions[NSZoneRealloc].Generate=false</Patch>
        <Patch>Functions[NS_VALUERETURN].Generate=false</Patch>
      </Type>
    </Types>
    <Classes>
      <Class name="NSAffineTransform">
      </Class>
      <Class name="NSAppleEventDescriptor">
        <Patch>Methods[InitWithAEDescNoCopy].Parameters[aeDesc].Type=IntPtr</Patch>
        <Patch>Methods[InitWithAEDescNoCopy].GenerateConstructor=false</Patch>
        <Patch>Properties[AeDesc].Type=IntPtr</Patch>
        <Patch>Properties[AeDesc].Getter.ReturnType=IntPtr</Patch>
      </Class>
      <Class name="NSAppleEventManager">
        <Patch>Methods[DispatchRawAppleEventWithRawReplyHandlerRefCon].Parameters[theAppleEvent].Type=IntPtr</Patch>
        <Patch>Methods[DispatchRawAppleEventWithRawReplyHandlerRefCon].Parameters[theReply].Type=IntPtr</Patch>
      </Class>
      <Class name="NSAppleScript">
      </Class>
      <Class name="NSArchiver">
      </Class>
      <Class name="NSArray">
        <Patch>Methods[ArrayWithArray].ReturnType=NSArray</Patch>
        <Patch>Methods[ArrayWithArray].CopyInDescendants=true</Patch>
        <Patch>Methods[ArrayWithContentsOfFile].ReturnType=NSArray</Patch>
        <Patch>Methods[ArrayWithContentsOfFile].CopyInDescendants=true</Patch>
        <Patch>Methods[ArrayWithContentsOfURL].ReturnType=NSArray</Patch>
        <Patch>Methods[ArrayWithContentsOfURL].CopyInDescendants=true</Patch>
        <Patch>Methods[ArrayWithObject].ReturnType=NSArray</Patch>
        <Patch>Methods[ArrayWithObject].CopyInDescendants=true</Patch>
        <Patch>Methods[ArrayWithObjects].Parameters[firstObj,...].Generate=false</Patch>
        <Patch>Methods[ArrayWithObjects].Parameters[firstObj]=<![CDATA[<Parameter Generate="true"><Summary><Line>MISSING</Line></Summary><Name>firstObj</Name><Type>Id</Type></Parameter>]]></Patch>
        <Patch>Methods[ArrayWithObjects].Parameters[values]=<![CDATA[<Parameter Generate="true"><Summary><Line>MISSING</Line></Summary><Name>values</Name><Type>params object[]</Type></Parameter>]]></Patch>
        <Patch>Methods[ArrayWithObjects].ReturnType=NSArray</Patch>
        <Patch>Methods[ArrayWithObjects].CopyInDescendants=true</Patch>
        <Patch>Methods[ArrayWithObjectsCount].ReturnType=NSArray</Patch>
        <Patch>Methods[ArrayWithObjectsCount].Generate=false</Patch>
        <Patch>Methods[ArrayWithObjectsCount].CopyInDescendants=true</Patch>
        <Patch>Methods[InitWithObjects].Parameters[firstObj,...].Generate=false</Patch>
        <Patch>Methods[InitWithObjects].Parameters[firstObj]=<![CDATA[<Parameter Generate="true" IsOut="false" IsByRef="false"><Summary><Line>MISSING</Line></Summary><Name>firstObj</Name><Type>Id</Type></Parameter>]]></Patch>
        <Patch>Methods[InitWithObjects].Parameters[values]=<![CDATA[<Parameter Generate="true" IsOut="false" IsByRef="false"><Summary><Line>MISSING</Line></Summary><Name>values</Name><Type>params object[]</Type></Parameter>]]></Patch>
        <Patch>Methods[InitWithObjectsCount].Generate=false</Patch>
        <Patch>Methods[GetObjectsRange].Generate=false</Patch>
        <Patch>Properties[Array].Type=NSArray</Patch>
        <Patch>Properties[Array].Getter.ReturnType=NSArray</Patch>
        <Patch>Properties[Array].CopyInDescendants=true</Patch>
      </Class>
      <Class name="NSAssertionHandler">
        <Patch>Methods[HandleFailureInFunctionFileLineNumberDescription].Parameters[format,...].Generate=false</Patch>
        <Patch><![CDATA[Methods[HandleFailureInFunctionFileLineNumberDescription].Parameters[format]=<Parameter Generate="true" IsOut="false" IsByRef="false"><Summary><Line>MISSING</Line></Summary><Name>format</Name><Type>NSString</Type></Parameter>]]></Patch>
        <Patch><![CDATA[Methods[HandleFailureInFunctionFileLineNumberDescription].Parameters[values]=<Parameter Generate="true" IsOut="false" IsByRef="false"><Summary><Line>MISSING</Line></Summary><Name>values</Name><Type>params object[]</Type></Parameter>]]></Patch>
        <Patch>Methods[HandleFailureInMethodObjectFileLineNumberDescription].Parameters[format,...].Generate=false</Patch>
        <Patch><![CDATA[Methods[HandleFailureInMethodObjectFileLineNumberDescription].Parameters[format]=<Parameter Generate="true" IsOut="false" IsByRef="false"><Summary><Line>MISSING</Line></Summary><Name>format</Name><Type>NSString</Type></Parameter>]]></Patch>
        <Patch><![CDATA[Methods[HandleFailureInMethodObjectFileLineNumberDescription].Parameters[values]=<Parameter Generate="true" IsOut="false" IsByRef="false"><Summary><Line>MISSING</Line></Summary><Name>values</Name><Type>params object[]</Type></Parameter>]]></Patch>
      </Class>
      <Class name="NSAttributedString">
        <Patch>Enumerations[NSAttributedStringEnumerationOptions].Values[NSAttributedStringEnumerationReverse].Value=<![CDATA[1U << 1]]></Patch>
        <Patch>Enumerations[NSAttributedStringEnumerationOptions].Values[NSAttributedStringEnumerationLongestEffectiveRangeNotRequired].Value=<![CDATA[1U << 20]]></Patch>
        <Replace type="Generated">
          <Source><![CDATA[1UL <<]]></Source>
          <With><![CDATA[1U <<]]></With>
        </Replace>
      </Class>
      <Class name="NSAutoreleasePool">
        <Patch>Methods[AddObject]{Static=True}.Generate=false</Patch>
      </Class>
      <Class name="NSBlockOperation">
        <Patch>Methods[BlockOperationWithBlock].ReturnType=NSBlockOperation</Patch>
      </Class>
      <Class name="NSBundle">
        <Patch>Methods[PathForResourceOfTypeInDirectory]{Static=True}.Generate=false</Patch>
        <Patch>Methods[PathsForResourcesOfTypeInDirectory]{Static=True}.Generate=false</Patch>
        <Patch>Methods[LoadNibNamedOwner]=<![CDATA[<Method Generate="true" Static="true" GenerateConstructor="true"><Summary><Line>Unarchives the contents of the nib file and links them to a specific owner object.</Line></Summary><MinAvailability>Mac OS X v10.0</MinAvailability><Name>LoadNibNamedOwner</Name><Selector>loadNibNamed:owner:</Selector><Signature>+ (BOOL)loadNibNamed:(NSString *)aNibName owner:(id)owner</Signature><ReturnType>bool</ReturnType><ReturnsDocumentation>YES if the nib file was loaded successfully; otherwise, NO.</ReturnsDocumentation><Parameters><Parameter Generate="true" IsOut="false" IsByRef="false" IsBlock="false"><Summary><Line>The name of the nib file, which need not include the .nib extension. The file name should not include path information. The object in the owner parameter determines the location in which to look for the nib file.</Line></Summary><Name>aNibName</Name><Type>NSString</Type></Parameter><Parameter Generate="true" IsOut="false" IsByRef="false" IsBlock="false"><Summary /><Name>owner</Name><Type>Id</Type></Parameter></Parameters></Method>]]></Patch>
        <Patch>Methods[LoadNibFileExternalNameTableWithZone]=<![CDATA[<Method Generate="true" Static="false" GenerateConstructor="true"><Summary><Line>Unarchives the contents of a nib file located in the receiver's bundle.</Line></Summary><MinAvailability>Mac OS X v10.0</MinAvailability><Name>LoadNibFileExternalNameTableWithZone</Name><Selector>loadNibFile:externalNameTable:withZone:</Selector><Signature>- (BOOL)loadNibFile:(NSString *)fileName externalNameTable:(NSDictionary *)context withZone:(NSZone *)zone</Signature><ReturnType>bool</ReturnType><ReturnsDocumentation>YES if the nib file was loaded successfully; otherwise, NO.</ReturnsDocumentation><Parameters><Parameter Generate="true" IsOut="false" IsByRef="false" IsBlock="false"><Summary><Line>The name of the nib file, which need not include the .nib extension.</Line></Summary><Name>fileName</Name><Type>NSString</Type></Parameter><Parameter Generate="true" IsOut="false" IsByRef="false" IsBlock="false"><Summary /><Name>context</Name><Type>NSDictionary</Type></Parameter><Parameter Generate="true" IsOut="false" IsByRef="false" IsBlock="false"><Summary /><Name>zone</Name><Type>IntPtr</Type></Parameter></Parameters></Method>]]></Patch>
        <Patch>Enumerations[Mach_O_Architecture].Name=NSMachOArchitecture</Patch>
        <Patch>Enumerations[NSMachOArchitecture].BaseType=int</Patch>
        <Replace type="Generated">
          <Source>public virtual bool Load()</Source>
          <With>public new bool Load()</With>
        </Replace>
      </Class>
      <Class name="NSCache">
        <Patch>Properties[Delegate].Type=Id</Patch>
      </Class>
      <Class name="NSCachedURLResponse">
        <Patch>Enumerations[NSURLCacheStoragePolicy].BaseType=NSUInteger</Patch>
      </Class>
      <Class name="NSCalendar">
        <Patch>Methods[RangeOfUnitStartDateIntervalForDate].Parameters[tip].Type=double</Patch>
        <Patch>Methods[RangeOfUnitStartDateIntervalForDate].Parameters[tip].IsOut=true</Patch>
        <Patch>Enumerations[NSCalendarUnit].BaseType=NSUInteger</Patch>
        <!-- TODO: Move to constant -->
        <Patch>Enumerations[NSDateComponents_wrapping_behavior].Generate=false</Patch>
        <Replace type="Xhtml">
          <Source><![CDATA[<a href="#//apple_ref/doc/c_ref/NSCalendarCalendarUnit">NSCalendarCalendarUnit</a>]]></Source>
          <With><![CDATA[<a href="#//apple_ref/doc/c_ref/NSCalendarCalendarUnit">, NSCalendarCalendarUnit</a>]]></With>
        </Replace>
        <Replace type="Generated">
          <Source>= kCFCalendarUnitYearForWeekOfYear</Source>
          <With><![CDATA[= (1U << 14)]]></With>
        </Replace>
        <Replace type="Generated">
          <Source>= kCFCalendarUnitWeekOfYear</Source>
          <With><![CDATA[= (1U << 13)]]></With>
        </Replace>
        <Replace type="Generated">
          <Source>= kCFCalendarUnitWeekOfMonth</Source>
          <With><![CDATA[= (1U << 12)]]></With>
        </Replace>
        <Replace type="Generated">
          <Source>= kCFCalendarUnitQuarter</Source>
          <With><![CDATA[= (1U << 11)]]></With>
        </Replace>
        <Replace type="Generated">
          <Source>= kCFCalendarUnitWeekdayOrdinal</Source>
          <With><![CDATA[= (1U << 10)]]></With>
        </Replace>
        <Replace type="Generated">
          <Source>= kCFCalendarUnitWeekday</Source>
          <With><![CDATA[= (1U << 9)]]></With>
        </Replace>
        <Replace type="Generated">
          <Source>= kCFCalendarUnitWeek</Source>
          <With><![CDATA[= (1U << 8)]]></With>
        </Replace>
        <Replace type="Generated">
          <Source>= kCFCalendarUnitSecond</Source>
          <With><![CDATA[= (1U << 7)]]></With>
        </Replace>
        <Replace type="Generated">
          <Source>= kCFCalendarUnitMinute</Source>
          <With><![CDATA[= (1U << 6)]]></With>
        </Replace>
        <Replace type="Generated">
          <Source>= kCFCalendarUnitHour</Source>
          <With><![CDATA[= (1U << 5)]]></With>
        </Replace>
        <Replace type="Generated">
          <Source>= kCFCalendarUnitDay</Source>
          <With><![CDATA[= (1U << 4)]]></With>
        </Replace>
        <Replace type="Generated">
          <Source>= kCFCalendarUnitMonth</Source>
          <With><![CDATA[= (1U << 3)]]></With>
        </Replace>
        <Replace type="Generated">
          <Source>= kCFCalendarUnitYear</Source>
          <With><![CDATA[= (1U << 2)]]></With>
        </Replace>
        <Replace type="Generated">
          <Source>= kCFCalendarUnitEra</Source>
          <With><![CDATA[= (1U << 1)]]></With>
        </Replace>
      </Class>
      <Class name="NSCharacterSet">
        <Patch>Methods[CharacterSetWithBitmapRepresentation].ReturnType=NSCharacterSet</Patch>
        <Patch>Methods[CharacterSetWithBitmapRepresentation].CopyInDescendants=true</Patch>
        <Patch>Methods[CharacterSetWithCharactersInString].ReturnType=NSCharacterSet</Patch>
        <Patch>Methods[CharacterSetWithCharactersInString].CopyInDescendants=true</Patch>
        <Patch>Methods[CharacterSetWithContentsOfFile].ReturnType=NSCharacterSet</Patch>
        <Patch>Methods[CharacterSetWithContentsOfFile].CopyInDescendants=true</Patch>
        <Patch>Methods[CharacterSetWithRange].ReturnType=NSCharacterSet</Patch>
        <Patch>Methods[CharacterSetWithRange].CopyInDescendants=true</Patch>
        <!-- TODO: Move to constant -->
        <Patch>Enumerations[NSOpenStepUnicodeReservedBase].Generate=false</Patch>
      </Class>
      <Class name="NSClassDescription">
        <Patch>Methods[ClassDescriptionForClass].CopyInDescendants=true</Patch>
      </Class>
      <Class name="NSCloneCommand">
      </Class>
      <Class name="NSCloseCommand">
        <Patch>Enumerations[NSSaveOptions].BaseType=NSUInteger</Patch>
      </Class>
      <Class name="NSCoder">
        <Patch>Methods[DecodeArrayOfObjCTypeCountAt].Parameters[itemType].Type=IntPtr</Patch>
        <Patch>Methods[DecodeBytesForKeyReturnedLength].Parameters[lengthp].Type=NSUInteger</Patch>
        <Patch>Methods[DecodeBytesForKeyReturnedLength].Parameters[lengthp].IsOut=true</Patch>
        <Patch>Methods[DecodeBytesForKeyReturnedLength].ReturnType=IntPtr</Patch>
        <Patch>Methods[DecodeBytesWithReturnedLength].Parameters[numBytes].Type=NSUInteger</Patch>
        <Patch>Methods[DecodeBytesWithReturnedLength].Parameters[numBytes].IsOut=true</Patch>
        <Patch>Methods[DecodeValueOfObjCTypeAt].Parameters[valueType].Type=String</Patch>
        <Patch>Methods[DecodeValuesOfObjCTypes].Parameters[valueTypes,...].Generate=false</Patch>
        <Patch><![CDATA[Methods[DecodeValuesOfObjCTypes].Parameters[valueTypes]=<Parameter Generate="true" IsOut="false" IsByRef="false"><Summary><Line>MISSING</Line></Summary><Name>valueTypes</Name><Type>String</Type></Parameter>]]></Patch>
        <Patch><![CDATA[Methods[DecodeValuesOfObjCTypes].Parameters[values]=<Parameter Generate="true" IsOut="false" IsByRef="false"><Summary><Line>MISSING</Line></Summary><Name>values</Name><Type>params object[]</Type></Parameter>]]></Patch>
        <Patch>Methods[EncodeArrayOfObjCTypeCountAt].Parameters[itemType].Type=String</Patch>
        <Patch>Methods[EncodeBytesLengthForKey].Parameters[bytesp].Type=IntPtr</Patch>
        <Patch>Methods[EncodeValueOfObjCTypeAt].Parameters[valueType].Type=String</Patch>
        <Patch>Methods[EncodeValuesOfObjCTypes].Parameters[valueTypes,...].Generate=false</Patch>
        <Patch><![CDATA[Methods[EncodeValuesOfObjCTypes].Parameters[valueTypes]=<Parameter Generate="true" IsOut="false" IsByRef="false"><Summary><Line>MISSING</Line></Summary><Name>valueTypes</Name><Type>String</Type></Parameter>]]></Patch>
        <Patch><![CDATA[Methods[EncodeValuesOfObjCTypes].Parameters[values]=<Parameter Generate="true" IsOut="false" IsByRef="false"><Summary><Line>MISSING</Line></Summary><Name>values</Name><Type>params object[]</Type></Parameter>]]></Patch>
      </Class>
      <Class name="NSComparisonPredicate">
        <Patch>Enumerations[NSComparisonPredicateModifier].BaseType=NSUInteger</Patch>
        <Patch>Enumerations[NSComparisonPredicate_Options].Name=NSComparisonPredicateOption</Patch>
        <Patch>Enumerations[NSComparisonPredicateOption].BaseType=NSUInteger</Patch>
        <Patch>Enumerations[NSPredicateOperatorType].BaseType=NSUInteger</Patch>
      </Class>
      <Class name="NSCompoundPredicate">
        <Patch>Enumerations[NSCompoundPredicateType].BaseType=NSUInteger</Patch>
      </Class>
      <Class name="NSCondition">
      </Class>
      <Class name="NSConditionLock">
      </Class>
      <Class name="NSConnection">
        <Patch>Methods[ConnectionWithReceivePortSendPort].ReturnType=NSConnection</Patch>
        <Patch>Methods[ConnectionWithRegisteredNameHost].ReturnType=NSConnection</Patch>
        <Patch>Methods[ConnectionWithRegisteredNameHostUsingNameServer].ReturnType=NSConnection</Patch>
        <Patch>Properties[Delegate].Type=Id</Patch>
      </Class>
      <Class name="NSCountCommand">
      </Class>
      <Class name="NSCountedSet">
      </Class>
      <Class name="NSCreateCommand">
      </Class>
      <Class name="NSData">
        <Patch>Methods[DataWithBytesLength].ReturnType=NSData</Patch>
        <Patch>Methods[DataWithBytesNoCopyLength].ReturnType=NSData</Patch>
        <Patch>Methods[DataWithBytesNoCopyLengthFreeWhenDone].ReturnType=NSData</Patch>
        <Patch>Methods[DataWithContentsOfFile].ReturnType=NSData</Patch>
        <Patch>Methods[DataWithContentsOfFileOptionsError].ReturnType=NSData</Patch>
        <Patch>Methods[DataWithContentsOfMappedFile].ReturnType=NSData</Patch>
        <Patch>Methods[DataWithContentsOfURL].ReturnType=NSData</Patch>
        <Patch>Methods[DataWithContentsOfURLOptionsError].ReturnType=NSData</Patch>
        <Patch>Methods[DataWithData].ReturnType=NSData</Patch>
        <Patch>Methods[InitWithBytesNoCopyLength].GenerateConstructor=false</Patch>
        <Patch>Methods[InitWithContentsOfMappedFile].GenerateConstructor=false</Patch>
        <Patch>Properties[Data].Type=NSData</Patch>
        <Patch>Properties[Data].Getter.ReturnType=NSData</Patch>
        <Patch>Properties[Data].CopyInDescendants=true</Patch>
        <Patch>Enumerations[NSDataReadingOptions].MinAvailability=Mac OS X v10.4</Patch>
        <Patch>Enumerations[NSDataReadingOptions].Values[NSDataReadingMapped]=<![CDATA[<EnumerationValue Generate="true"><Summary><Line>Deprecated name for NSDataReadingMappedIfSafe.</Line></Summary><MinAvailability>Mac OS X v10.6</MinAvailability><Name>NSDataReadingMapped</Name><Value>1U &lt;&lt; 0</Value></EnumerationValue>]]></Patch>
        <Patch>Enumerations[NSDataReadingOptions].Values[NSMappedRead]=<![CDATA[<EnumerationValue Generate="true"><Summary><Line>Deprecated name for NSDataReadingMapped.</Line></Summary><MinAvailability>Mac OS X v10.4</MinAvailability><Name>NSMappedRead</Name><Value>1U &lt;&lt; 0</Value></EnumerationValue>]]></Patch>
        <Patch>Enumerations[NSDataReadingOptions].Values[NSUncachedRead]=<![CDATA[<EnumerationValue Generate="true"><Summary><Line>Deprecated name for NSDataReadingUncached.</Line></Summary><MinAvailability>Mac OS X v10.4</MinAvailability><Name>NSUncachedRead</Name><Value>1U &lt;&lt; 1</Value></EnumerationValue>]]></Patch>
        <Patch>Enumerations[Legacy_Reading_Options].Generate=false</Patch>
        <Patch>Enumerations[NSDataWritingOptions].MinAvailability=Mac OS X v10.4</Patch>
        <Patch>Enumerations[NSDataWritingOptions].Values[NSAtomicWrite]=<![CDATA[<EnumerationValue Generate="true"><Summary><Line>Deprecated name for NSDataWritingAtomic.</Line></Summary><MinAvailability>Mac OS X v10.4</MinAvailability><Name>NSAtomicWrite</Name><Value>1U &lt;&lt; 0</Value></EnumerationValue>]]></Patch>
        <Patch>Enumerations[Legacy_Writing_Options].Generate=false</Patch>
        <Replace type="Generated">
          <Source><![CDATA[1UL <<]]></Source>
          <With><![CDATA[1U <<]]></With>
        </Replace>
      </Class>
      <Class name="NSDataDetector">
      </Class>
      <Class name="NSDate">
        <Patch>Methods[DateWithNaturalLanguageString].ReturnType=NSDate</Patch>
        <Patch>Methods[DateWithNaturalLanguageStringLocale].ReturnType=NSDate</Patch>
        <Patch>Methods[DateWithString].ReturnType=NSDate</Patch>
        <Patch>Methods[DateWithTimeIntervalSinceDate].ReturnType=NSDate</Patch>
        <Patch>Methods[DateWithTimeIntervalSince1970].ReturnType=NSDate</Patch>
        <Patch>Methods[DateWithTimeIntervalSinceNow].ReturnType=NSDate</Patch>
        <Patch>Methods[DateWithTimeIntervalSinceReferenceDate].ReturnType=NSDate</Patch>
        <Patch>Methods[DateByAddingTimeInterval].ReturnType=NSDate</Patch>
        <Patch>Methods[InitWithTimeIntervalSince1970].GenerateConstructor=false</Patch>
        <Patch>Methods[InitWithTimeIntervalSinceReferenceDate].GenerateConstructor=false</Patch>
        <Patch>Properties[Date].Type=NSDate</Patch>
        <Patch>Properties[Date].Getter.ReturnType=NSDate</Patch>
        <Patch>Properties[DistantFuture].Type=NSDate</Patch>
        <Patch>Properties[DistantPast].Type=NSDate</Patch>
        <Patch>Properties[TimeIntervalSinceReferenceDate]{Static=True}.Generate=false</Patch>
        <Patch>Methods[DateWithCalendarFormatTimeZone].ReturnType=IntPtr</Patch>
      </Class>
      <Class name="NSDateComponents">
        <!-- TODO: Convert to constant -->
        <Patch>Enumerations[NSDateComponents_undefined_component_identifier].Generate=false</Patch>
      </Class>
      <Class name="NSDateFormatter">
        <Patch>Enumerations[NSDateFormatterStyle].BaseType=NSUInteger</Patch>
        <Patch>Enumerations[NSDateFormatterStyle].Values[NSDateFormatterNoStyle].Value=0</Patch>
        <Patch>Enumerations[NSDateFormatterStyle].Values[NSDateFormatterShortStyle].Value=1</Patch>
        <Patch>Enumerations[NSDateFormatterStyle].Values[NSDateFormatterMediumStyle].Value=2</Patch>
        <Patch>Enumerations[NSDateFormatterStyle].Values[NSDateFormatterLongStyle].Value=3</Patch>
        <Patch>Enumerations[NSDateFormatterStyle].Values[NSDateFormatterFullStyle].Value=4</Patch>
        <Patch>Enumerations[NSDateFormatterBehavior].BaseType=NSUInteger</Patch>
      </Class>
      <Class name="NSDecimalNumber">
        <Patch>Properties[ObjCType].Type=IntPtr</Patch>
        <Patch>Properties[ObjCType].Getter.ReturnType=IntPtr</Patch>
      </Class>
      <Class name="NSDecimalNumberHandler">
        <Patch>Methods[DecimalNumberHandlerWithRoundingModeScaleRaiseOnExactnessRaiseOnOverflowRaiseOnUnderflowRaiseOnDivideByZero].ReturnType=NSDecimalNumberHandler</Patch>
        <Patch>Properties[DefaultDecimalNumberHandler].Type=NSDecimalNumberHandler</Patch>
      </Class>
      <Class name="NSDeleteCommand">
      </Class>
      <Class name="NSDeserializer">
      </Class>
      <Class name="NSDictionary">
        <Patch>Methods[DictionaryWithContentsOfFile].ReturnType=NSDictionary</Patch>
        <Patch>Methods[DictionaryWithContentsOfFile].CopyInDescendants=true</Patch>
        <Patch>Methods[DictionaryWithContentsOfURL].ReturnType=NSDictionary</Patch>
        <Patch>Methods[DictionaryWithContentsOfURL].CopyInDescendants=true</Patch>
        <Patch>Methods[DictionaryWithDictionary].ReturnType=NSDictionary</Patch>
        <Patch>Methods[DictionaryWithDictionary].CopyInDescendants=true</Patch>
        <Patch>Methods[DictionaryWithObjectForKey].ReturnType=NSDictionary</Patch>
        <Patch>Methods[DictionaryWithObjectForKey].CopyInDescendants=true</Patch>
        <Patch>Methods[DictionaryWithObjectsForKeys].ReturnType=NSDictionary</Patch>
        <Patch>Methods[DictionaryWithObjectsForKeys].CopyInDescendants=true</Patch>
        <Patch>Methods[DictionaryWithObjectsForKeysCount].ReturnType=NSDictionary</Patch>
        <Patch>Methods[DictionaryWithObjectsForKeysCount].CopyInDescendants=true</Patch>
        <Patch>Methods[DictionaryWithObjectsAndKeys].ReturnType=NSDictionary</Patch>
        <Patch>Methods[DictionaryWithObjectsAndKeys].CopyInDescendants=true</Patch>
        <Patch>Methods[DictionaryWithObjectsForKeysCount].Parameters[objects].Type=IntPtr</Patch>
        <Patch>Methods[DictionaryWithObjectsForKeysCount].Parameters[keys].Type=IntPtr</Patch>
        <Patch>Methods[DictionaryWithObjectsForKeysCount].CopyInDescendants=true</Patch>
        <Patch>Methods[DictionaryWithObjectsAndKeys].Parameters[firstObject,].Generate=false</Patch>
        <Patch>Methods[DictionaryWithObjectsAndKeys].Parameters[firstObject]=<![CDATA[<Parameter Generate="true" IsOut="false" IsByRef="false"><Summary><Line>MISSING</Line></Summary><Name>firstObject</Name><Type>Id</Type></Parameter>]]></Patch>
        <Patch>Methods[DictionaryWithObjectsAndKeys].Parameters[values]=<![CDATA[<Parameter Generate="true" IsOut="false" IsByRef="false"><Summary><Line>MISSING</Line></Summary><Name>values</Name><Type>params object[]</Type></Parameter>]]></Patch>
        <Patch>Methods[DictionaryWithObjectsAndKeys].CopyInDescendants=true</Patch>
        <Patch>Methods[GetObjectsAndKeys].Parameters[objects].Type=IntPtr</Patch>
        <Patch>Methods[GetObjectsAndKeys].Parameters[keys].Type=IntPtr</Patch>
        <Patch>Methods[InitWithObjectsForKeysCount].Parameters[objects].Type=IntPtr</Patch>
        <Patch>Methods[InitWithObjectsForKeysCount].Parameters[keys].Type=IntPtr</Patch>
        <Patch>Methods[InitWithObjectsAndKeys].Parameters[firstObject,].Generate=false</Patch>
        <Patch>Methods[InitWithObjectsAndKeys].Parameters[firstObject]=<![CDATA[<Parameter Generate="true" IsOut="false" IsByRef="false"><Summary><Line>MISSING</Line></Summary><Name>firstObject</Name><Type>Id</Type></Parameter>]]></Patch>
        <Patch>Methods[InitWithObjectsAndKeys].Parameters[values]=<![CDATA[<Parameter Generate="true" IsOut="false" IsByRef="false"><Summary><Line>MISSING</Line></Summary><Name>values</Name><Type>params object[]</Type></Parameter>]]></Patch>
        <Patch>Properties[Dictionary].Type=NSDictionary</Patch>
        <Patch>Properties[Dictionary].Getter.ReturnType=NSDictionary</Patch>
        <Patch>Properties[Dictionary].CopyInDescendants=true</Patch>
      </Class>
      <Class name="NSDirectoryEnumerator">
      </Class>
      <Class name="NSDistantObject">
        <Patch>Methods[InitWithLocalConnection].GenerateConstructor=false</Patch>
        <Patch>Methods[InitWithTargetConnection].GenerateConstructor=false</Patch>
      </Class>
      <Class name="NSDistantObjectRequest">
      </Class>
      <Class name="NSDistributedLock">
      </Class>
      <Class name="NSDistributedNotificationCenter">
        <Patch>Methods[PostNotificationNameObjectUserInfoOptions].Parameters[notificationOptions].Type=NSNotificationPostingBehavior</Patch>
        <Patch>Properties[DefaultCenter].Generate=false</Patch>
        <Patch>Enumerations[Notification_Posting_Behavior].Name=NSNotificationPostingBehavior</Patch>
        <Patch>Enumerations[NSNotificationPostingBehavior].BaseType=NSUInteger</Patch>
        <Patch>Enumerations[NSNotificationSuspensionBehavior].BaseType=NSUInteger</Patch>
      </Class>
      <Class name="NSEnumerator">
      </Class>
      <Class name="NSError">
        <Patch>Methods[ErrorWithDomainCodeUserInfo].ReturnType=NSError</Patch>
        <Replace type="Html">
          <Source><![CDATA[<dd><p><p class=]]></Source>
          <With><![CDATA[<dd><p class=]]></With>
        </Replace>
      </Class>
      <Class name="NSException">
        <Patch>Methods[RaiseFormat].Parameters[format,...].Generate=false</Patch>
        <Patch><![CDATA[Methods[RaiseFormat].Parameters[format]=<Parameter Generate="true" IsOut="false" IsByRef="false"><Summary><Line>MISSING</Line></Summary><Name>format</Name><Type>NSString</Type></Parameter>]]></Patch>
        <Patch><![CDATA[Methods[RaiseFormat].Parameters[values]=<Parameter Generate="true" IsOut="false" IsByRef="false"><Summary><Line>MISSING</Line></Summary><Name>values</Name><Type>params object[]</Type></Parameter>]]></Patch>
        <Patch>Methods[RaiseFormatArguments].Generate=false</Patch>
      </Class>
      <Class name="NSExistsCommand">
      </Class>
      <Class name="NSExpression">
        <Patch>Methods[ExpressionValueWithObjectContext].ReturnType=NSExpression</Patch>
        <Patch>Properties[ExpressionBlock].Type=IntPtr</Patch>
        <Patch>Properties[ExpressionBlock].Getter.ReturnType=IntPtr</Patch>
      </Class>
      <Class name="NSFileHandle">
        <Patch>Methods[FileHandleForReadingAtPath].ReturnType=NSFileHandle</Patch>
        <Patch>Methods[FileHandleForReadingFromURLError].ReturnType=NSFileHandle</Patch>
        <Patch>Methods[FileHandleForUpdatingAtPath].ReturnType=NSFileHandle</Patch>
        <Patch>Methods[FileHandleForUpdatingURLError].ReturnType=NSFileHandle</Patch>
        <Patch>Methods[FileHandleForWritingAtPath].ReturnType=NSFileHandle</Patch>
        <Patch>Methods[FileHandleForWritingToURLError].ReturnType=NSFileHandle</Patch>
        <Patch>Properties[FileHandleWithNullDevice].Type=NSFileHandle</Patch>
        <Patch>Properties[FileHandleWithNullDevice].Getter.ReturnType=NSFileHandle</Patch>
        <Patch>Properties[FileHandleWithStandardError].Type=NSFileHandle</Patch>
        <Patch>Properties[FileHandleWithStandardError].Getter.ReturnType=NSFileHandle</Patch>
        <Patch>Properties[FileHandleWithStandardInput].Type=NSFileHandle</Patch>
        <Patch>Properties[FileHandleWithStandardInput].Getter.ReturnType=NSFileHandle</Patch>
        <Patch>Properties[FileHandleWithStandardOutput].Type=NSFileHandle</Patch>
        <Patch>Properties[FileHandleWithStandardOutput].Getter.ReturnType=NSFileHandle</Patch>
        <Patch>Properties[ReadabilityHandler].Type=IntPtr</Patch>
        <Patch>Properties[WriteabilityHandler].Type=IntPtr</Patch>
      </Class>
      <Class name="NSFileManager">
        <Patch>Methods[FileExistsAtPathIsDirectory].Parameters[isDirectory].Type=bool</Patch>
        <Patch>Methods[FileExistsAtPathIsDirectory].Parameters[isDirectory].IsOut=true</Patch>
        <Patch>Methods[FileSystemRepresentationWithPath].ReturnType=IntPtr</Patch>
        <Patch>Methods[StringWithFileSystemRepresentationLength].Parameters[@string].Type=String</Patch>
        <Patch>Properties[Delegate].Type=Id</Patch>
        <Replace type="Generated">
          <Source><![CDATA[1UL <<]]></Source>
          <With><![CDATA[1U <<]]></With>
        </Replace>
        <Replace type="Generated">
          <Source><![CDATA[1L <<]]></Source>
          <With><![CDATA[1 <<]]></With>
        </Replace>
      </Class>
      <Class name="NSFileCoordinator">
        <Patch>Methods[PrepareForReadingItemsAtURLsOptionsWritingItemsAtURLsOptionsErrorByAccessor].Parameters[batchAccessor].Type=Action</Patch>
        <Patch>Methods[PrepareForReadingItemsAtURLsOptionsWritingItemsAtURLsOptionsErrorByAccessor].Parameters[batchAccessor].IsBlock=true</Patch>
      </Class>
      <Class name="NSFileSecurity">
      </Class>
      <Class name="NSFileVersion">
      </Class>
      <Class name="NSFormatter">
        <Patch>Methods[GetObjectValueForStringErrorDescription].Parameters[anObject].Type=Id</Patch>
        <Patch>Methods[GetObjectValueForStringErrorDescription].Parameters[anObject].IsOut=true</Patch>
      </Class>
      <Class name="NSGarbageCollector">
      </Class>
      <Class name="NSGetCommand">
      </Class>
      <Class name="NSHashTable">
        <Patch>Methods[HashTableWithOptions].ReturnType=NSHashTable</Patch>
        <Patch>Properties[HashTableWithWeakObjects].Type=NSHashTable</Patch>
        <Patch>Properties[HashTableWithWeakObjects].Getter.ReturnType=NSHashTable</Patch>
        <Patch>Enumerations[Hash_Table_Options].Name=NSHashTableOptions</Patch>
        <Patch>Enumerations[NSHashTableOptions].BaseType=NSUInteger</Patch>
        <Replace type="Generated">
          <Source> = NSPointerFunctions</Source>
          <With> =  NSPointerFunctionsOptions.NSPointerFunctions</With>
        </Replace>
      </Class>
      <Class name="NSHost">
      </Class>
      <Class name="NSHTTPCookie">
        <Replace type="Generated">
          <Source>public virtual NSUInteger Version</Source>
          <With>public new NSUInteger Version</With>
        </Replace>
      </Class>
      <Class name="NSHTTPCookieStorage">
        <Patch>Enumerations[NSHTTPCookieAcceptPolicy].BaseType=NSUInteger</Patch>
      </Class>
      <Class name="NSHTTPURLResponse">
      </Class>
      <Class name="NSIndexPath">
        <Patch>Methods[IndexPathWithIndex].ReturnType=NSIndexPath</Patch>
        <Patch>Methods[IndexPathWithIndexesLength].ReturnType=NSIndexPath</Patch>
        <Patch>Methods[IndexPathWithIndexesLength].Parameters[indexes].Type=IntPtr</Patch>
        <Patch>Methods[GetIndexes].Parameters[indexes].Type=IntPtr</Patch>
        <Patch>Methods[InitWithIndexesLength].Parameters[indexes].Type=IntPtr</Patch>
      </Class>
      <Class name="NSIndexSet">
        <Patch>Methods[GetIndexesMaxCountInIndexRange].Parameters[indexBuffer].Type=IntPtr</Patch>
        <Patch>Methods[IndexSetWithIndex].ReturnType=NSIndexSet</Patch>
        <Patch>Methods[IndexSetWithIndex].CopyInDescendants=true</Patch>
        <Patch>Methods[IndexSetWithIndexesInRange].ReturnType=NSIndexSet</Patch>
        <Patch>Methods[IndexSetWithIndexesInRange].CopyInDescendants=true</Patch>
        <Patch>Properties[IndexSet].Type=NSIndexSet</Patch>
        <Patch>Properties[IndexSet].Getter.ReturnType=NSIndexSet</Patch>
        <Patch>Properties[IndexSet].CopyInDescendants=true</Patch>
      </Class>
      <Class name="NSIndexSpecifier">
      </Class>
      <Class name="NSInputStream">
        <Patch>Methods[GetBufferLength].Parameters[buffer].Type=IntPtr</Patch>
        <Patch>Methods[GetBufferLength].Parameters[len].Type=NSInteger</Patch>
        <Patch>Methods[GetBufferLength].Parameters[len].IsOut=true</Patch>
        <Patch>Methods[InputStreamWithData].ReturnType=NSInputStream</Patch>
        <Patch>Methods[InputStreamWithFileAtPath].ReturnType=NSInputStream</Patch>
        <Patch>Methods[InputStreamWithURL].ReturnType=NSInputStream</Patch>
        <Patch>Methods[ReadMaxLength].Parameters[buffer].Type=IntPtr</Patch>
      </Class>
      <Class name="NSInvocation">
      </Class>
      <Class name="NSInvocationOperation">
      </Class>
      <Class name="NSJSONSerialization">
        <Replace type="Generated">
          <Source><![CDATA[1UL <<]]></Source>
          <With><![CDATA[1U <<]]></With>
        </Replace>
      </Class>
      <Class name="NSKeyedArchiver">
        <Patch>Methods[EncodeBytesLengthForKey].Parameters[bytesp].Type=IntPtr</Patch>
        <Patch>Methods[ClassNameForClass]{Static=True}.Generate=false</Patch>
        <Patch>Methods[SetClassNameForClass]{Static=True}.Generate=false</Patch>
        <Patch>Properties[Delegate].Type=Id</Patch>
      </Class>
      <Class name="NSKeyedUnarchiver">
        <Patch>Methods[DecodeBytesForKeyReturnedLength].Parameters[lengthp].Type=NSUInteger</Patch>
        <Patch>Methods[DecodeBytesForKeyReturnedLength].Parameters[lengthp].IsOut=true</Patch>
        <Patch>Methods[DecodeBytesForKeyReturnedLength].ReturnType=IntPtr</Patch>
        <Patch>Methods[ClassForClassName]{Static=True}.Generate=false</Patch>
        <Patch>Methods[SetClassForClassName]{Static=True}.Generate=false</Patch>
        <Patch>Properties[Delegate].Type=Id</Patch>
      </Class>
      <Class name="NSLinguisticTagger">
      </Class>
      <Class name="NSLocale">
        <Patch>Properties[AutoupdatingCurrentLocale].Type=NSLocale</Patch>
        <Patch>Properties[CurrentLocale].Type=NSLocale</Patch>
        <Patch>Properties[SystemLocale].Type=NSLocale</Patch>
        <Patch>Enumerations[NSLocaleLanguageDirection].Values[NSLocaleLanguageDirectionUnknown].Value=0</Patch>
        <Patch>Enumerations[NSLocaleLanguageDirection].Values[NSLocaleLanguageDirectionLeftToRight].Value=1</Patch>
        <Patch>Enumerations[NSLocaleLanguageDirection].Values[NSLocaleLanguageDirectionRightToLeft].Value=2</Patch>
        <Patch>Enumerations[NSLocaleLanguageDirection].Values[NSLocaleLanguageDirectionTopToBottom].Value=3</Patch>
        <Patch>Enumerations[NSLocaleLanguageDirection].Values[NSLocaleLanguageDirectionBottomToTop].Value=4</Patch>
      </Class>
      <Class name="NSLock">
      </Class>
      <Class name="NSLogicalTest">
        <Patch>Methods[InitOrTestWithTests].GenerateConstructor=false</Patch>
      </Class>
      <Class name="NSMachBootstrapServer">
      </Class>
      <Class name="NSMachPort">
        <Patch>Properties[Delegate].Generate=false</Patch>
        <Patch>Enumerations[Mach_Port_Rights].Name=NSMachPortRights</Patch>
        <Patch>Enumerations[NSMachPortRights].BaseType=int</Patch>
      </Class>
      <Class name="NSMapTable">
        <Patch>Methods[MapTableWithKeyOptionsValueOptions].ReturnType=NSMapTable</Patch>
        <Patch>Properties[MapTableWithStrongToStrongObjects].Type=NSMapTable</Patch>
        <Patch>Properties[MapTableWithStrongToStrongObjects].Getter.ReturnType=NSMapTable</Patch>
        <Patch>Properties[MapTableWithStrongToWeakObjects].Type=NSMapTable</Patch>
        <Patch>Properties[MapTableWithStrongToWeakObjects].Getter.ReturnType=NSMapTable</Patch>
        <Patch>Properties[MapTableWithWeakToStrongObjects].Type=NSMapTable</Patch>
        <Patch>Properties[MapTableWithWeakToStrongObjects].Getter.ReturnType=NSMapTable</Patch>
        <Patch>Properties[MapTableWithWeakToWeakObjects].Type=NSMapTable</Patch>
        <Patch>Properties[MapTableWithWeakToWeakObjects].Getter.ReturnType=NSMapTable</Patch>
        <Replace type="Generated">
          <Source> = NSPointerFunctions</Source>
          <With> =  NSPointerFunctionsOptions.NSPointerFunctions</With>
        </Replace>
      </Class>
      <Class name="NSMessagePort">
      </Class>
      <Class name="NSMessagePortNameServer">
      </Class>
      <Class name="NSMetadataItem">
      </Class>
      <Class name="NSMetadataQuery">
        <Patch>Properties[Delegate].Type=Id</Patch>
      </Class>
      <Class name="NSMetadataQueryAttributeValueTuple">
      </Class>
      <Class name="NSMetadataQueryResultGroup">
      </Class>
      <Class name="NSMethodSignature">
        <Patch>Methods[SignatureWithObjCTypes].Parameters[types].Type=String</Patch>
        <Patch>Methods[GetArgumentTypeAtIndex].ReturnType=IntPtr</Patch>
        <Patch>Properties[MethodReturnType].Type=IntPtr</Patch>
        <Patch>Properties[MethodReturnType].Getter.ReturnType=IntPtr</Patch>
      </Class>
      <Class name="NSMiddleSpecifier">
      </Class>
      <Class name="NSMoveCommand">
      </Class>
      <Class name="NSMutableArray">
        <Patch>Methods[ArrayWithCapacity].ReturnType=NSMutableArray</Patch>
      </Class>
      <Class name="NSMutableAttributedString">
      </Class>
      <Class name="NSMutableCharacterSet">
      </Class>
      <Class name="NSMutableData">
        <Patch>Methods[InitWithLength].GenerateConstructor=false</Patch>
      </Class>
      <Class name="NSMutableDictionary">
      </Class>
      <Class name="NSMutableIndexSet">
      </Class>
      <Class name="NSMutableOrderedSet">
        <Patch>Methods[AddObjectsCount].Generate=false</Patch>
        <Patch>Methods[ReplaceObjectsInRangeWithObjectsCount].Generate=false</Patch>
      </Class>
      <Class name="NSMutableSet">
      </Class>
      <Class name="NSMutableString">
        <Patch>Methods[AppendFormat].Parameters[format...].Generate=false</Patch>
        <Patch>Methods[AppendFormat].Parameters[format]=<![CDATA[<Parameter Generate="true"><Summary /><Name>format</Name><Type>NSString</Type></Parameter>]]></Patch>
        <Patch>Methods[AppendFormat].Parameters[values]=<![CDATA[<Parameter Generate="true"><Summary /><Name>values</Name><Type>params object[]</Type></Parameter>]]></Patch>
      </Class>
      <Class name="NSMutableURLRequest">
      </Class>
      <Class name="NSNameSpecifier">
      </Class>
      <Class name="NSNetService">
        <Patch>Properties[Delegate].Type=Id</Patch>
        <Patch>Enumerations[NSNetServicesError].BaseType=NSInteger</Patch>
      </Class>
      <Class name="NSNetServiceBrowser">
        <Patch>Properties[Delegate].Type=Id</Patch>
      </Class>
      <Class name="NSNotification">
        <Patch>Methods[NotificationWithNameObject].ReturnType=NSNotification</Patch>
        <Patch>Methods[NotificationWithNameObjectUserInfo].ReturnType=NSNotification</Patch>
      </Class>
      <Class name="NSNotificationCenter">
        <Patch>Methods[AddObserverForNameObjectQueueUsingBlock].Parameters[block].Type=Block</Patch>
        <Patch>Methods[AddObserverForNameObjectQueueUsingBlock].Parameters[block].IsBlock=false</Patch>
        <Patch>Properties[DefaultCenter].Type=NSNotificationCenter</Patch>
        <Patch>Properties[DefaultCenter].Getter.ReturnType=NSNotificationCenter</Patch>
        <Patch>Properties[DefaultCenter].CopyInDescendants=true</Patch>
      </Class>
      <Class name="NSNotificationQueue">
        <Patch>Enumerations[NSNotificationCoalescing].BaseType=NSUInteger</Patch>
        <Patch>Enumerations[NSPostingStyle].BaseType=NSUInteger</Patch>
      </Class>
      <Class name="NSNull">
      </Class>
      <Class name="NSNumber">
        <Patch>Methods[NumberWithUnsignedChar].Parameters[value].Type=byte</Patch>
        <Patch>Methods[InitWithUnsignedChar].Parameters[value].Type=byte</Patch>
        <Patch>Properties[ObjCType].Type=IntPtr</Patch>
        <Patch>Properties[ObjCType].Getter.ReturnType=IntPtr</Patch>
        <Patch>Properties[UnsignedCharValue].Type=byte</Patch>
        <Patch>Properties[UnsignedCharValue].Getter.ReturnType=byte</Patch>
        <!-- TODO: Review following -->
        <Patch>Methods[InitWithLong].Generate=false</Patch>
        <Patch>Methods[InitWithUnsignedLong].Generate=false</Patch>
        <Patch>Methods[NumberWithLong].Generate=false</Patch>
        <Patch>Methods[NumberWithUnsignedLong].Generate=false</Patch>
        <Patch>Properties[LongValue].Generate=false</Patch>
        <Patch>Properties[UnsignedLongValue].Generate=false</Patch>
      </Class>
      <Class name="NSNumberFormatter">
        <Patch>Enumerations[NSNumberFormatterStyle].Values[NSNumberFormatterNoStyle].Value=0</Patch>
        <Patch>Enumerations[NSNumberFormatterStyle].Values[NSNumberFormatterDecimalStyle].Value=1</Patch>
        <Patch>Enumerations[NSNumberFormatterStyle].Values[NSNumberFormatterCurrencyStyle].Value=2</Patch>
        <Patch>Enumerations[NSNumberFormatterStyle].Values[NSNumberFormatterPercentStyle].Value=3</Patch>
        <Patch>Enumerations[NSNumberFormatterStyle].Values[NSNumberFormatterScientificStyle].Value=4</Patch>
        <Patch>Enumerations[NSNumberFormatterStyle].Values[NSNumberFormatterSpellOutStyle].Value=5</Patch>
        <Patch>Enumerations[NSNumberFormatterPadPosition].Values[NSNumberFormatterPadBeforePrefix].Value=0</Patch>
        <Patch>Enumerations[NSNumberFormatterPadPosition].Values[NSNumberFormatterPadAfterPrefix].Value=1</Patch>
        <Patch>Enumerations[NSNumberFormatterPadPosition].Values[NSNumberFormatterPadBeforeSuffix].Value=2</Patch>
        <Patch>Enumerations[NSNumberFormatterPadPosition].Values[NSNumberFormatterPadAfterSuffix].Value=3</Patch>
        <Patch>Enumerations[NSNumberFormatterRoundingMode].Values[NSNumberFormatterRoundCeiling].Value=0</Patch>
        <Patch>Enumerations[NSNumberFormatterRoundingMode].Values[NSNumberFormatterRoundFloor].Value=1</Patch>
        <Patch>Enumerations[NSNumberFormatterRoundingMode].Values[NSNumberFormatterRoundDown].Value=2</Patch>
        <Patch>Enumerations[NSNumberFormatterRoundingMode].Values[NSNumberFormatterRoundUp].Value=3</Patch>
        <Patch>Enumerations[NSNumberFormatterRoundingMode].Values[NSNumberFormatterRoundHalfEven].Value=4</Patch>
        <Patch>Enumerations[NSNumberFormatterRoundingMode].Values[NSNumberFormatterRoundHalfDown].Value=5</Patch>
        <Patch>Enumerations[NSNumberFormatterRoundingMode].Values[NSNumberFormatterRoundHalfUp].Value=6</Patch>
      </Class>
      <Class name="NSObject">
        <Patch>BaseType=Id</Patch>
        <Patch>ConformsTo=NSObject,NSKeyValueBindingCreation,NSKeyValueCoding,NSKeyValueObserving,NSScriptKeyValueCoding</Patch>
        <Patch>Methods[Alloc].Generate=false</Patch>
        <Patch>Methods[ConformsToProtocol].Generate=false</Patch>
        <Patch>Methods[CopyWithZone].Generate=false</Patch>
        <Patch>Methods[Finalize].Generate=false</Patch>
        <Patch>Methods[MutableCopyWithZone].Generate=false</Patch>
        <Patch>Methods[Retain].Generate=false</Patch>
        <Patch>Methods[Release].Generate=false</Patch>
        <Patch>Properties[Class][Static=False].Generate=false</Patch>
        <Patch>Properties[Class]{Static=True}.Generate=false</Patch>
        <Patch>Properties[Description]{Static=True}.Generate=false</Patch>
        <Patch>Properties[Superclass]{Static=True}.Generate=false</Patch>
        <Replace type="Generated">
          <Source><![CDATA[[ObjectiveCClass("NSObject")]]]></Source>
          <With><![CDATA[[ObjectiveCClass("NSObject", InterceptDealloc = true)]]]></With>
        </Replace>
      </Class>
      <Class name="NSOperation">
        <Patch>Methods[CompletionBlock].Generate=false</Patch>
        <Patch>Properties[CompletionBlock]=<![CDATA[<Property Generate="true" Override="false" Static="false"><Summary><Line>Returns the block to execute when the operation’s main task is complete.</Line><Line>Operation objects monitor the isFinished key path and execute this block when the value at that key path changes to YES. As a result, this block is called regardless of whether the operation completed successfully or was cancelled.</Line></Summary><Availability>Mac OS X v10.6</Availability><Name>CompletionBlock</Name><Type>IntPtr</Type><Getter Generate="true" Override="false" Static="false"><Summary><Line>Returns the block to execute when the operation’s main task is complete.</Line><Line>Operation objects monitor the isFinished key path and execute this block when the value at that key path changes to YES. As a result, this block is called regardless of whether the operation completed successfully or was cancelled.</Line></Summary><Availability>Mac OS X v10.6</Availability><Name>CompletionBlock</Name><Selector>completionBlock</Selector><Signature>- (void (^)(void))completionBlock</Signature><ReturnType>IntPtr</ReturnType><ReturnsDocumentation>The block to execute after the operation’s main task is completed. This block takes no parameters and has no return value.</ReturnsDocumentation><Parameters /></Getter></Property>]]></Patch>
        <Patch>Enumerations[Operation_Priorities].Name=NSOperationQueuePriority</Patch>
        <Patch>Enumerations[NSOperationQueuePriority].BaseType=NSInteger</Patch>
      </Class>
      <Class name="NSOperationQueue">
        <!-- TODO: Move to constants -->
        <Patch>Enumerations[Concurrent_Operation_Constants].Generate=false</Patch>
      </Class>
      <Class name="NSOrderedSet">
        <Patch>Methods[GetObjectsRange].Generate=false</Patch>
        <Patch>Methods[InitWithObjects].Parameters[firstObj,...].Generate=false</Patch>
        <Patch>Methods[InitWithObjects].Parameters[firstObj]=<![CDATA[<Parameter Generate="true"><Summary /><Name>firstObj</Name><Type>Id</Type></Parameter>]]></Patch>
        <Patch>Methods[InitWithObjects].Parameters[values]=<![CDATA[<Parameter Generate="true"><Summary /><Name>values</Name><Type>params object[]</Type></Parameter>]]></Patch>
        <Patch>Methods[InitWithObjectsCount].Generate=false</Patch>
        <Patch>Methods[OrderedSetWithArray].ReturnType=NSOrderedSet</Patch>
        <Patch>Methods[OrderedSetWithArray].CopyInDescendants=true</Patch>
        <Patch>Methods[OrderedSetWithArrayRangeCopyItems].ReturnType=NSOrderedSet</Patch>
        <Patch>Methods[OrderedSetWithArrayRangeCopyItems].CopyInDescendants=true</Patch>
        <Patch>Methods[OrderedSetWithObject].ReturnType=NSOrderedSet</Patch>
        <Patch>Methods[OrderedSetWithObject].CopyInDescendants=true</Patch>
        <Patch>Methods[OrderedSetWithObjects].Parameters[firstObj,...].Generate=false</Patch>
        <Patch>Methods[OrderedSetWithObjects].Parameters[firstObj]=<![CDATA[<Parameter Generate="true"><Summary><Line>MISSING</Line></Summary><Name>firstObj</Name><Type>Id</Type></Parameter>]]></Patch>
        <Patch>Methods[OrderedSetWithObjects].Parameters[values]=<![CDATA[<Parameter Generate="true"><Summary><Line>MISSING</Line></Summary><Name>values</Name><Type>params object[]</Type></Parameter>]]></Patch>
        <Patch>Methods[OrderedSetWithObjects].ReturnType=NSOrderedSet</Patch>
        <Patch>Methods[OrderedSetWithObjects].CopyInDescendants=true</Patch>
        <Patch>Methods[OrderedSetWithObjectsCount].ReturnType=NSOrderedSet</Patch>
        <Patch>Methods[OrderedSetWithObjectsCount].CopyInDescendants=true</Patch>
        <Patch>Methods[OrderedSetWithObjectsCount].Generate=false</Patch>
        <Patch>Methods[OrderedSetWithOrderedSet].ReturnType=NSOrderedSet</Patch>
        <Patch>Methods[OrderedSetWithOrderedSet].CopyInDescendants=true</Patch>
        <Patch>Methods[OrderedSetWithOrderedSetRangeCopyItems].ReturnType=NSOrderedSet</Patch>
        <Patch>Methods[OrderedSetWithOrderedSetRangeCopyItems].CopyInDescendants=true</Patch>
        <Patch>Methods[OrderedSetWithSet].ReturnType=NSOrderedSet</Patch>
        <Patch>Methods[OrderedSetWithSet].CopyInDescendants=true</Patch>
        <Patch>Methods[OrderedSetWithSetCopyItems].ReturnType=NSOrderedSet</Patch>
        <Patch>Methods[OrderedSetWithSetCopyItems].CopyInDescendants=true</Patch>
        <Patch>Properties[OrderedSet].Type=NSOrderedSet</Patch>
        <Patch>Properties[OrderedSet].CopyInDescendants=true</Patch>
      </Class>
      <Class name="NSOrthography">
        <Patch>Methods[OrthographyWithDominantScriptLanguageMap].ReturnType=NSOrthography</Patch>
      </Class>
      <Class name="NSOutputStream">
        <Patch>Methods[OutputStreamToBufferCapacity].Parameters[buffer].Type=IntPtr</Patch>
        <Patch>Methods[OutputStreamToBufferCapacity].ReturnType=NSOutputStream</Patch>
        <Patch>Methods[OutputStreamToFileAtPathAppend].ReturnType=NSOutputStream</Patch>
        <Patch>Methods[OutputStreamWithURLAppend].ReturnType=NSOutputStream</Patch>
        <Patch>Methods[InitToBufferCapacity].Parameters[buffer].Type=IntPtr</Patch>
        <Patch>Methods[WriteMaxLength].Parameters[buffer].Type=IntPtr</Patch>
        <Patch>Properties[OutputStreamToMemory].Type=NSOutputStream</Patch>
        <Patch>Properties[OutputStreamToMemory].Getter.ReturnType=NSOutputStream</Patch>
      </Class>
      <Class name="NSPipe">
        <Patch>Properties[Pipe].Type=NSPipe</Patch>
        <Patch>Properties[Pipe].Getter.ReturnType=NSPipe</Patch>
      </Class>
      <Class name="NSPointerArray">
        <Patch>Methods[PointerArrayWithOptions].ReturnType=NSPointerArray</Patch>
        <Patch>Methods[PointerArrayWithPointerFunctions].ReturnType=NSPointerArray</Patch>
        <Patch>Properties[PointerArrayWithStrongObjects].Type=NSPointerArray</Patch>
        <Patch>Properties[PointerArrayWithStrongObjects].Getter.ReturnType=NSPointerArray</Patch>
        <Patch>Properties[PointerArrayWithWeakObjects].Type=NSPointerArray</Patch>
        <Patch>Properties[PointerArrayWithWeakObjects].Getter.ReturnType=NSPointerArray</Patch>
      </Class>
      <Class name="NSPointerFunctions">
        <Patch>Methods[PointerFunctionsWithOptions].ReturnType=NSPointerFunctions</Patch>
        <Patch>Properties[AcquireFunction].Type=IntPtr</Patch>
        <Patch>Properties[AcquireFunction].Getter.ReturnType=IntPtr</Patch>
        <Patch>Properties[DescriptionFunction].Type=IntPtr</Patch>
        <Patch>Properties[DescriptionFunction].Getter.ReturnType=IntPtr</Patch>
        <Patch>Properties[HashFunction].Type=IntPtr</Patch>
        <Patch>Properties[HashFunction].Getter.ReturnType=IntPtr</Patch>
        <Patch>Properties[IsEqualFunction].Type=IntPtr</Patch>
        <Patch>Properties[IsEqualFunction].Getter.ReturnType=IntPtr</Patch>
        <Patch>Properties[RelinquishFunction].Type=IntPtr</Patch>
        <Patch>Properties[RelinquishFunction].Getter.ReturnType=IntPtr</Patch>
        <Patch>Properties[SizeFunction].Type=IntPtr</Patch>
        <Patch>Properties[SizeFunction].Getter.ReturnType=IntPtr</Patch>
        <Patch>Enumerations[Memory_and_Personality_Options].Name=NSPointerFunctionsOptions</Patch>
        <Patch>Enumerations[NSPointerFunctionsOptions].BaseType=NSUInteger</Patch>
      </Class>
      <Class name="NSPort">
        <Patch>Properties[Delegate].Type=Id</Patch>
      </Class>
      <Class name="NSPortCoder">
        <Patch>Methods[PortCoderWithReceivePortSendPortComponents].ReturnType=NSPortCoder</Patch>
      </Class>
      <Class name="NSPortMessage">
      </Class>
      <Class name="NSPortNameServer">
      </Class>
      <Class name="NSPositionalSpecifier">
        <Patch>Enumerations[NSInsertionPosition].BaseType=NSUInteger</Patch>
      </Class>
      <Class name="NSPredicate">
        <Patch>Methods[PredicateWithFormatArguments].Generate=false</Patch>
        <Patch>Methods[PredicateWithFormat].Parameters[format,...].Generate=false</Patch>
        <Patch>Methods[PredicateWithFormat].Parameters[format]=<![CDATA[<Parameter Generate="true" IsOut="false" IsByRef="false"><Summary /><Name>format</Name><Type>NSString</Type></Parameter>]]></Patch>
        <Patch>Methods[PredicateWithFormat].Parameters[values]=<![CDATA[<Parameter Generate="true" IsOut="false" IsByRef="false"><Summary /><Name>values</Name><Type>params object[]</Type></Parameter>]]></Patch>
      </Class>
      <Class name="NSProcessInfo">
        <Patch>Enumerations[NSProcessInfo_Operating_Systems].Name=NSProcessInfoOperatingSystem</Patch>
        <Patch>Enumerations[NSProcessInfoOperatingSystem].BaseType=NSUInteger</Patch>
      </Class>
      <Class name="NSPropertyListSerialization">
        <Patch>Methods[PropertyListFromDataMutabilityOptionFormatErrorDescription].Parameters[format].Type=NSPropertyListFormat</Patch>
        <Patch>Methods[PropertyListFromDataMutabilityOptionFormatErrorDescription].Parameters[format].IsOut=true</Patch>
        <Patch>Methods[PropertyListWithDataOptionsFormatError].Parameters[format].Type=NSPropertyListFormat</Patch>
        <Patch>Methods[PropertyListWithDataOptionsFormatError].Parameters[format].IsOut=true</Patch>
        <Patch>Methods[PropertyListWithStreamOptionsFormatError].Parameters[format].Type=NSPropertyListFormat</Patch>
        <Patch>Methods[PropertyListWithStreamOptionsFormatError].Parameters[format].IsOut=true</Patch>
        <Patch>Methods[DataWithPropertyListFormatOptionsError].Parameters[opt].Type=NSPropertyListMutabilityOptions</Patch>
        <Patch>Methods[PropertyListWithDataOptionsFormatError].Parameters[opt].Type=NSPropertyListMutabilityOptions</Patch>
        <Patch>Methods[PropertyListWithStreamOptionsFormatError].Parameters[opt].Type=NSPropertyListMutabilityOptions</Patch>
        <Patch>Methods[WritePropertyListToStreamFormatOptionsError].Parameters[opt].Type=NSPropertyListMutabilityOptions</Patch>
        <Patch>Enumerations[NSPropertyListMutabilityOptions].Values[NSPropertyListImmutable].Value=0</Patch>
        <Patch>Enumerations[NSPropertyListMutabilityOptions].Values[NSPropertyListMutableContainers].Value=1</Patch>
        <Patch>Enumerations[NSPropertyListMutabilityOptions].Values[NSPropertyListMutableContainersAndLeaves].Value=2</Patch>
        <Patch>Enumerations[NSPropertyListFormat].BaseType=NSUInteger</Patch>
        <Patch>Enumerations[NSPropertyListFormat].Values[NSPropertyListOpenStepFormat].Value=1</Patch>
        <Patch>Enumerations[NSPropertyListFormat].Values[NSPropertyListXMLFormat_v1_0].Value=100</Patch>
        <Patch>Enumerations[NSPropertyListFormat].Values[NSPropertyListBinaryFormat_v1_0].Value=200</Patch>
      </Class>
      <Class name="NSPropertySpecifier">
      </Class>
      <Class name="NSProtocolChecker">
        <Patch>Methods[ProtocolCheckerWithTargetProtocol].ReturnType=NSProtocolChecker</Patch>
      </Class>
      <Class name="NSProxy">
        <Patch>BaseType=Id</Patch>
        <Patch>Methods[Alloc].Generate=false</Patch>
        <Patch>Methods[Finalize].Generate=false</Patch>
        <Patch>Methods[RespondsToSelector].Generate=false</Patch>
        <Patch>Methods[Retain].Generate=false</Patch>
        <Patch>Methods[Release].Generate=false</Patch>
        <Patch>Properties[Class][Static=False].Generate=false</Patch>
        <Patch>Properties[Class]{Static=True}.Generate=false</Patch>
        <Replace type="Generated">
          <Source><![CDATA[[ObjectiveCClass("NSProxy")]]]></Source>
          <With><![CDATA[[ObjectiveCClass("NSProxy", InterceptDealloc = true)]]]></With>
        </Replace>
      </Class>
      <Class name="NSPurgeableData">
        <Patch>MinAvailability=Mac OS X v10.6</Patch>
      </Class>
      <Class name="NSQuitCommand">
      </Class>
      <Class name="NSRandomSpecifier">
      </Class>
      <Class name="NSRangeSpecifier">
      </Class>
      <Class name="NSRecursiveLock">
      </Class>
      <Class name="NSRegularExpression">
      </Class>
      <Class name="NSRelativeSpecifier">
        <Patch>Enumerations[NSRelativePosition].BaseType=NSUInteger</Patch>
      </Class>
      <Class name="NSRunLoop">
      </Class>
      <Class name="NSScanner">
        <Patch>Methods[ScanDecimal].Parameters[decimalValue].Type=NSDecimal</Patch>
        <Patch>Methods[ScanDecimal].Parameters[decimalValue].IsOut=true</Patch>
        <Patch>Methods[ScanDouble].Parameters[doubleValue].Type=double</Patch>
        <Patch>Methods[ScanDouble].Parameters[doubleValue].IsOut=true</Patch>
        <Patch>Methods[ScanFloat].Parameters[floatValue].Type=float</Patch>
        <Patch>Methods[ScanFloat].Parameters[floatValue].IsOut=true</Patch>
        <Patch>Methods[ScanHexDouble].Parameters[result].Type=double</Patch>
        <Patch>Methods[ScanHexDouble].Parameters[result].IsOut=true</Patch>
        <Patch>Methods[ScanHexFloat].Parameters[result].Type=float</Patch>
        <Patch>Methods[ScanHexFloat].Parameters[result].IsOut=true</Patch>
        <Patch>Methods[ScanHexInt].Parameters[intValue].Type=uint</Patch>
        <Patch>Methods[ScanHexInt].Parameters[intValue].IsOut=true</Patch>
        <Patch>Methods[ScanHexLongLong].Parameters[result].Type=ulong</Patch>
        <Patch>Methods[ScanHexLongLong].Parameters[result].IsOut=true</Patch>
        <Patch>Methods[ScanInt].Parameters[intValue].Type=int</Patch>
        <Patch>Methods[ScanInt].Parameters[intValue].IsOut=true</Patch>
        <Patch>Methods[ScanInteger].Parameters[value].Type=NSInteger</Patch>
        <Patch>Methods[ScanInteger].Parameters[value].IsOut=true</Patch>
        <Patch>Methods[ScanLongLong].Parameters[longLongValue].Type=long</Patch>
        <Patch>Methods[ScanLongLong].Parameters[longLongValue].IsOut=true</Patch>
        <Patch>Methods[ScannerWithString].ReturnType=NSScanner</Patch>
      </Class>
      <Class name="NSScriptClassDescription">
        <Patch>Methods[ClassDescriptionForClass].Generate=false</Patch>
      </Class>
      <Class name="NSScriptCoercionHandler">
      </Class>
      <Class name="NSScriptCommand">
        <Patch>Enumerations[NSScriptCommand_General_Command_Execution_Errors].Name=NSScriptCommandError</Patch>
        <Patch>Enumerations[NSScriptCommandError].BaseType=int</Patch>
      </Class>
      <Class name="NSScriptCommandDescription">
      </Class>
      <Class name="NSScriptExecutionContext">
      </Class>
      <Class name="NSScriptObjectSpecifier">
        <Patch>Methods[IndicesOfObjectsByEvaluatingWithContainerCount].Parameters[numRefs].Type=IntPtr</Patch>
        <Patch>Methods[IndicesOfObjectsByEvaluatingWithContainerCount].ReturnType=IntPtr</Patch>
        <Patch>Enumerations[NSScriptObjectSpecifier_Specifier_Evaluation_Errors].Name=NSScriptObjectSpecifierError</Patch>
        <Patch>Enumerations[NSScriptObjectSpecifierError].BaseType=int</Patch>
      </Class>
      <Class name="NSScriptSuiteRegistry">
      </Class>
      <Class name="NSScriptWhoseTest">
      </Class>
      <Class name="NSSerializer">
      </Class>
      <Class name="NSSet">
        <Patch>Methods[Set].ReturnType=NSSet</Patch>
        <Patch>Methods[Set].Generate=false</Patch>
        <Patch>Methods[SetWithArray].ReturnType=NSSet</Patch>
        <Patch>Methods[SetWithArray].CopyInDescendants=true</Patch>
        <Patch>Methods[SetWithObject].ReturnType=NSSet</Patch>
        <Patch>Methods[SetWithObject].CopyInDescendants=true</Patch>
        <Patch>Methods[SetWithObjects].ReturnType=NSSet</Patch>
        <Patch>Methods[SetWithObjects].Parameters[firstObj...].Generate=false</Patch>
        <Patch>Methods[SetWithObjects].Parameters[firstObj]=<![CDATA[<Parameter Generate="true"><Summary /><Name>firstObj</Name><Type>Id</Type></Parameter>]]></Patch>
        <Patch>Methods[SetWithObjects].Parameters[values]=<![CDATA[<Parameter Generate="true"><Summary /><Name>values</Name><Type>params object[]</Type></Parameter>]]></Patch>
        <Patch>Methods[SetWithObjects].CopyInDescendants=true</Patch>
        <Patch>Methods[SetWithObjectsCount].ReturnType=NSSet</Patch>
        <Patch>Methods[SetWithObjectsCount].Generate=false</Patch>
        <Patch>Methods[SetWithSet].ReturnType=NSSet</Patch>
        <Patch>Methods[SetWithSet].CopyInDescendants=true</Patch>
        <Patch>Methods[InitWithObjects].Parameters[firstObj...].Generate=false</Patch>
        <Patch>Methods[InitWithObjects].Parameters[firstObj]=<![CDATA[<Parameter Generate="true"><Summary /><Name>firstObj</Name><Type>Id</Type></Parameter>]]></Patch>
        <Patch>Methods[InitWithObjects].Parameters[values]=<![CDATA[<Parameter Generate="true"><Summary /><Name>values</Name><Type>params object[]</Type></Parameter>]]></Patch>
        <Patch>Methods[InitWithObjectsCount].Generate=false</Patch>
        <Patch>Properties[Set]=<![CDATA[<Property Generate="true" Static="true"><Summary><Line>Creates and returns an empty set.</Line></Summary><MinAvailability>Mac OS X v10.0</MinAvailability><Name>Set</Name><Type>NSSet</Type><Getter Generate="true" Static="true" GenerateConstructor="true"><Summary><Line>Creates and returns an empty set.</Line></Summary><MinAvailability>Mac OS X v10.0</MinAvailability><Name>Set</Name><Selector>set</Selector><Signature>+ (id)set</Signature><ReturnType>NSSet</ReturnType><ReturnsDocumentation>A new empty set.</ReturnsDocumentation><Parameters /></Getter></Property>]]></Patch>
        <Patch>Properties[Set].CopyInDescendants=true</Patch>
      </Class>
      <Class name="NSSetCommand">
      </Class>
      <Class name="NSSocketPort">
        <Patch>Methods[InitRemoteWithProtocolFamilySocketTypeProtocolAddress].GenerateConstructor=false</Patch>
      </Class>
      <Class name="NSSocketPortNameServer">
      </Class>
      <Class name="NSSortDescriptor">
        <Patch>Methods[SortDescriptorWithKeyAscending].ReturnType=NSSortDescriptor</Patch>
        <Patch>Methods[SortDescriptorWithKeyAscendingComparator].ReturnType=NSSortDescriptor</Patch>
        <Patch>Methods[SortDescriptorWithKeyAscendingSelector].ReturnType=NSSortDescriptor</Patch>
      </Class>
      <Class name="NSSpecifierTest">
        <Patch>Enumerations[NSTestComparisonOperation].BaseType=NSUInteger</Patch>
      </Class>
      <Class name="NSSpellServer">
        <Patch>Properties[Delegate].Type=Id</Patch>
      </Class>
      <Class name="NSStream">
        <Patch>Properties[Delegate].Type=Id</Patch>
        <Patch>Enumerations[Stream_Status_Constants].Name=NSStreamStatus</Patch>
        <Patch>Enumerations[NSStreamStatus].BaseType=NSUInteger</Patch>
        <Patch>Enumerations[Stream_Event_Constants].Name=NSStreamEvent</Patch>
        <Patch>Enumerations[NSStreamEvent].BaseType=NSUInteger</Patch>
      </Class>
      <Class name="NSString">
        <Patch>Methods[LocalizedStringWithFormat].Parameters[format...].Generate=false</Patch>
        <Patch>Methods[LocalizedStringWithFormat].Parameters[format]=<![CDATA[<Parameter Generate="true" IsOut="false" IsByRef="false"><Summary /><Name>format</Name><Type>NSString</Type></Parameter>]]></Patch>
        <Patch>Methods[LocalizedStringWithFormat].Parameters[values]=<![CDATA[<Parameter Generate="true" IsOut="false" IsByRef="false"><Summary /><Name>values</Name><Type>params object[]</Type></Parameter>]]></Patch>
        <Patch>Methods[LocalizedStringWithFormat].ReturnType=NSString</Patch>
        <Patch>Methods[StringWithCharactersLength].Parameters[chars].Type=IntPtr</Patch>
        <Patch>Methods[StringWithCharactersLength].ReturnType=NSString</Patch>
        <Patch>Methods[StringWithContentsOfFileEncodingError].ReturnType=NSString</Patch>
        <Patch>Methods[StringWithContentsOfFileUsedEncodingError].ReturnType=NSString</Patch>
        <Patch>Methods[StringWithContentsOfURLEncodingError].ReturnType=NSString</Patch>
        <Patch>Methods[StringWithContentsOfURLUsedEncodingError].ReturnType=NSString</Patch>
        <Patch>Methods[StringWithCStringEncoding].Parameters[cString].Type=String</Patch>
        <Patch>Methods[StringWithCStringEncoding].ReturnType=NSString</Patch>
        <Patch>Methods[StringWithFormat].Parameters[format,...].Generate=false</Patch>
        <Patch>Methods[StringWithFormat].Parameters[format]=<![CDATA[<Parameter Generate="true" IsOut="false" IsByRef="false"><Summary /><Name>format</Name><Type>NSString</Type></Parameter>]]></Patch>
        <Patch>Methods[StringWithFormat].Parameters[values]=<![CDATA[<Parameter Generate="true" IsOut="false" IsByRef="false"><Summary /><Name>values</Name><Type>params object[]</Type></Parameter>]]></Patch>
        <Patch>Methods[StringWithFormat].ReturnType=NSString</Patch>
        <Patch>Methods[StringWithString].ReturnType=NSString</Patch>
        <Patch>Methods[StringWithUTF8String].Parameters[bytes].Type=String</Patch>
        <Patch>Methods[StringWithUTF8String].ReturnType=NSString</Patch>
        <Patch>Methods[CharacterAtIndex].ReturnType=char</Patch>
        <Patch>Methods[CStringUsingEncoding].ReturnType=IntPtr</Patch>
        <Patch>Methods[GetCharactersRange].Parameters[buffer].Type=IntPtr</Patch>
        <Patch>Methods[GetCStringMaxLengthEncoding].Parameters[buffer].Type=IntPtr</Patch>
        <Patch>Methods[GetFileSystemRepresentationMaxLength].Parameters[buffer].Type=IntPtr</Patch>
        <Patch>Methods[InitWithCharactersLength].Parameters[characters].Type=String</Patch>
        <Patch>Methods[InitWithCharactersNoCopyLengthFreeWhenDone].Parameters[characters].Type=String</Patch>
        <Patch>Methods[InitWithCStringEncoding].Parameters[nullTerminatedCString].Type=IntPtr</Patch>
        <Patch>Methods[InitWithFormat].Parameters[format...].Generate=false</Patch>
        <Patch>Methods[InitWithFormat].Parameters[format]=<![CDATA[<Parameter Generate="true" IsOut="false" IsByRef="false"><Summary /><Name>format</Name><Type>NSString</Type></Parameter>]]></Patch>
        <Patch>Methods[InitWithFormat].Parameters[values]=<![CDATA[<Parameter Generate="true" IsOut="false" IsByRef="false"><Summary /><Name>values</Name><Type>params object[]</Type></Parameter>]]></Patch>
        <Patch>Methods[InitWithFormatArguments].Generate=false</Patch>
        <Patch>Methods[InitWithFormatLocale].Parameters[locale...].Generate=false</Patch>
        <Patch>Methods[InitWithFormatLocale].Parameters[format]=<![CDATA[<Parameter Generate="true" IsOut="false" IsByRef="false"><Summary /><Name>format</Name><Type>NSString</Type></Parameter>]]></Patch>
        <Patch>Methods[InitWithFormatLocale].Parameters[locale]=<![CDATA[<Parameter Generate="true" IsOut="false" IsByRef="false"><Summary /><Name>locale</Name><Type>Id</Type></Parameter>]]></Patch>
        <Patch>Methods[InitWithFormatLocale].Parameters[values]=<![CDATA[<Parameter Generate="true" IsOut="false" IsByRef="false"><Summary /><Name>values</Name><Type>params object[]</Type></Parameter>]]></Patch>
        <Patch>Methods[InitWithFormatLocaleArguments].Generate=false</Patch>
        <Patch>Methods[InitWithUTF8String].Parameters[bytes].Type=String</Patch>
        <Patch>Methods[StringByAppendingFormat].Parameters[format...].Generate=false</Patch>
        <Patch>Methods[StringByAppendingFormat].Parameters[format]=<![CDATA[<Parameter Generate="true" IsOut="false" IsByRef="false"><Summary /><Name>format</Name><Type>NSString</Type></Parameter>]]></Patch>
        <Patch>Methods[StringByAppendingFormat].Parameters[values]=<![CDATA[<Parameter Generate="true" IsOut="false" IsByRef="false"><Summary /><Name>values</Name><Type>params object[]</Type></Parameter>]]></Patch>
        <Patch>Methods[StringByAppendingFormat].ReturnType=NSString</Patch>
        <Patch>Methods[GetBytesMaxLengthUsedLengthEncodingOptionsRangeRemainingRange].Parameters[usedBufferCount].Type=NSUInteger</Patch>
        <Patch>Methods[GetBytesMaxLengthUsedLengthEncodingOptionsRangeRemainingRange].Parameters[usedBufferCount].IsByRef=true</Patch>
        <Patch>Methods[GetLineStartEndContentsEndForRange].Parameters[startIndex].Type=NSUInteger</Patch>
        <Patch>Methods[GetLineStartEndContentsEndForRange].Parameters[startIndex].IsByRef=true</Patch>
        <Patch>Methods[GetLineStartEndContentsEndForRange].Parameters[lineEndIndex].Type=NSUInteger</Patch>
        <Patch>Methods[GetLineStartEndContentsEndForRange].Parameters[lineEndIndex].IsByRef=true</Patch>
        <Patch>Methods[GetLineStartEndContentsEndForRange].Parameters[contentsEndIndex].Type=NSUInteger</Patch>
        <Patch>Methods[GetLineStartEndContentsEndForRange].Parameters[contentsEndIndex].IsByRef=true</Patch>
        <Patch>Methods[GetParagraphStartEndContentsEndForRange].Parameters[startIndex].Type=NSUInteger</Patch>
        <Patch>Methods[GetParagraphStartEndContentsEndForRange].Parameters[startIndex].IsByRef=true</Patch>
        <Patch>Methods[GetParagraphStartEndContentsEndForRange].Parameters[endIndex].Type=NSUInteger</Patch>
        <Patch>Methods[GetParagraphStartEndContentsEndForRange].Parameters[endIndex].IsByRef=true</Patch>
        <Patch>Methods[GetParagraphStartEndContentsEndForRange].Parameters[contentsEndIndex].Type=NSUInteger</Patch>
        <Patch>Methods[GetParagraphStartEndContentsEndForRange].Parameters[contentsEndIndex].IsByRef=true</Patch>
        <Patch>Methods[StringWithContentsOfFileUsedEncodingError].Parameters[enc].Type=NSStringEncoding</Patch>
        <Patch>Methods[StringWithContentsOfFileUsedEncodingError].Parameters[enc].IsOut=true</Patch>
        <Patch>Methods[StringWithContentsOfURLUsedEncodingError].Parameters[enc].Type=NSStringEncoding</Patch>
        <Patch>Methods[StringWithContentsOfURLUsedEncodingError].Parameters[enc].IsOut=true</Patch>
        <Patch>Methods[InitWithContentsOfFileUsedEncodingError].Parameters[enc].Type=NSStringEncoding</Patch>
        <Patch>Methods[InitWithContentsOfFileUsedEncodingError].Parameters[enc].IsOut=true</Patch>
        <Patch>Methods[InitWithContentsOfURLUsedEncodingError].Parameters[enc].Type=NSStringEncoding</Patch>
        <Patch>Methods[InitWithContentsOfURLUsedEncodingError].Parameters[enc].IsOut=true</Patch>
        <Patch>Properties[AvailableStringEncodings].Type=IntPtr</Patch>
        <Patch>Properties[AvailableStringEncodings].Getter.ReturnType=IntPtr</Patch>
        <Patch>Properties[FileSystemRepresentation].Type=IntPtr</Patch>
        <Patch>Properties[FileSystemRepresentation].Getter.ReturnType=IntPtr</Patch>
        <Patch>Properties[String].Type=NSString</Patch>
        <Patch>Properties[String].Getter.ReturnType=NSString</Patch>
        <Patch>Properties[String].CopyInDescendants=true</Patch>
        <Patch>Properties[UTF8String].Type=IntPtr</Patch>
        <Patch>Properties[UTF8String].Getter.ReturnType=IntPtr</Patch>
        <Patch>Constants[CompareOptions].Generate=false</Patch>
        <Patch>Constants[EncodingConversionOptions].Generate=false</Patch>
        <Patch>Constants[Encoding].Generate=false</Patch>
        <Patch>Enumerations[Search_and_Comparison_Options].Name=NSStringCompareOptions</Patch>
        <Patch>Enumerations[NSStringCompareOptions].BaseType=NSUInteger</Patch>
        <Patch>Enumerations[Encoding_Conversion_Options].Name=NSStringEncodingConversionOptions</Patch>
        <Patch>Enumerations[NSStringEncodingConversionOptions].BaseType=NSUInteger</Patch>
        <Patch>Enumerations[String_Encodings].Name=NSStringEncoding</Patch>
        <Patch>Enumerations[NSStringEncoding].BaseType=NSUInteger</Patch>
        <Replace type="Html">
          <Source><![CDATA[)<pre class=]]></Source>
          <With><![CDATA[)</p><pre class=]]></With>
        </Replace>
        <Replace type="Html">
          <Source><![CDATA[<dd><p><p class=]]></Source>
          <With><![CDATA[<dd><p class=]]></With>
        </Replace>
        <Replace type="Xhtml">
          <Source>
            <![CDATA[typedef <!--a-->NSUInteger<!--/a--> NSStringEnumerationOptions;
enum]]>
          </Source>
          <With><![CDATA[enum]]></With>
        </Replace>
        <Replace type="Xhtml">
          <Source>
            <![CDATA[NSStringEnumerationLocalized</a> = 1<!--a-->UL<!--/a--> &amp;lt;&amp;lt; 10
};
</pre>]]>
          </Source>
          <With>
            <![CDATA[NSStringEnumerationLocalized</a> = 1<!--a-->UL<!--/a--> &amp;lt;&amp;lt; 10
}; typedef <!--a-->NSUInteger<!--/a--> NSStringEnumerationOptions;
</pre>]]>
          </With>
        </Replace>
        <Replace type="Generated">
          <Source><![CDATA[1UL <<]]></Source>
          <With><![CDATA[1U <<]]></With>
        </Replace>
      </Class>
      <Class name="NSTask">
        <Patch>Properties[TerminationHandler].Type=IntPtr</Patch>
      </Class>
      <Class name="NSTextCheckingResult">
        <Patch>Enumerations[NSTextCheckingType].BaseType=ulong</Patch>
        <Patch>Enumerations[NSTextCheckingType].MixedType=ulong,ulong</Patch>
        <Patch>Enumerations[NSTextCheckingTypes].BaseType=ulong</Patch>
        <Patch>Enumerations[NSTextCheckingTypes].MixedType=ulong,ulong</Patch>
        <Replace type="Xhtml">
          <Source><![CDATA[<!--a-->purposes<!--/a-->]]></Source>
          <With><![CDATA[ ]]></With>
        </Replace>
		<Replace type="Xhtml">
          <Source><![CDATA[PhoneNumber">NSTextCheckingTypePhoneNumber</a>]]></Source>
          <With><![CDATA[PhoneNumber">,NSTextCheckingTypePhoneNumber</a>]]></With>
        </Replace>
        <Replace type="Generated">
          <Source><![CDATA[1ULL <<]]></Source>
          <With><![CDATA[1UL <<]]></With>
        </Replace>
        <Replace type="Generated">
          <Source>0xffffffffULL</Source>
          <With>0xffffffffUL</With>
        </Replace>
      </Class>
      <Class name="NSThread">
        <Patch>Properties[IsMainThread]{Static=True}.Generate=false</Patch>
        <Patch>Properties[ThreadPriority]{Static=True}.MaxAvailability=Mac OS X v10.6</Patch>
      </Class>
      <Class name="NSTimer">
      </Class>
      <Class name="NSTimeZone">
        <Patch>Methods[TimeZoneForSecondsFromGMT].ReturnType=NSTimeZone</Patch>
        <Patch>Methods[TimeZoneWithAbbreviation].ReturnType=NSTimeZone</Patch>
        <Patch>Methods[TimeZoneWithName].ReturnType=NSTimeZone</Patch>
        <Patch>Methods[TimeZoneWithNameData].ReturnType=NSTimeZone</Patch>
      </Class>
      <Class name="NSUbiquitousKeyValueStore">
        <Patch>Enumerations[Change_Reason_Values].Name=NSUbiquitousKeyValueStoreChange</Patch>
        <Patch>Enumerations[NSUbiquitousKeyValueStoreChange].BaseType=int</Patch>
      </Class>
      <Class name="NSUnarchiver">
        <Patch>Methods[ClassNameDecodedForArchiveClassName]{Static=True}.Generate=false</Patch>
        <Patch>Methods[DecodeClassNameAsClassName]{Static=True}.Generate=false</Patch>
      </Class>
      <Class name="NSUndoManager">
        <!-- TODO: Move with other ordering -->
        <Patch>Enumerations[NSUndoCloseGroupingRunLoopOrdering].Generate=false</Patch>
      </Class>
      <Class name="NSUniqueIDSpecifier">
      </Class>
      <Class name="NSURL">
        <Patch>Methods[GetResourceValueForKeyError].Parameters[value].Type=Id</Patch>
        <Patch>Methods[GetResourceValueForKeyError].Parameters[value].IsOut=true</Patch>
        <Patch>Methods[URLByResolvingBookmarkDataOptionsRelativeToURLBookmarkDataIsStaleError].ReturnType=NSURL</Patch>
        <Patch>Methods[URLByResolvingBookmarkDataOptionsRelativeToURLBookmarkDataIsStaleError].Parameters[isStale].Type=bool</Patch>
        <Patch>Methods[URLByResolvingBookmarkDataOptionsRelativeToURLBookmarkDataIsStaleError].Parameters[isStale].IsOut=true</Patch>
        <Patch>Methods[URLWithString].ReturnType=NSURL</Patch>
        <Patch>Methods[URLWithStringRelativeToURL].ReturnType=NSURL</Patch>
        <Patch>Methods[FileURLWithPath].ReturnType=NSURL</Patch>
        <Patch>Methods[FileURLWithPathIsDirectory].ReturnType=NSURL</Patch>
        <Patch>Methods[FileURLWithPathComponents].ReturnType=NSURL</Patch>
        <Patch>Methods[InitByResolvingBookmarkDataOptionsRelativeToURLBookmarkDataIsStaleError].Parameters[isStale].Type=bool</Patch>
        <Patch>Methods[InitByResolvingBookmarkDataOptionsRelativeToURLBookmarkDataIsStaleError].Parameters[isStale].IsOut=true</Patch>
        <Patch>Methods[InitFileURLWithPath].GenerateConstructor=false</Patch>
        <Patch>Methods[WriteBookmarkDataToURLOptionsError].Parameters[options].Type=NSURLBookmarkCreationOptions</Patch>
        <Replace type="Generated">
          <Source><![CDATA[1UL <<]]></Source>
          <With><![CDATA[1U <<]]></With>
        </Replace>
      </Class>
      <Class name="NSURLAuthenticationChallenge">
      </Class>
      <Class name="NSURLCache">
      </Class>
      <Class name="NSURLConnection">
      </Class>
      <Class name="NSURLCredential">
        <Patch>Methods[InitWithTrust].GenerateConstructor=false</Patch>
        <Patch>Enumerations[NSURLCredentialPersistence].BaseType=NSUInteger</Patch>
      </Class>
      <Class name="NSURLCredentialStorage">
      </Class>
      <Class name="NSURLDownload">
      </Class>
      <Class name="NSURLHandle">
        <Patch>Enumerations[NSURLHandleStatus].BaseType=NSUInteger</Patch>
        <Replace type="Html">
          <Source><![CDATA[<dd><p><p class=]]></Source>
          <With><![CDATA[<dd><p class=]]></With>
        </Replace>
      </Class>
      <Class name="NSURLProtectionSpace">
        <Patch>Methods[InitWithProxyHostPortTypeRealmAuthenticationMethod].GenerateConstructor=false</Patch>
      </Class>
      <Class name="NSURLProtocol">
      </Class>
      <Class name="NSURLRequest">
        <Patch>Methods[RequestWithURL].ReturnType=NSURLRequest</Patch>
        <Patch>Methods[RequestWithURL].CopyInDescendants=true</Patch>
        <Patch>Methods[RequestWithURLCachePolicyTimeoutInterval].ReturnType=NSURLRequest</Patch>
        <Patch>Methods[RequestWithURLCachePolicyTimeoutInterval].CopyInDescendants=true</Patch>
      </Class>
      <Class name="NSURLResponse">
      </Class>
      <Class name="NSUserDefaults">
         <Replace type="Html">
          <Source><![CDATA[)<pre class=]]></Source>
          <With><![CDATA[)</p><pre class=]]></With>
        </Replace>
        <Replace type="Html">
          <Source><![CDATA[<dd><p><p class=]]></Source>
          <With><![CDATA[<dd><p class=]]></With>
        </Replace>
     </Class>
      <Class name="NSValue">
        <Patch>Methods[ValueWithObjCType].Parameters[type].Type=String</Patch>
        <Patch>Methods[ValueWithBytesObjCType].Parameters[type].Type=String</Patch>
        <Patch>Methods[InitWithBytesObjCType].Parameters[type].Type=String</Patch>
        <Patch>Properties[ObjCType].Type=IntPtr</Patch>
        <Patch>Properties[ObjCType].Getter.ReturnType=IntPtr</Patch>
      </Class>
      <Class name="NSValueTransformer">
      </Class>
      <Class name="NSWhoseSpecifier">
        <Patch>Enumerations[NSWhoseSubelementIdentifier].BaseType=NSUInteger</Patch>
      </Class>
      <Class name="NSXMLDocument">
        <Patch>Enumerations[Document_Content_Types].Name=NSXMLDocumentContentKind</Patch>
        <Patch>Enumerations[NSXMLDocumentContentKind].BaseType=NSUInteger</Patch>
        <Replace type="Generated">
          <Source>public virtual NSString Version</Source>
          <With>public new NSString Version</With>
        </Replace>
      </Class>
      <Class name="NSXMLDTD">
      </Class>
      <Class name="NSXMLDTDNode">
        <Patch>Enumerations[DTD_Node_Kind_Constants].Name=NSXMLDTDNodeKind</Patch>
        <Patch>Enumerations[NSXMLDTDNodeKind].BaseType=NSUInteger</Patch>
      </Class>
      <Class name="NSXMLElement">
        <Patch>Methods[InitWithNameURI].GenerateConstructor=false</Patch>
      </Class>
      <Class name="NSXMLNode">
        <Patch>Enumerations[Input_and_Output_Options].Name=NSXMLNodeOptions</Patch>
        <Patch>Enumerations[NSXMLNodeOptions].BaseType=NSUInteger</Patch>
        <Patch>Enumerations[NSXMLNodeOptions].Flags=true</Patch>
        <Replace type="Xhtml">
          <Source><![CDATA[NSXMLNodeExpandEmptyElement</a> = 1 &amp;lt;&amp;lt; 1, // &amp;lt;a&gt;&amp;lt;/a&gt;]]></Source>
          <With><![CDATA[NSXMLNodeExpandEmptyElement</a> = 1 &amp;lt;&amp;lt; 1,]]></With>
        </Replace>
        <Replace type="Xhtml">
          <Source><![CDATA[NSXMLNodeCompactEmptyElement</a> =  1 &amp;lt;&amp;lt; 2, // &amp;lt;a/&gt;]]></Source>
          <With><![CDATA[NSXMLNodeCompactEmptyElement</a> =  1 &amp;lt;&amp;lt; 2,]]></With>
        </Replace>
        <Replace type="Generated">
          <Source><![CDATA[(&xyz;)]]></Source>
          <With><![CDATA[(&amp;xyz;)]]></With>
        </Replace>
        <Replace type="Generated">
          <Source><![CDATA[(&#nnn;)]]></Source>
          <With><![CDATA[(&amp;#nnn;)]]></With>
        </Replace>
        <Replace type="Generated">
          <Source><![CDATA[1UL <<]]></Source>
          <With><![CDATA[1U <<]]></With>
        </Replace>
      </Class>
      <Class name="NSXMLParser">
        <Patch>Properties[Delegate].Type=Id</Patch>
        <Patch>Enumerations[NSXMLParserError].BaseType=NSInteger</Patch>
      </Class>

      <Class name="NSArray.Deprecated">
        <Patch>AdditionFor=NSArray</Patch>
        <Patch>Methods[GetObjects].Parameters[aBuffer].Type=IntPtr</Patch>
      </Class>
      <Class name="NSCoder.Deprecated">
        <Patch>AdditionFor=NSCoder</Patch>
      </Class>
      <Class name="NSConnection.Deprecated">
        <Patch>AdditionFor=NSConnection</Patch>
      </Class>
      <Class name="NSData.Deprecated">
        <Patch>AdditionFor=NSData</Patch>
      </Class>
      <Class name="NSDate.Deprecated">
        <Patch>AdditionFor=NSDate</Patch>
      </Class>
      <Class name="NSDeserializer.Deprecated">
        <Patch>AdditionFor=NSDeserializer</Patch>
        <Patch>Methods[DeserializePropertyListFromDataAtCursorMutableContainers].Parameters[cursor].Type=IntPtr</Patch>
        <Patch>Methods[DeserializePropertyListLazilyFromDataAtCursorLengthMutableContainers].Parameters[cursor].Type=IntPtr</Patch>
      </Class>
      <Class name="NSFileManager.Deprecated">
        <Patch>AdditionFor=NSFileManager</Patch>
      </Class>
      <Class name="NSGarbageCollector.Deprecated">
        <Patch>AdditionFor=NSGarbageCollector</Patch>
      </Class>
      <Class name="NSMutableArray.Deprecated">
        <Patch>AdditionFor=NSMutableArray</Patch>
        <Patch>Methods[RemoveObjectsFromIndicesNumIndices].Parameters[indices].Type=IntPtr</Patch>
      </Class>
      <Class name="NSNetService.Deprecated">
        <Patch>AdditionFor=NSNetService</Patch>
      </Class>
      <Class name="NSNetServiceBrowser.Deprecated">
        <Patch>AdditionFor=NSNetServiceBrowser</Patch>
      </Class>
      <Class name="NSObject.Deprecated">
        <Patch>AdditionFor=NSObject</Patch>
      </Class>
      <Class name="NSRunLoop.Deprecated">
        <Patch>AdditionFor=NSRunLoop</Patch>
      </Class>
      <Class name="NSScriptClassDescription.Deprecated">
        <Patch>AdditionFor=NSScriptClassDescription</Patch>
      </Class>
      <Class name="NSSerializer.Deprecated">
        <Patch>AdditionFor=NSSerializer</Patch>
      </Class>
      <Class name="NSString.Deprecated">
        <Patch>AdditionFor=NSString</Patch>
        <Patch>Methods[StringWithCString].Parameters[cString].Type=String</Patch>
        <Patch>Methods[StringWithCStringLength].Parameters[cString].Type=String</Patch>
        <Patch>Methods[GetCString].Parameters[buffer].Type=IntPtr</Patch>
        <Patch>Methods[GetCStringMaxLength].Parameters[buffer].Type=IntPtr</Patch>
        <Patch>Methods[GetCStringMaxLengthRangeRemainingRange].Parameters[buffer].Type=IntPtr</Patch>
        <Patch>Methods[InitWithCString].Parameters[cString].Type=String</Patch>
        <Patch>Methods[InitWithCStringLength].Parameters[cString].Type=String</Patch>
        <Patch>Methods[InitWithCStringNoCopyLengthFreeWhenDone].Parameters[cString].Type=IntPtr</Patch>
        <Patch>Methods[GetCharacters].Parameters[buffer].Type=IntPtr</Patch>
        <Patch>Properties[CString].Type=IntPtr</Patch>
        <Patch>Properties[CString].Getter.ReturnType=IntPtr</Patch>
        <Patch>Properties[LossyCString].Type=IntPtr</Patch>
        <Patch>Properties[LossyCString].Getter.ReturnType=IntPtr</Patch>
      </Class>
      <Class name="NSURL.Deprecated">
        <Patch>AdditionFor=NSURL</Patch>
      </Class>
      <Class name="NSURLHandle.Deprecated">
        <Patch>AdditionFor=NSURLHandle</Patch>
      </Class>

    </Classes>
    <Protocols>
      <Protocol name="NSCacheDelegate">
        <Patch>DelegateFor=NSCache</Patch>
        <Patch>DelegateProperty=Delegate</Patch>
      </Protocol>
      <Protocol name="NSCoding">
      </Protocol>
      <Protocol name="NSComparisonMethods">
      </Protocol>
      <Protocol name="NSConnectionDelegate">
        <Patch>DelegateFor=NSConnection</Patch>
        <Patch>DelegateProperty=Delegate</Patch>
      </Protocol>
      <Protocol name="NSCopying">
      </Protocol>
      <Protocol name="NSDecimalNumberBehaviors">
      </Protocol>
      <Protocol name="NSDiscardableContent">
      </Protocol>
      <Protocol name="NSErrorRecoveryAttempting">
      </Protocol>
      <Protocol name="NSFastEnumeration">
        <Patch>Methods[CountByEnumeratingWithStateObjectsCount].Parameters[state].Type=IntPtr</Patch>
        <Patch>Methods[CountByEnumeratingWithStateObjectsCount].Parameters[stackbuf].Type=IntPtr</Patch>
      </Protocol>
      <Protocol name="NSFileManagerDelegate">
        <Patch>DelegateFor=NSFileManager</Patch>
        <Patch>DelegateProperty=Delegate</Patch>
      </Protocol>
      <Protocol name="NSFilePresenter">
      </Protocol>
      <Protocol name="NSKeyedArchiverDelegate">
        <Patch>DelegateFor=NSKeyedArchiver</Patch>
        <Patch>DelegateProperty=Delegate</Patch>
      </Protocol>
      <Protocol name="NSKeyedUnarchiverDelegate">
        <Patch>DelegateFor=NSKeyedUnarchiver</Patch>
        <Patch>DelegateProperty=Delegate</Patch>
      </Protocol>
      <!-- Moved from AppKit framework for easier overriding -->
      <Protocol name="NSKeyValueBindingCreation">
      </Protocol>
      <Protocol name="NSKeyValueCoding">
        <Patch>Methods[ValidateValueForKeyError].Parameters[ioValue].Type=Id</Patch>
        <Patch>Methods[ValidateValueForKeyError].Parameters[ioValue].IsByRef=true</Patch>
        <Patch>Methods[ValidateValueForKeyError].Parameters[error].Type=NSError</Patch>
        <Patch>Methods[ValidateValueForKeyError].Parameters[error].IsByRef=true</Patch>
        <Patch>Methods[ValidateValueForKeyPathError].Parameters[ioValue].Type=Id</Patch>
        <Patch>Methods[ValidateValueForKeyPathError].Parameters[ioValue].IsByRef=true</Patch>
        <Patch>Methods[ValidateValueForKeyPathError].Parameters[error].Type=NSError</Patch>
        <Patch>Methods[ValidateValueForKeyPathError].Parameters[error].IsByRef=true</Patch>
      </Protocol>
      <Protocol name="NSKeyValueObserving">
      </Protocol>
      <Protocol name="NSLocking">
      </Protocol>
      <Protocol name="NSMachPortDelegate">
        <Patch>DelegateFor=NSMachPort</Patch>
        <Patch>DelegateProperty=Delegate</Patch>
      </Protocol>
      <Protocol name="NSMetadataQueryDelegate">
        <Patch>DelegateFor=NSMetadataQuery</Patch>
        <Patch>DelegateProperty=Delegate</Patch>
      </Protocol>
      <Protocol name="NSMutableCopying">
      </Protocol>
      <Protocol name="NSNetServiceBrowserDelegate">
        <Patch>DelegateFor=NSNetServiceBrowser</Patch>
        <Patch>DelegateProperty=Delegate</Patch>
      </Protocol>
      <Protocol name="NSNetServiceDelegate">
        <Patch>DelegateFor=NSNetService</Patch>
        <Patch>DelegateProperty=Delegate</Patch>
      </Protocol>
      <Protocol name="NSObjCTypeSerializationCallBack">
      </Protocol>
      <Protocol name="NSObject">
        <Patch>Methods[Autorelease].Generate=false</Patch>
        <Patch>Methods[Release].Generate=false</Patch>
        <Patch>Methods[Retain].Generate=false</Patch>
        <Patch>Properties[Class].Generate=false</Patch>
      </Protocol>
      <Protocol name="NSPortDelegate">
        <Patch>DelegateFor=NSSpellServer</Patch>
        <Patch>DelegateProperty=Delegate</Patch>
      </Protocol>
      <Protocol name="NSScriptingComparisonMethods">
      </Protocol>
      <Protocol name="NSScriptKeyValueCoding">
      </Protocol>
      <Protocol name="NSScriptObjectSpecifiers">
      </Protocol>
      <Protocol name="NSSpellServerDelegate">
        <Patch>DelegateFor=NSSpellServer</Patch>
        <Patch>DelegateProperty=Delegate</Patch>
        <Patch>Methods[SpellServerCheckStringOffsetTypesOptionsOrthographyWordCount].Parameters[wordCount].Type=NSInteger</Patch>
        <Patch>Methods[SpellServerCheckStringOffsetTypesOptionsOrthographyWordCount].Parameters[wordCount].IsOut=true</Patch>
        <Patch>Methods[SpellServerFindMisspelledWordInStringLanguageWordCountCountOnly].Parameters[wordCount].Type=NSInteger</Patch>
        <Patch>Methods[SpellServerFindMisspelledWordInStringLanguageWordCountCountOnly].Parameters[wordCount].IsOut=true</Patch>
      </Protocol>
      <Protocol name="NSStreamDelegate">
        <Patch>DelegateFor=NSStream</Patch>
        <Patch>DelegateProperty=Delegate</Patch>
      </Protocol>
      <Protocol name="NSURLAuthenticationChallengeSender">
      </Protocol>
      <Protocol name="NSURLHandleClient">
      </Protocol>
      <Protocol name="NSURLProtocolClient">
      </Protocol>
      <Protocol name="NSURLConnectionDelegate">
        <Patch>DelegateFor=NSURLConnection</Patch>
      </Protocol>
      <Protocol name="NSURLDownloadDelegate">
        <Patch>DelegateFor=NSURLDownload</Patch>
      </Protocol>
      <Protocol name="NSXMLParserDelegate">
        <Patch>DelegateFor=NSXMLParser</Patch>
        <Patch>DelegateProperty=Delegate</Patch>
      </Protocol>

      <Protocol name="NSKeyValueCoding.Deprecated">

      </Protocol>
      <Protocol name="NSKeyValueObserving.Deprecated">

      </Protocol>
      <Protocol name="NSObjCTypeSerializationCallBack.Deprecated">

      </Protocol>
      <Protocol name="NSURLHandleClient.Deprecated">

      </Protocol>

    </Protocols>
    <Structures>
      <Structure name="NSDecimal">
      </Structure>
      <Structure name="NSInteger">
      </Structure>
      <Structure name="NSPoint">
      </Structure>
      <Structure name="NSRange">
      </Structure>
      <Structure name="NSRect">
      </Structure>
      <Structure name="NSSize">
      </Structure>
      <Structure name="NSUInteger">
      </Structure>
    </Structures>
  </Framework>
  <Framework name="InputMethodKit" usings="Foundation,AppKit" assembly="Monobjc.InputMethodKit">
    <Classes>
      <Class name="IMKCandidates">
      </Class>
      <Class name="IMKInputController">
        <Patch>Properties[Client].Type=IIMKTextInput</Patch>
        <Patch>Properties[Client].Getter.ReturnType=IIMKTextInput</Patch>
        <Patch>Properties[Delegate;].Getter.Name=Delegate</Patch>
        <Patch>Properties[Delegate;].Name=Delegate</Patch>
        <Patch>Properties[Delegate].Type=Id</Patch>
      </Class>
      <Class name="IMKServer">
        <Patch>Protocols= </Patch>
      </Class>
    </Classes>
    <Protocols>
      <Protocol name="IMKMouseHandling">
        <Patch>Methods[MouseDownOnCharacterIndexCoordinateWithModifierContinueTrackingClient].Parameters[keepTracking].Type=bool</Patch>
        <Patch>Methods[MouseDownOnCharacterIndexCoordinateWithModifierContinueTrackingClient].Parameters[keepTracking].IsByRef=true</Patch>
      </Protocol>
      <Protocol name="IMKServerInput">
      </Protocol>
      <Protocol name="IMKStateSetting">
      </Protocol>
      <Protocol name="IMKTextInput">
        <Patch>Methods[AttributesForCharacterIndexLineHeightRectangle].Parameters[lineRect].Type=NSRect</Patch>
        <Patch>Methods[AttributesForCharacterIndexLineHeightRectangle].Parameters[lineRect].IsOut=true</Patch>
        <Patch>Methods[CharacterIndexForPointTrackingInMarkedRange].Parameters[inMarkedRange].Type=NSRect</Patch>
        <Patch>Methods[CharacterIndexForPointTrackingInMarkedRange].Parameters[inMarkedRange].IsOut=true</Patch>
      </Protocol>
    </Protocols>
  </Framework>
  <Framework name="Kernel" usings="Foundation" assembly="Monobjc.Foundation">
    <Types>
      <Type name="Dispatch">
        <Patch>Functions[dispatch_after].Parameters[block].Type=Block</Patch>
        <Patch>Functions[dispatch_after].Parameters[block].IsBlock=false</Patch>
        <Patch>Functions[dispatch_apply].Parameters[d].Name=block</Patch>
        <Patch>Functions[dispatch_apply].Parameters[block].Type=Block</Patch>
        <Patch>Functions[dispatch_apply].Parameters[block].IsBlock=false</Patch>
        <Patch>Functions[dispatch_apply_f].Parameters[d].Name=work</Patch>
        <Patch>Functions[dispatch_apply_f].Parameters[work].Type=<![CDATA[dispatch_function_tc]]></Patch>
        <Patch>Functions[dispatch_apply_f].Parameters[t].Generate=false</Patch>
        <Patch>Functions[dispatch_async].Parameters[block].Type=Block</Patch>
        <Patch>Functions[dispatch_async].Parameters[block].IsBlock=false</Patch>
        <Patch>Functions[dispatch_barrier_async].Parameters[block].Type=Block</Patch>
        <Patch>Functions[dispatch_barrier_async].Parameters[block].IsBlock=false</Patch>
        <Patch>Functions[dispatch_barrier_sync].Parameters[block].Type=Block</Patch>
        <Patch>Functions[dispatch_barrier_sync].Parameters[block].IsBlock=false</Patch>
        <Patch>Functions[dispatch_data_apply].Parameters[applier].Type=Block</Patch>
        <Patch>Functions[dispatch_data_apply].Parameters[applier].IsBlock=false</Patch>
        <Patch>Functions[dispatch_data_copy_region].Parameters[offset_ptr].Type=NSUInteger</Patch>
        <Patch>Functions[dispatch_data_copy_region].Parameters[offset_ptr].IsOut=true</Patch>
        <Patch>Functions[dispatch_data_create].Parameters[destructor].Type=Block</Patch>
        <Patch>Functions[dispatch_data_create].Parameters[destructor].IsBlock=false</Patch>
        <Patch>Functions[dispatch_data_create_map].Parameters[buffer_ptr].Type=IntPtr</Patch>
        <Patch>Functions[dispatch_data_create_map].Parameters[size_ptr].Type=NSUInteger</Patch>
        <Patch>Functions[dispatch_data_create_map].Parameters[size_ptr].IsOut=true</Patch>
        <Patch>Functions[dispatch_debug].Parameters[message].Type=String</Patch>
        <Patch>Functions[dispatch_get_current_queue].Parameters[d].Generate=false</Patch>
        <Patch>Functions[dispatch_get_global_queue].Parameters[long].Name=flags</Patch>
        <Patch>Functions[dispatch_get_global_queue].Parameters[flags].Type=NSUInteger</Patch>
        <Patch>Functions[dispatch_get_main_queue].Generate=false</Patch>
        <Patch>Functions[dispatch_get_specific].MinAvailability=Mac OS X v10.7</Patch>
        <Patch>Functions[dispatch_queue_get_label].ReturnType=IntPtr</Patch>
        <Patch>Functions[dispatch_group_async].Parameters[block].Type=Block</Patch>
        <Patch>Functions[dispatch_group_async].Parameters[block].IsBlock=false</Patch>
        <Patch>Functions[dispatch_group_create].Parameters[d].Generate=false</Patch>
        <Patch>Functions[dispatch_group_notify].Parameters[block].Type=Block</Patch>
        <Patch>Functions[dispatch_group_notify].Parameters[block].IsBlock=false</Patch>
        <Patch>Functions[dispatch_io_create].Parameters[d].Name=cleanup_handler</Patch>
        <Patch>Functions[dispatch_io_create].Parameters[cleanup_handler].Type=<![CDATA[Action<int>]]></Patch>
        <Patch>Functions[dispatch_io_create_with_path].Parameters[path].Type=String</Patch>
        <Patch>Functions[dispatch_io_create_with_path].Parameters[d].Name=cleanup_handler</Patch>
        <Patch>Functions[dispatch_io_create_with_path].Parameters[cleanup_handler].Type=Block</Patch>
        <Patch>Functions[dispatch_io_create_with_path].Parameters[cleanup_handler].IsBlock=false</Patch>
        <Patch>Functions[dispatch_io_read].Parameters[io_handler].Type=Block</Patch>
        <Patch>Functions[dispatch_io_read].Parameters[io_handler].IsBlock=false</Patch>
        <Patch>Functions[dispatch_io_write].Parameters[io_handler].Type=Block</Patch>
        <Patch>Functions[dispatch_io_write].Parameters[io_handler].IsBlock=false</Patch>
        <Patch>Functions[dispatch_main].Parameters[d].Generate=false</Patch>
        <Patch>Functions[dispatch_once].Parameters[predicate].Type=NSInteger</Patch>
        <Patch>Functions[dispatch_once].Parameters[predicate].IsOut=true</Patch>
        <Patch>Functions[dispatch_once].Parameters[block].Type=Block</Patch>
        <Patch>Functions[dispatch_once].Parameters[block].IsBlock=false</Patch>
        <Patch>Functions[dispatch_queue_create].Parameters[label].Type=String</Patch>
        <Patch>Functions[dispatch_read].Parameters[d].Name=handler</Patch>
        <Patch>Functions[dispatch_read].Parameters[handler].Type=Block</Patch>
        <Patch>Functions[dispatch_read].Parameters[handler].IsBlock=false</Patch>
        <Patch>Functions[dispatch_read].Parameters[error].Generate=false</Patch>
        <Patch>Functions[dispatch_source_create].Parameters[long].Name=mask</Patch>
        <Patch>Functions[dispatch_source_create].Parameters[mask].Type=NSUInteger</Patch>
        <Patch>Functions[dispatch_source_merge_data].Parameters[long].Name=value</Patch>
        <Patch>Functions[dispatch_source_merge_data].Parameters[value].Type=NSUInteger</Patch>
        <Patch>Functions[dispatch_source_set_cancel_handler].Parameters[cancel_handler].Type=Block</Patch>
        <Patch>Functions[dispatch_source_set_cancel_handler].Parameters[cancel_handler].IsBlock=false</Patch>
        <Patch>Functions[dispatch_source_set_event_handler].Parameters[handler].Type=Block</Patch>
        <Patch>Functions[dispatch_source_set_event_handler].Parameters[handler].IsBlock=false</Patch>
        <Patch>Functions[dispatch_source_set_registration_handler].MinAvailability=Mac OS X v10.7</Patch>
        <Patch>Functions[dispatch_source_set_registration_handler].Parameters[registration_handler].Type=Block</Patch>
        <Patch>Functions[dispatch_source_set_registration_handler].Parameters[registration_handler].IsBlock=false</Patch>
        <Patch>Functions[dispatch_source_set_registration_handler_f].MinAvailability=Mac OS X v10.7</Patch>
        <Patch>Functions[dispatch_sync].Parameters[block].Type=Block</Patch>
        <Patch>Functions[dispatch_sync].Parameters[block].IsBlock=false</Patch>
        <Patch>Functions[dispatch_time].Generate=false</Patch>
        <Patch>Functions[dispatch_walltime].Generate=false</Patch>
        <Patch>Functions[dispatch_write].Parameters[d].Name=handler</Patch>
        <Patch>Functions[dispatch_write].Parameters[handler].Type=Block</Patch>
        <Patch>Functions[dispatch_write].Parameters[handler].IsBlock=false</Patch>
        <Patch>Functions[dispatch_write].Parameters[error].Generate=false</Patch>
        <Patch>Enumerations[dispatch_queue_priority_t].BaseType=NSInteger</Patch>
        <Patch>Enumerations[dispatch_source_mach_send_flags_t].BaseType=NSUInteger</Patch>
        <Patch>Enumerations[dispatch_source_proc_flags_t].BaseType=NSUInteger</Patch>
        <Patch>Enumerations[dispatch_source_vnode_flags_t].BaseType=NSUInteger</Patch>
        <Replace type="Generated">
          <Source><![CDATA["/System/Library/Frameworks/Kernel.framework/Kernel"]]></Source>
          <With><![CDATA[DISPATCH_LIBRARY]]></With>
        </Replace>
	  </Type>
	</Types>
  </Framework>
  <Framework name="OpenGL" assembly="Monobjc.OpenGL">
    <Types>
      <Type name="CGL">
        <Patch>Functions[CGLChoosePixelFormat].Parameters[attribs].Type=IntPtr</Patch>
        <Patch>Functions[CGLChoosePixelFormat].Parameters[pix].Type=IntPtr</Patch>
        <Patch>Functions[CGLChoosePixelFormat].Parameters[npix].Type=IntPtr</Patch>
        <Patch>Functions[CGLCreateContext].Parameters[ctx].Type=IntPtr</Patch>
        <Patch>Functions[CGLCreatePBuffer].Parameters[pbuffer].Type=IntPtr</Patch>
        <Patch>Functions[CGLDescribePBuffer].Parameters[width].Type=IntPtr</Patch>
        <Patch>Functions[CGLDescribePBuffer].Parameters[height].Type=IntPtr</Patch>
        <Patch>Functions[CGLDescribePBuffer].Parameters[target].Type=IntPtr</Patch>
        <Patch>Functions[CGLDescribePBuffer].Parameters[internalFormat].Type=IntPtr</Patch>
        <Patch>Functions[CGLDescribePBuffer].Parameters[mipmap].Type=IntPtr</Patch>
        <Patch>Functions[CGLDescribePixelFormat].Parameters[value].Type=IntPtr</Patch>
        <Patch>Functions[CGLDescribeRenderer].Parameters[value].Type=IntPtr</Patch>
        <Patch>Functions[CGLErrorString].ReturnType=IntPtr</Patch>
        <Patch>Functions[CGLGetCurrentContext].Parameters[d].Generate=false</Patch>
        <Patch>Functions[CGLGetGlobalOption].Parameters[params].Name=@params</Patch>
        <Patch>Functions[CGLGetGlobalOption].Parameters[@params].Type=IntPtr</Patch>
        <Patch>Functions[CGLGetOffScreen].Parameters[width].Type=IntPtr</Patch>
        <Patch>Functions[CGLGetOffScreen].Parameters[height].Type=IntPtr</Patch>
        <Patch>Functions[CGLGetOffScreen].Parameters[rowbytes].Type=IntPtr</Patch>
        <Patch>Functions[CGLGetOffScreen].Parameters[baseaddr].Type=IntPtr</Patch>
        <Patch>Functions[CGLGetOption].Parameters[param].Type=IntPtr</Patch>
        <Patch>Functions[CGLGetParameter].Parameters[params].Name=@params</Patch>
        <Patch>Functions[CGLGetParameter].Parameters[@params].Type=IntPtr</Patch>
        <Patch>Functions[CGLGetPBuffer].Parameters[pbuffer].Type=IntPtr</Patch>
        <Patch>Functions[CGLGetPBuffer].Parameters[face].Type=IntPtr</Patch>
        <Patch>Functions[CGLGetPBuffer].Parameters[level].Type=IntPtr</Patch>
        <Patch>Functions[CGLGetPBuffer].Parameters[screen].Type=IntPtr</Patch>
        <Patch>Functions[CGLGetVersion].Parameters[majorvers].Type=int</Patch>
        <Patch>Functions[CGLGetVersion].Parameters[majorvers].IsByRef=true</Patch>
        <Patch>Functions[CGLGetVersion].Parameters[minorvers].Type=int</Patch>
        <Patch>Functions[CGLGetVersion].Parameters[minorvers].IsByRef=true</Patch>
        <Patch>Functions[CGLGetVirtualScreen].Parameters[screen].Type=int</Patch>
        <Patch>Functions[CGLGetVirtualScreen].Parameters[screen].IsByRef=true</Patch>
        <Patch>Functions[CGLIsEnabled].Parameters[enable].Type=int</Patch>
        <Patch>Functions[CGLIsEnabled].Parameters[enable].IsByRef=true</Patch>
        <Patch>Functions[CGLQueryRendererInfo].Parameters[rend].Type=IntPtr</Patch>
        <Patch>Functions[CGLQueryRendererInfo].Parameters[nrend].Type=IntPtr</Patch>
        <Patch>Functions[CGLSetGlobalOption].Parameters[params].Name=@params</Patch>
        <Patch>Functions[CGLSetGlobalOption].Parameters[@params].Type=IntPtr</Patch>
        <Patch>Functions[CGLSetParameter].Parameters[params].Name=@params</Patch>
        <Patch>Functions[CGLSetParameter].Parameters[@params].Type=IntPtr</Patch>
        <Patch>Enumerations[CGLPixelFormatAttribute].BaseType=int</Patch>
        <Patch>Enumerations[CGLContextEnable].BaseType=int</Patch>
        <Patch>Enumerations[CGLContextParameter].BaseType=int</Patch>
        <Patch>Enumerations[CGLGlobalOption].BaseType=int</Patch>
        <Patch>Enumerations[CGLRendererProperty].BaseType=int</Patch>
        <Patch>Enumerations[CGLOpenGLProfile].BaseType=int</Patch>
        <Replace type="Html">
          <Source><![CDATA[)<pre class=]]></Source>
          <With><![CDATA[)</p><pre class=]]></With>
        </Replace>
        <Replace type="Html">
          <Source><![CDATA[<dd><p><p class=]]></Source>
          <With><![CDATA[<dd><p class=]]></With>
        </Replace>
      </Type>
      <Type name="CGL.Deprecated">
        <Patch>Functions[CGLCreatePBuffer].Parameters[pbuffer].Type=IntPtr</Patch>
        <Patch>Functions[CGLDescribePBuffer].Parameters[width].Type=IntPtr</Patch>
        <Patch>Functions[CGLDescribePBuffer].Parameters[height].Type=IntPtr</Patch>
        <Patch>Functions[CGLDescribePBuffer].Parameters[target].Type=IntPtr</Patch>
        <Patch>Functions[CGLDescribePBuffer].Parameters[internalFormat].Type=IntPtr</Patch>
        <Patch>Functions[CGLDescribePBuffer].Parameters[mipmap].Type=IntPtr</Patch>
        <Patch>Functions[CGLGetOffScreen].Parameters[width].Type=IntPtr</Patch>
        <Patch>Functions[CGLGetOffScreen].Parameters[height].Type=IntPtr</Patch>
        <Patch>Functions[CGLGetOffScreen].Parameters[rowbytes].Type=IntPtr</Patch>
        <Patch>Functions[CGLGetOffScreen].Parameters[baseaddr].Type=IntPtr</Patch>
        <Patch>Functions[CGLGetPBuffer].Parameters[pbuffer].Type=IntPtr</Patch>
        <Patch>Functions[CGLGetPBuffer].Parameters[face].Type=IntPtr</Patch>
        <Patch>Functions[CGLGetPBuffer].Parameters[level].Type=IntPtr</Patch>
        <Patch>Functions[CGLGetPBuffer].Parameters[screen].Type=IntPtr</Patch>
      </Type>
    </Types>
  </Framework>
  <Framework name="QTKit" usings="Foundation,AppKit,QuartzCore" assembly="Monobjc.QTKit">
    <Types>
      <Type name="QTKitFramework.Constants">
        <Patch>Constants[QTErrorTimeKey].MinAvailability=Mac OS X v10.6</Patch>
        <Patch>Constants[QTErrorFileSizeKey].MinAvailability=Mac OS X v10.6</Patch>
        <Patch>Enumerations[QTKit_Error_Codes].Name=QTKError</Patch>
        <Patch>Enumerations[QTKError].BaseType=NSInteger</Patch>
        <Patch>Enumerations[QTKError].MinAvailability=Mac OS X v10.5</Patch>
        <Patch>Enumerations[QTKError].Values[QTErrorMaximumNumberOfSamplesForFileFormatReached].MinAvailability=Mac OS X v10.5</Patch>
      </Type>
      <Type name="QTKitFramework.DataTypes"></Type>
      <Type name="QTKitFramework.Functions">
        <Patch>Functions[QTGetTimeInterval].Parameters[timeInterval].Type=double</Patch>
        <Patch>Functions[QTGetTimeInterval].Parameters[timeInterval].IsOut=true</Patch>
        <Patch>Functions[QTGetTimeRecord].Parameters[timeRecord].Type=IntPtr</Patch>
        <Patch>Functions[QTMakeTime].Parameters[long].Name=timeValue</Patch>
        <Patch>Functions[QTMakeTime].Parameters[timeValue].Type=long</Patch>
        <Patch>Functions[QTMakeTime].Parameters[timeScale].Type=NSInteger</Patch>
        <Patch>Functions[QTMakeTimeWithTimeInterval].ReturnType=QTTime</Patch>
        <Patch>Functions[QTMakeTimeWithTimeRecord].ReturnType=QTTime</Patch>
        <Patch>Functions[QTSMPTETimeCompare].Parameters[otherTime].Type=SMPTETime</Patch>
        <Patch>Functions[QTTimeFromString].ReturnType=QTTime</Patch>
      </Type>
    </Types>
    <Classes>
      <Class name="NSCoder_QTKitAdditions">
        <Patch>AdditionFor=NSCoder</Patch>
      </Class>
      <Class name="NSValue_QTKitAdditions">
        <Patch>AdditionFor=NSValue</Patch>
      </Class>
      <Class name="QTCaptureAudioPreviewOutput">
      </Class>
      <Class name="QTCaptureConnection">
      </Class>
      <Class name="QTCaptureDecompressedAudioOutput">
        <Patch>Properties[Delegate].Type=Id</Patch>
      </Class>
      <Class name="QTCaptureDecompressedVideoOutput">
        <Patch>Properties[Delegate].Type=Id</Patch>
      </Class>
      <Class name="QTCaptureDevice">
        <Patch>Enumerations[Enumerations].Name=QTCaptureDeviceAVCTransportControl</Patch>
        <Patch>Enumerations[QTCaptureDeviceAVCTransportControl].BaseType=int</Patch>
      </Class>
      <Class name="QTCaptureDeviceInput">
      </Class>
      <Class name="QTCaptureFileOutput">
        <Patch>Properties[Delegate].Type=Id</Patch>
      </Class>
      <Class name="QTCaptureInput">
      </Class>
      <Class name="QTCaptureLayer">
      </Class>
      <Class name="QTCaptureMovieFileOutput">
      </Class>
      <Class name="QTCaptureOutput">
      </Class>
      <Class name="QTCaptureSession">
        <Replace type="Xhtml">
          <Source><![CDATA[NSString <!--a-->* const<!--/a--><a href="#//apple_ref/doc/c_ref/QTCaptureSessionErrorKey">QTCaptureSessionErrorKey</a>]]></Source>
          <With><![CDATA[NSString <!--a-->* const<!--/a--><a href="#//apple_ref/doc/c_ref/QTCaptureSessionErrorKey">QTCaptureSessionErrorKey;</a>]]></With>
        </Replace>
      </Class>
      <Class name="QTCaptureVideoPreviewOutput">
        <Patch>Properties[Delegate].Type=Id</Patch>
      </Class>
      <Class name="QTCaptureView">
        <Patch>Properties[Delegate].Type=Id</Patch>
      </Class>
      <Class name="QTCompressionOptions">
        <Patch>Methods[CompressionOptionsWithIdentifier].ReturnType=QTCompressionOptions</Patch>
        <Replace type="Xhtml">
          <Source><![CDATA[<a href="#//apple_ref/doc/c_ref/QTCompressionOptionsLosslessAppleIntermediateVideo">QTCompressionOptionsLosslessAppleIntermediateVideo</a>]]></Source>
          <With><![CDATA[NSString *QTCompressionOptionsLosslessAppleIntermediateVideo]]></With>
        </Replace>
        <Replace type="Xhtml">
          <Source><![CDATA[<!--a-->; QTCompressionOptionsLosslessAnimationVideo<!--/a-->;]]></Source>
          <With><![CDATA[; NSString *QTCompressionOptionsLosslessAnimationVideo;]]></With>
        </Replace>
        <Replace type="Xhtml">
          <Source><![CDATA[<a href="#//apple_ref/doc/c_ref/QTCompressionOptions120SizeH264Video">QTCompressionOptions120SizeH264Video</a><!--a-->; QTCompressionOptions240SizeH264Video<!--/a-->;]]></Source>
          <With><![CDATA[NSString *QTCompressionOptions120SizeH264Video; NSString *QTCompressionOptions240SizeH264Video;]]></With>
        </Replace>
        <Replace type="Xhtml">
          <Source><![CDATA[<a href="#//apple_ref/doc/c_ref/QTCompressionOptionsSD480SizeH264Video">QTCompressionOptionsSD480SizeH264Video</a><!--a-->; QTCompressionOptions120SizeMPEG4Video<!--/a-->;]]></Source>
          <With><![CDATA[NSString *QTCompressionOptionsSD480SizeH264Video; NSString *QTCompressionOptions120SizeMPEG4Video;]]></With>
        </Replace>
        <Replace type="Xhtml">
          <Source><![CDATA[<a href="#//apple_ref/doc/c_ref/QTCompressionOptions240SizeMPEG4Video">QTCompressionOptions240SizeMPEG4Video</a><!--a-->; QTCompressionOptionsSD480SizeMPEG4Video<!--/a-->;]]></Source>
          <With><![CDATA[NSString *QTCompressionOptions240SizeMPEG4Video; NSString *QTCompressionOptionsSD480SizeMPEG4Video;]]></With>
        </Replace>
        <Replace type="Xhtml">
          <Source><![CDATA[<a href="#//apple_ref/doc/c_ref/QTCompressionOptionsLosslessALACAudio">QTCompressionOptionsLosslessALACAudio</a><!--a-->; QTCompressionOptionsHighQualityAACAudio<!--/a-->;]]></Source>
          <With><![CDATA[NSString *QTCompressionOptionsLosslessALACAudio; NSString *QTCompressionOptionsHighQualityAACAudio;]]></With>
        </Replace>
        <Replace type="Xhtml">
          <Source><![CDATA[<!--a-->QTCompressionOptionsVoiceQualityAACAudi<!--/a--><!--a-->o<!--/a-->;]]></Source>
          <With><![CDATA[NSString *QTCompressionOptionsVoiceQualityAACAudio;]]></With>
        </Replace>
      </Class>
      <Class name="QTDataReference">
        <Patch>Methods[DataReferenceWithDataRefType].ReturnType=QTDataReference</Patch>
        <Patch>Methods[DataReferenceWithDataRefDataType].ReturnType=QTDataReference</Patch>
        <Patch>Methods[DataReferenceWithReferenceToData].ReturnType=QTDataReference</Patch>
        <Patch>Methods[DataReferenceWithReferenceToDataNameMIMEType].ReturnType=QTDataReference</Patch>
        <Patch>Methods[DataReferenceWithReferenceToFile].ReturnType=QTDataReference</Patch>
        <Patch>Methods[DataReferenceWithReferenceToURL].ReturnType=QTDataReference</Patch>
      </Class>
      <Class name="QTFormatDescription">
      </Class>
      <Class name="QTMedia">
        <Patch>Methods[MediaWithQuickTimeMediaError].ReturnType=QTMedia</Patch>
      </Class>
      <Class name="QTMovie">
        <Patch>Methods[InitToWritableDataReferenceError].GenerateConstructor=false</Patch>
        <Patch>Methods[InitToWritableFileError].GenerateConstructor=false</Patch>
        <Patch>Methods[MovieFileTypes].Parameters[types].Type=QTMovieFileTypeOptions</Patch>
        <Patch>Methods[MovieNamedError].ReturnType=QTMovie</Patch>
        <Patch>Methods[MovieWithAttributesError].ReturnType=QTMovie</Patch>
        <Patch>Methods[MovieWithDataError].ReturnType=QTMovie</Patch>
        <Patch>Methods[MovieWithDataReferenceError].ReturnType=QTMovie</Patch>
        <Patch>Methods[MovieWithFileError].ReturnType=QTMovie</Patch>
        <Patch>Methods[MovieWithPasteboardError].ReturnType=QTMovie</Patch>
        <Patch>Methods[MovieWithQuickTimeMovieDisposeWhenDoneError].ReturnType=QTMovie</Patch>
        <Patch>Methods[MovieWithURLError].ReturnType=QTMovie</Patch>
        <Patch>Methods[MovieWithTimeRangeError].ReturnType=QTMovie</Patch>
        <Patch>Properties[Delegate].Type=Id</Patch>
        <Patch>Properties[Movie].Type=QTMovie</Patch>
        <Patch>Properties[Movie].Getter.ReturnType=QTMovie</Patch>
        <Patch>Enumerations[QTMovieFileTypeOptions].BaseType=int</Patch>
        <Patch>Enumerations[QTMovieLoadState].Values[QTMovieLoadStateError].Value=-1</Patch>
        <Patch>Enumerations[QTMovieLoadState].Values[QTMovieLoadStateComplete].Value=100000</Patch>
      </Class>
      <Class name="QTMovieLayer">
      </Class>
      <Class name="QTMovieView">
        <Patch>Properties[Delegate].Type=Id</Patch>
      </Class>
      <Class name="QTSampleBuffer">
        <Patch>Methods[AudioBufferListWithOptions].ReturnType=IntPtr</Patch>
        <Replace type="Xhtml">
          <Source><![CDATA[<a href="#//apple_ref/doc/c_ref/QTSampleBufferSMPTETimeAttribute">QTSampleBufferSMPTETimeAttribute</a>]]></Source>
          <With><![CDATA[<a href="#//apple_ref/doc/c_ref/QTSampleBufferSMPTETimeAttribute">QTSampleBufferSMPTETimeAttribute;</a>]]></With>
        </Replace>
      </Class>
      <Class name="QTTrack">
        <Patch>Methods[TrackWithQuickTimeTrackError].ReturnType=QTTrack</Patch>
      </Class>

      <Class name="QTMovieView.Deprecated">
        <Patch>AdditionFor=QTMovieView</Patch>
      </Class>

    </Classes>
    <Protocols>
      <Protocol name="QTCaptureDecompressedAudioOutputDelegate">
        <Patch>DelegateFor=QTCaptureDecompressedAudioOutput</Patch>
        <Patch>DelegateProperty=Delegate</Patch>
      </Protocol>
      <Protocol name="QTCaptureDecompressedVideoOutputDelegate">
        <Patch>DelegateFor=QTCaptureDecompressedVideoOutput</Patch>
        <Patch>DelegateProperty=Delegate</Patch>
      </Protocol>
      <Protocol name="QTCaptureFileOutputDelegate">
        <Patch>DelegateFor=QTCaptureFileOutput</Patch>
        <Patch>DelegateProperty=Delegate</Patch>
      </Protocol>
      <Protocol name="QTCaptureVideoPreviewOutputDelegate">
        <Patch>DelegateFor=QTCaptureVideoPreviewOutput</Patch>
        <Patch>DelegateProperty=Delegate</Patch>
      </Protocol>
      <Protocol name="QTCaptureViewDelegate">
        <Patch>DelegateFor=QTCaptureView</Patch>
        <Patch>DelegateProperty=Delegate</Patch>
      </Protocol>
      <Protocol name="QTMovieDelegate">
        <Patch>DelegateFor=QTMovie</Patch>
        <Patch>DelegateProperty=Delegate</Patch>
      </Protocol>
    </Protocols>
    <Enumerations>
      <Enumeration name="QTMovieOperationPhase">
      </Enumeration>
      <Enumeration name="QTSampleBufferAudioBufferListOptions">
      </Enumeration>
    </Enumerations>
    <Structures>
      <Structure name="QTTime">
      </Structure>
      <Structure name="QTTime64">
      </Structure>
    </Structures>
  </Framework>
  <Framework name="Quartz" usings="Foundation,AppKit,QuartzCore,ApplicationServices" assembly="Monobjc.Quartz">
    <Classes>
      <Class name="CIFilter_ImageKitAdditions">
        <Patch>AdditionFor=CIFilter</Patch>
      </Class>
      <Class name="IKCameraDeviceView">
        <Patch>Properties[Delegate].Type=Id</Patch>
      </Class>
      <Class name="IKDeviceBrowserView">
        <Patch>Properties[Delegate].Type=Id</Patch>
      </Class>
      <Class name="IKFilterBrowserPanel">
        <Patch>Methods[FilterBrowserPanelWithStyleMask].ReturnType=IKFilterBrowserPanel</Patch>
      </Class>
      <Class name="IKFilterBrowserView">
      </Class>
      <Class name="IKFilterUIView">
      </Class>
      <Class name="IKImageBrowserCell">
        <Patch>Enumerations[IKImageBrowserCellState].BaseType=int</Patch>
      </Class>
      <Class name="IKImageBrowserView">
        <Patch>Properties[Delegate].Type=Id</Patch>
        <Patch>Enumerations[Cell_Appearance_Style_Masks].Name=IKCellAppearanceStyleMask</Patch>
        <Patch>Enumerations[IKCellAppearanceStyleMask].BaseType=int</Patch>
        <Patch>Enumerations[IKCellAppearanceStyleMask].Flags=true</Patch>
        <Patch>Enumerations[Group_Style_Attributes].Name=IKGroupStyleAttribute</Patch>
        <Patch>Enumerations[IKGroupStyleAttribute].BaseType=int</Patch>
        <Patch>Enumerations[IKImageBrowserDropOperation].BaseType=int</Patch>
      </Class>
      <Class name="IKImageEditPanel">
        <Patch>Properties[DataSource].Type=Id</Patch>
      </Class>
      <Class name="IKImageView">
        <Patch>Properties[Delegate].Type=Id</Patch>
      </Class>
      <Class name="IKImagePicker">
      </Class>
      <Class name="IKPictureTaker;IKImagePicker">
      </Class>
      <Class name="IKSaveOptions">
        <Patch>Properties[Delegate].Type=Id</Patch>
        <Patch>Properties[ImageProperties].Type=NSDictionary</Patch>
        <Patch>Properties[ImageProperties].Getter.ReturnType=NSDictionary</Patch>
        <Patch>Properties[ImageUTType].Type=NSString</Patch>
        <Patch>Properties[ImageUTType].Getter.ReturnType=NSString</Patch>
        <Patch>Properties[UserSelection].Type=NSDictionary</Patch>
        <Patch>Properties[UserSelection].Getter.ReturnType=NSDictionary</Patch>
      </Class>
      <Class name="IKScannerDeviceView">
        <Patch>Properties[Delegate].Type=Id</Patch>
      </Class>
      <Class name="IKSlideshow">
      </Class>
      <Class name="PDFAction">
      </Class>
      <Class name="PDFActionGoTo">
      </Class>
      <Class name="PDFActionNamed">
        <Patch>Enumerations[Named_Action_Names].Name=PDFActionNamedName</Patch>
        <Patch>Enumerations[PDFActionNamedName].BaseType=NSInteger</Patch>
      </Class>
      <Class name="PDFActionRemoteGoTo">
      </Class>
      <Class name="PDFActionResetForm">
      </Class>
      <Class name="PDFActionURL">
      </Class>
      <Class name="PDFAnnotation">
      </Class>
      <Class name="PDFAnnotationButtonWidget">
        <Patch>Enumerations[PDFWidgetControlType].BaseType=NSInteger</Patch>
        <Replace type="Xhtml">
          <Source>
            <![CDATA[typedef <!--a-->NSInteger<!--/a--> PDFWidgetControlType;
enum]]>
          </Source>
          <With><![CDATA[enum]]></With>
        </Replace>
        <Replace type="Xhtml">
          <Source>
            <![CDATA[<a href="#//apple_ref/doc/c_ref/kPDFWidgetCheckBoxControl">kPDFWidgetCheckBoxControl</a> = 2
};
</pre>]]>
          </Source>
          <With>
            <![CDATA[<a href="#//apple_ref/doc/c_ref/kPDFWidgetCheckBoxControl">kPDFWidgetCheckBoxControl</a> = 2
}; typedef <!--a-->NSInteger<!--/a--> PDFWidgetControlType;
</pre>]]>
          </With>
        </Replace>
      </Class>
      <Class name="PDFAnnotationChoiceWidget">
      </Class>
      <Class name="PDFAnnotationCircle">
      </Class>
      <Class name="PDFAnnotationFreeText">
      </Class>
      <Class name="PDFAnnotationInk">
      </Class>
      <Class name="PDFAnnotationLine">
      </Class>
      <Class name="PDFAnnotationLink">
      </Class>
      <Class name="PDFAnnotationMarkup">
      </Class>
      <Class name="PDFAnnotationPopup">
      </Class>
      <Class name="PDFAnnotationSquare">
      </Class>
      <Class name="PDFAnnotationStamp">
      </Class>
      <Class name="PDFAnnotationText">
        <Replace type="Html">
          <Source><![CDATA[instead.)<div class="declaration">]]></Source>
          <With><![CDATA[instead.)</p><div class="declaration">]]></With>
        </Replace>
      </Class>
      <Class name="PDFAnnotationTextWidget">
      </Class>
      <Class name="PDFBorder">
      </Class>
      <Class name="PDFDestination">
      </Class>
      <Class name="PDFDocument">
        <Patch>Properties[Delegate].Type=Id</Patch>
        <Patch>Enumerations[PDF_Page_Scaling_Modes_for_Printing].Name=PDFPrintScalingMode</Patch>
        <Patch>Enumerations[PDFPrintScalingMode].BaseType=NSInteger</Patch>
      </Class>
      <Class name="PDFOutline">
        <Replace type="Html">
          <Source><![CDATA[method instead.)<div class]]></Source>
          <With><![CDATA[method instead.)</p><div class]]></With>
        </Replace>
      </Class>
      <Class name="PDFPage">
        <Replace type="Html">
          <Source><![CDATA[instead.)<div class="declaration">]]></Source>
          <With><![CDATA[instead.)</p><div class="declaration">]]></With>
        </Replace>
      </Class>
      <Class name="PDFSelection">
      </Class>
      <Class name="PDFThumbnailView">
      </Class>
      <Class name="PDFView">
        <Patch>Properties[Delegate].Type=Id</Patch>
      </Class>
      <Class name="PDFAnnotationButtonWidget.Deprecated">
        <Patch>AdditionFor=PDFAnnotationButtonWidget</Patch>
      </Class>
      <Class name="QCComposition">
      </Class>
      <Class name="QCCompositionLayer">
      </Class>
      <Class name="QCCompositionParameterView">
        <Patch>Properties[Delegate].Type=Id</Patch>
      </Class>
      <Class name="QCCompositionPickerPanel">
      </Class>
      <Class name="QCCompositionPickerView">
        <Patch>Properties[Delegate].Type=Id</Patch>
      </Class>
      <Class name="QCCompositionRepository">
      </Class>
      <Class name="QCPlugIn">
        <Patch>Enumerations[QCPlugInExecutionMode].BaseType=int</Patch>
        <Patch>Enumerations[QCPlugInTimeMode].BaseType=int</Patch>
      </Class>
      <Class name="QCPlugInViewController">
      </Class>
      <Class name="QCRenderer">
      </Class>
      <Class name="QCView">
      </Class>
      <Class name="QLPreviewPanel">
        <Patch>Properties[DataSource].Type=Id</Patch>
        <Patch>Properties[Delegate].Type=Id</Patch>
        <Patch>Properties[Delegate].Generate=false</Patch>
      </Class>
    </Classes>
    <Protocols>
      <Protocol name="IKCameraDeviceViewDelegate">
        <Patch>DelegateFor=IKCameraDeviceView</Patch>
        <Patch>DelegateProperty=Delegate</Patch>
        <Patch>Methods[CameraDeviceViewDidDownloadFileLocationFileDataError].Parameters[file].Type=IntPtr</Patch>
        <Patch>Methods[CameraDeviceViewDidDownloadFileLocationFileDataError].Parameters[file].Type=IntPtr</Patch>
      </Protocol>
      <Protocol name="IKDeviceBrowserViewDelegate">
        <Patch>DelegateFor=IKDeviceBrowserView</Patch>
        <Patch>DelegateProperty=Delegate</Patch>
      </Protocol>
      <Protocol name="IKFilterCustomUIProvider">
      </Protocol>
      <Protocol name="IKImageBrowserDataSource">
      </Protocol>
      <Protocol name="IKImageBrowserDelegate">
        <Patch>DelegateFor=IKImageBrowser</Patch>
        <Patch>DelegateProperty=Delegate</Patch>
      </Protocol>
      <Protocol name="IKImageBrowserItem">
      </Protocol>
      <Protocol name="IKImageEditPanelDataSource">
      </Protocol>
      <Protocol name="IKScannerDeviceViewDelegate">
        <Patch>DelegateFor=IKScannerDeviceView</Patch>
        <Patch>DelegateProperty=Delegate</Patch>
      </Protocol>
      <Protocol name="IKSaveOptionsDelegate">
        <Patch>DelegateFor=IKSaveOptions</Patch>
        <Patch>DelegateProperty=Delegate</Patch>
      </Protocol>
      <Protocol name="IKSlideshowDataSource">
      </Protocol>
      <Protocol name="PDFDocumentDelegate">
        <Patch>DelegateFor=PDFDocument</Patch>
        <Patch>DelegateProperty=Delegate</Patch>
      </Protocol>
      <Protocol name="PDFViewDelegate">
        <Patch>DelegateFor=PDFView</Patch>
        <Patch>DelegateProperty=Delegate</Patch>
      </Protocol>
      <Protocol name="QCCompositionParameterViewDelegate">
        <Patch>DelegateFor=QCCompositionParameterView</Patch>
        <Patch>DelegateProperty=Delegate</Patch>
      </Protocol>
      <Protocol name="QCCompositionPickerViewDelegate">
        <Patch>DelegateFor=QCCompositionPickerView</Patch>
        <Patch>DelegateProperty=Delegate</Patch>
      </Protocol>
      <Protocol name="QCCompositionRenderer;QCRenderer">
      </Protocol>
      <Protocol name="QCPlugInContext">
        <Patch>Methods[LogMessage].Generate=false</Patch>
        <Patch>Methods[OutputImageProviderFromBufferWithPixelFormatPixelsWidePixelsHighBaseAddressBytesPerRowReleaseCallbackReleaseContextColorSpaceShouldColorMatch].Generate=false</Patch>
        <Patch>Methods[OutputImageProviderFromTextureWithPixelFormatPixelsWidePixelsHighNameFlippedReleaseCallbackReleaseContextColorSpaceShouldColorMatch].Generate=false</Patch>
      </Protocol>
      <Protocol name="QCPlugInInputImageSource">
        <Patch>Properties[TextureMatrix].Type=IntPtr</Patch>
        <Patch>Properties[TextureMatrix].Getter.ReturnType=IntPtr</Patch>
      </Protocol>
      <Protocol name="QCPlugInOutputImageProvider">
        <Patch>Methods[CopyRenderedTextureForCGLContextPixelFormatBoundsIsFlipped].Parameters[flipped].Type=bool</Patch>
        <Patch>Methods[CopyRenderedTextureForCGLContextPixelFormatBoundsIsFlipped].Parameters[flipped].IsOut=true</Patch>
      </Protocol>
      <Protocol name="QLPreviewPanelDataSource">
      </Protocol>
      <Protocol name="QLPreviewPanelDelegate">
        <Patch>DelegateFor=QLPreviewPanel</Patch>
        <Patch>Methods[PreviewPanelTransitionImageForPreviewItemContentRect].Parameters[contentRect].Type=NSRect</Patch>
        <Patch>Methods[PreviewPanelTransitionImageForPreviewItemContentRect].Parameters[contentRect].IsOut=true</Patch>
      </Protocol>
      <Protocol name="QLPreviewItem">
      </Protocol>
    </Protocols>
    <Enumerations>
      <Enumeration name="PDFAreaOfInterest"></Enumeration>
      <Enumeration name="PDFBorderStyle"></Enumeration>
      <Enumeration name="PDFDisplayBox"></Enumeration>
      <Enumeration name="PDFDisplayMode"></Enumeration>
      <Enumeration name="PDFLineStyle"></Enumeration>
      <Enumeration name="PDFMarkupType"></Enumeration>
      <Enumeration name="PDFTextAnnotationIconType"></Enumeration>
    </Enumerations>
  </Framework>
  <Framework name="QuartzCore" usings="Foundation,AppKit,ApplicationServices" assembly="Monobjc.AppKit">
    <Types>
      <Type name="QuartzCoreFramework.Constants"></Type>
      <Type name="QuartzCoreFramework.Functions"></Type>
      <Type name="CVBuffer">
        <Patch>Functions[CVBufferGetAttachment].Parameters[attachmentMode].Type=CVAttachmentMode</Patch>
        <Patch>Functions[CVBufferGetAttachment].Parameters[attachmentMode].IsOut=true</Patch>
        <Replace type="Generated">
          <Source><![CDATA[ObjectiveCRuntime.GetInstance<CVAttachmentMode>(Marshal.ReadIntPtr(__local1));]]></Source>
          <With><![CDATA[(CVAttachmentMode) Marshal.ReadInt32(__local1);]]></With>
        </Replace>
      </Type>
      <Type name="CVDisplayLink">
        <Patch>Functions[CVDisplayLinkCreateWithActiveCGDisplays].Parameters[displayLinkOut].Type=IntPtr</Patch>
        <Patch>Functions[CVDisplayLinkCreateWithActiveCGDisplays].Parameters[displayLinkOut].IsByRef=true</Patch>
        <Patch>Functions[CVDisplayLinkCreateWithCGDisplay].Parameters[displayLinkOut].Type=IntPtr</Patch>
        <Patch>Functions[CVDisplayLinkCreateWithCGDisplay].Parameters[displayLinkOut].IsByRef=true</Patch>
        <Patch>Functions[CVDisplayLinkCreateWithCGDisplays].Parameters[displayArray].Type=IntPtr</Patch>
        <Patch>Functions[CVDisplayLinkCreateWithCGDisplays].Parameters[count].Type=IntPtr</Patch>
        <Patch>Functions[CVDisplayLinkCreateWithCGDisplays].Parameters[displayLinkOut].Type=IntPtr</Patch>
        <Patch>Functions[CVDisplayLinkCreateWithCGDisplays].Parameters[displayLinkOut].IsByRef=true</Patch>
        <Patch>Functions[CVDisplayLinkCreateWithOpenGLDisplayMask].Parameters[mask].Type=IntPtr</Patch>
        <Patch>Functions[CVDisplayLinkCreateWithOpenGLDisplayMask].Parameters[displayLinkOut].Type=IntPtr</Patch>
        <Patch>Functions[CVDisplayLinkCreateWithOpenGLDisplayMask].Parameters[displayLinkOut].IsByRef=true</Patch>
        <Patch>Functions[CVDisplayLinkGetCurrentTime].Parameters[outTime].Type=CVTimeStamp</Patch>
        <Patch>Functions[CVDisplayLinkGetCurrentTime].Parameters[outTime].IsByRef=true</Patch>
        <Patch>Functions[CVDisplayLinkGetNominalOutputVideoRefreshPeriod].ReturnType=IntPtr</Patch>
        <Patch>Functions[CVDisplayLinkGetOutputVideoLatency].ReturnType=IntPtr</Patch>
        <Patch>Functions[CVDisplayLinkGetTypeID].Generate=false</Patch>
        <Patch>Functions[CVDisplayLinkTranslateTime].Parameters[inTime].Type=CVTimeStamp</Patch>
        <Patch>Functions[CVDisplayLinkTranslateTime].Parameters[inTime].IsByRef=true</Patch>
        <Patch>Functions[CVDisplayLinkTranslateTime].Parameters[outTime].Type=CVTimeStamp</Patch>
        <Patch>Functions[CVDisplayLinkTranslateTime].Parameters[outTime].IsByRef=true</Patch>
        <Replace type="Generated">
          <Source><![CDATA[ObjectiveCRuntime.GetInstance<CVTimeStamp>(Marshal.ReadIntPtr(__local1));]]></Source>
          <With><![CDATA[(CVTimeStamp) Marshal.PtrToStructure(__local1, typeof(CVTimeStamp));]]></With>
        </Replace>
        <Replace type="Generated">
          <Source><![CDATA[ObjectiveCRuntime.GetInstance<CVTimeStamp>(Marshal.ReadIntPtr(__local2));]]></Source>
          <With><![CDATA[(CVTimeStamp) Marshal.PtrToStructure(__local2, typeof(CVTimeStamp));]]></With>
        </Replace>
      </Type>
      <Type name="CVImageBuffer">
        <Replace type="Html">
          <Source><![CDATA[<dd><p><p class=]]></Source>
          <With><![CDATA[<dd><p class=]]></With>
        </Replace>
    </Type>
      <Type name="CVOpenGLBuffer">
        <Patch>Functions[CVOpenGLBufferCreate].Parameters[bufferOut].Type=IntPtr</Patch>
        <Patch>Functions[CVOpenGLBufferGetTypeID].Generate=false</Patch>
      </Type>
      <Type name="CVOpenGLBufferPool">
        <Patch>Functions[CVOpenGLBufferPoolCreate].Parameters[poolOut].Type=IntPtr</Patch>
        <Patch>Functions[CVOpenGLBufferPoolCreateOpenGLBuffer].Parameters[openGLBufferOut].Type=IntPtr</Patch>
        <Patch>Functions[CVOpenGLBufferPoolGetTypeID].Generate=false</Patch>
      </Type>
      <Type name="CVOpenGLTexture">
        <Patch>Functions[CVOpenGLTextureGetCleanTexCoords].Parameters[lowerLeft[2]].Name=lowerLeft</Patch>
        <Patch>Functions[CVOpenGLTextureGetCleanTexCoords].Parameters[lowerLeft].Type=IntPtr</Patch>
        <Patch>Functions[CVOpenGLTextureGetCleanTexCoords].Parameters[lowerRight[2]].Name=lowerRight</Patch>
        <Patch>Functions[CVOpenGLTextureGetCleanTexCoords].Parameters[lowerRight].Type=IntPtr</Patch>
        <Patch>Functions[CVOpenGLTextureGetCleanTexCoords].Parameters[upperRight[2]].Name=upperRight</Patch>
        <Patch>Functions[CVOpenGLTextureGetCleanTexCoords].Parameters[upperRight].Type=IntPtr</Patch>
        <Patch>Functions[CVOpenGLTextureGetCleanTexCoords].Parameters[upperLeft[2]].Name=upperLeft</Patch>
        <Patch>Functions[CVOpenGLTextureGetCleanTexCoords].Parameters[upperLeft].Type=IntPtr</Patch>
        <Patch>Functions[CVOpenGLTextureGetTypeID].Generate=false</Patch>
      </Type>
      <Type name="CVPixelBuffer">
        <Patch>Functions[CVPixelBufferCreate].Parameters[pixelBufferOut].Type=IntPtr</Patch>
        <Patch>Functions[CVPixelBufferCreateResolvedAttributesDictionary].Parameters[resolvedDictionaryOut].Type=IntPtr</Patch>
        <Patch>Functions[CVPixelBufferCreateWithBytes].Parameters[releaseCallback].Type=IntPtr</Patch>
        <Patch>Functions[CVPixelBufferCreateWithBytes].Parameters[pixelBufferOut].Type=IntPtr</Patch>
        <Patch>Functions[CVPixelBufferCreateWithPlanarBytes].Parameters[planeBaseAddress[]].Name=planeBaseAddress</Patch>
        <Patch>Functions[CVPixelBufferCreateWithPlanarBytes].Parameters[planeBaseAddress].Type=IntPtr</Patch>
        <Patch>Functions[CVPixelBufferCreateWithPlanarBytes].Parameters[planeWidth[]].Name=planeWidth</Patch>
        <Patch>Functions[CVPixelBufferCreateWithPlanarBytes].Parameters[planeWidth].Type=IntPtr</Patch>
        <Patch>Functions[CVPixelBufferCreateWithPlanarBytes].Parameters[planeHeight[]].Name=planeHeight</Patch>
        <Patch>Functions[CVPixelBufferCreateWithPlanarBytes].Parameters[planeHeight].Type=IntPtr</Patch>
        <Patch>Functions[CVPixelBufferCreateWithPlanarBytes].Parameters[planeBytesPerRow[]].Name=planeBytesPerRow</Patch>
        <Patch>Functions[CVPixelBufferCreateWithPlanarBytes].Parameters[planeBytesPerRow].Type=IntPtr</Patch>
        <Patch>Functions[CVPixelBufferCreateWithPlanarBytes].Parameters[releaseCallback].Type=IntPtr</Patch>
        <Patch>Functions[CVPixelBufferCreateWithPlanarBytes].Parameters[pixelBufferOut].Type=IntPtr</Patch>
        <Patch>Functions[CVPixelBufferGetExtendedPixels].Parameters[extraColumnsOnLeft].Type=IntPtr</Patch>
        <Patch>Functions[CVPixelBufferGetExtendedPixels].Parameters[extraColumnsOnRight].Type=IntPtr</Patch>
        <Patch>Functions[CVPixelBufferGetExtendedPixels].Parameters[extraRowsOnTop].Type=IntPtr</Patch>
        <Patch>Functions[CVPixelBufferGetExtendedPixels].Parameters[extraRowsOnBottom].Type=IntPtr</Patch>
        <Patch>Functions[CVPixelBufferGetTypeID].Generate=false</Patch>
        <Patch>Enumerations[CVPixelBufferLockFlags].BaseType=uint</Patch>
      </Type>
      <Type name="CVPixelBufferPool">
        <Patch>Functions[CVPixelBufferPoolCreate].Parameters[poolOut].Type=IntPtr</Patch>
        <Patch>Functions[CVPixelBufferPoolCreatePixelBuffer].Parameters[pixelBufferOut].Type=IntPtr</Patch>
        <Patch>Functions[CVPixelBufferPoolGetTypeID].Generate=false</Patch>
      </Type>
      <Type name="CVPixelFormatDescription">
        <Patch>Enumerations[Pixel_Format_Types].Name=PixelFormatTypes</Patch>
        <Patch>Enumerations[PixelFormatTypes].BaseType=uint</Patch>
        <!--
        <Replace type="Generated">
          <Source><![CDATA[= 'L555']]></Source>
          <With><![CDATA[= 0x4C353535]]></With>
        </Replace>
        <Replace type="Generated">
          <Source><![CDATA[= '5551']]></Source>
          <With><![CDATA[= 0x35353531]]></With>
        </Replace>
        <Replace type="Generated">
          <Source><![CDATA[= 'B565']]></Source>
          <With><![CDATA[= 0x42353635]]></With>
        </Replace>
        <Replace type="Generated">
          <Source><![CDATA[= 'L565']]></Source>
          <With><![CDATA[= 0x4C353635]]></With>
        </Replace>
        <Replace type="Generated">
          <Source><![CDATA[= '24BG']]></Source>
          <With><![CDATA[= 0x32344247]]></With>
        </Replace>
        <Replace type="Generated">
          <Source><![CDATA[= 'BGRA']]></Source>
          <With><![CDATA[= 0x42475241]]></With>
        </Replace>
        <Replace type="Generated">
          <Source><![CDATA[= 'ABGR']]></Source>
          <With><![CDATA[= 0x41424752]]></With>
        </Replace>
        <Replace type="Generated">
          <Source><![CDATA[= 'RGBA']]></Source>
          <With><![CDATA[= 0x52474241]]></With>
        </Replace>
        <Replace type="Generated">
          <Source><![CDATA[= 'b64a']]></Source>
          <With><![CDATA[= 0x62363461]]></With>
        </Replace>
        <Replace type="Generated">
          <Source><![CDATA[= 'b48r']]></Source>
          <With><![CDATA[= 0x62343872]]></With>
        </Replace>
        <Replace type="Generated">
          <Source><![CDATA[= 'b32a']]></Source>
          <With><![CDATA[= 0x62333261]]></With>
        </Replace>
        <Replace type="Generated">
          <Source><![CDATA[= 'b16g']]></Source>
          <With><![CDATA[= 0x62313667]]></With>
        </Replace>
        <Replace type="Generated">
          <Source><![CDATA[= '2vuy']]></Source>
          <With><![CDATA[= 0x32767579]]></With>
        </Replace>
        <Replace type="Generated">
          <Source><![CDATA[= 'v408']]></Source>
          <With><![CDATA[= 0x76343038]]></With>
        </Replace>
        <Replace type="Generated">
          <Source><![CDATA[= 'r408']]></Source>
          <With><![CDATA[= 0x72343038]]></With>
        </Replace>
        <Replace type="Generated">
          <Source><![CDATA[= 'v308']]></Source>
          <With><![CDATA[= 0x76333038]]></With>
        </Replace>
        <Replace type="Generated">
          <Source><![CDATA[= 'v216']]></Source>
          <With><![CDATA[= 0x76323136]]></With>
        </Replace>
        <Replace type="Generated">
          <Source><![CDATA[= 'v210']]></Source>
          <With><![CDATA[= 0x76323130]]></With>
        </Replace>
        <Replace type="Generated">
          <Source><![CDATA[= 'v410']]></Source>
          <With><![CDATA[= 0x76343130]]></With>
        </Replace>
        <Replace type="Generated">
          <Source><![CDATA[= 'y420']]></Source>
          <With><![CDATA[= 0x79343230]]></With>
        </Replace>
        <Replace type="Generated">
          <Source><![CDATA[= 'a2vy']]></Source>
          <With><![CDATA[= 0x61327679]]></With>
        </Replace>
        -->
      </Type>
      <Type name="CVTime">
        <Patch>Functions[CVGetCurrentHostTime].Parameters[d].Generate=false</Patch>
        <Patch>Functions[CVGetHostClockFrequency].Parameters[d].Generate=false</Patch>
        <Patch>Functions[CVGetHostClockMinimumTimeDelta].Parameters[d].Generate=false</Patch>
        <!-- TODO: Move to constants -->
        <Patch>Enumerations[CVTime_Constants].Generate=false</Patch>
        <Patch>Enumerations[CVTimeStamp_Flags].Name=CVTimeStampFlags</Patch>
        <Patch>Enumerations[CVTimeStampFlags].BaseType=uint</Patch>
        <Patch>Enumerations[CVTimeStampFlags].Flags=true</Patch>
        <Patch>Enumerations[SMPTE_State_Flags].Name=SMPTEStateFlags</Patch>
        <Patch>Enumerations[SMPTEStateFlags].BaseType=uint</Patch>
        <Patch>Enumerations[SMPTEStateFlags].Flags=true</Patch>
        <Patch>Enumerations[SMPTE_Time_Types].Name=SMPTETimeTypes</Patch>
        <Patch>Enumerations[SMPTETimeTypes].BaseType=uint</Patch>
        <Replace type="Xhtml">
          <Source>
            <![CDATA[&amp;lt;&amp;lt; 17)
};
enum
{]]>
          </Source>
          <With>
            <![CDATA[&amp;lt;&amp;lt; 17),
]]>
          </With>
        </Replace>
        <Replace type="Generated">
          <Source><![CDATA[= (1L <<]]></Source>
          <With><![CDATA[= (1 <<]]></With>
        </Replace>
      </Type>
    </Types>
    <Classes>
      <Class name="CAAnimation">
        <Patch>Properties[Animation].Type=CAAnimation</Patch>
        <Patch>Properties[Animation].Getter.ReturnType=CAAnimation</Patch>
        <Patch>Properties[Animation].CopyInDescendants=true</Patch>
        <Patch>Properties[Delegate].Type=Id</Patch>
      </Class>
      <Class name="CAAnimationGroup">
      </Class>
      <Class name="CABasicAnimation">
      </Class>
      <Class name="CAConstraint">
        <Patch>Methods[ConstraintWithAttributeRelativeToAttribute].ReturnType=CAConstraint</Patch>
        <Patch>Methods[ConstraintWithAttributeRelativeToAttributeOffset].ReturnType=CAConstraint</Patch>
        <Patch>Methods[ConstraintWithAttributeRelativeToAttributeScaleOffset].ReturnType=CAConstraint</Patch>
        <Patch>Enumerations[_CAConstraintAttribute].Name=CAConstraintAttribute</Patch>
        <Patch>Enumerations[CAConstraintAttribute].BaseType=int</Patch>
      </Class>
      <Class name="CAConstraintLayoutManager">
        <Patch>Properties[LayoutManager].Type=CAConstraintLayoutManager</Patch>
      </Class>
      <Class name="CAEmitterCell">
        <Patch>Properties[EmitterCell].Type=CAEmitterCell</Patch>
      </Class>
      <Class name="CAEmitterLayer">
      </Class>
      <Class name="CAGradientLayer">
      </Class>
      <Class name="CAKeyframeAnimation">
        <Replace type="Xhtml">
          <Source><![CDATA[<a href="#//apple_ref/doc/c_ref/kCAAnimationRotateAuto">kCAAnimationRotateAuto</a>]]></Source>
          <With><![CDATA[<a href="#//apple_ref/doc/c_ref/kCAAnimationRotateAuto">kCAAnimationRotateAuto;</a>]]></With>
        </Replace>
      </Class>
      <Class name="CALayer">
        <Patch>Properties[AutoresizingMask].Type=CAAutoresizingMask</Patch>
        <Patch>Properties[CompositingFilter].Type=CIFilter</Patch>
        <Patch>Properties[EdgeAntialiasingMask].Type=CAEdgeAntialiasingMask</Patch>
        <Patch>Properties[Delegate].Type=Id</Patch>
        <Patch>Properties[Layer].Type=CALayer</Patch>
        <Patch>Properties[Layer].Getter.ReturnType=CALayer</Patch>
        <Patch>Properties[Layer].CopyInDescendants=true</Patch>
        <Patch>Enumerations[CAAutoresizingMask].BaseType=uint</Patch>
        <Patch>Enumerations[CAAutoresizingMask].Flags=true</Patch>
        <Patch>Enumerations[CAEdgeAntialiasingMask].BaseType=uint</Patch>
        <Patch>Enumerations[CAEdgeAntialiasingMask].Flags=true</Patch>
        <Patch>Constants[CATransform3DIdentity].Generate=false</Patch>
      </Class>
      <Class name="CAMediaTimingFunction">
        <Patch>Methods[FunctionWithControlPoints].ReturnType=CAMediaTimingFunction</Patch>
        <Patch>Methods[FunctionWithName].ReturnType=CAMediaTimingFunction</Patch>
        <Patch>Methods[GetControlPointAtIndexValues].Parameters[index].Type=IntPtr</Patch>
      </Class>
      <Class name="CAOpenGLLayer">
        <Patch>Methods[CanDrawInCGLContextPixelFormatForLayerTimeDisplayTime].Parameters[timeStamp].Type=IntPtr</Patch>
        <Patch>Methods[DrawInCGLContextPixelFormatForLayerTimeDisplayTime].Parameters[timeStamp].Type=IntPtr</Patch>
      </Class>
      <Class name="CAPropertyAnimation">
        <Patch>Methods[AnimationWithKeyPath].ReturnType=CAPropertyAnimation</Patch>
        <Patch>Methods[AnimationWithKeyPath].CopyInDescendants=true</Patch>
      </Class>
      <Class name="CARenderer">
        <Patch>Methods[BeginFrameAtTimeTimeStamp].Parameters[timeStamp].Type=IntPtr</Patch>
      </Class>
      <Class name="CAReplicatorLayer">
      </Class>
      <Class name="CAScrollLayer">
      </Class>
      <Class name="CAShapeLayer">
      </Class>
      <Class name="CATextLayer">
      </Class>
      <Class name="CATiledLayer">
        <Patch>Properties[LevelsOfDetail].Type=IntPtr</Patch>
        <Patch>Properties[LevelsOfDetail].Getter.ReturnType=IntPtr</Patch>
        <Patch>Properties[LevelsOfDetailBias].Type=IntPtr</Patch>
        <Patch>Properties[LevelsOfDetailBias].Getter.ReturnType=IntPtr</Patch>
      </Class>
      <Class name="CATransaction">
        <Replace type="Generated">
          <Source>public static void SetValueForKey(</Source>
          <With>public new static void SetValueForKey(</With>
        </Replace>
        <Replace type="Generated">
          <Source>public static Id ValueForKey(</Source>
          <With>public new static Id ValueForKey(</With>
        </Replace>
      </Class>
      <Class name="CATransformLayer">
      </Class>
      <Class name="CATransition">
      </Class>
      <Class name="CAValueFunction">
      </Class>
      <Class name="CIColor">
        <Patch>Methods[InitWithCGColor].GenerateConstructor=false</Patch>
        <Patch>Properties[Components].Type=IntPtr</Patch>
        <Patch>Properties[Components].Getter.ReturnType=IntPtr</Patch>
        <Patch>Properties[NumberOfComponents].Type=IntPtr</Patch>
        <Patch>Properties[NumberOfComponents].Getter.ReturnType=IntPtr</Patch>
      </Class>
      <Class name="CIContext">
      </Class>
      <Class name="CIFilter">
        <Patch>Methods[FilterWithNameKeysAndValues].Parameters[key0,...].Generate=false</Patch>
        <Patch>Methods[FilterWithNameKeysAndValues].Parameters[key0]=<![CDATA[<Parameter Generate="true" IsOut="false" IsByRef="false"><Summary><Line>MISSING</Line></Summary><Name>key0</Name><Type>NSString</Type></Parameter>]]></Patch>
        <Patch>Methods[FilterWithNameKeysAndValues].Parameters[values]=<![CDATA[<Parameter Generate="true" IsOut="false" IsByRef="false"><Summary><Line>MISSING</Line></Summary><Name>values</Name><Type>params object[]</Type></Parameter>]]></Patch>
        <Patch>Methods[Apply].Parameters[k,...].Generate=false</Patch>
        <Patch>Methods[Apply].Parameters[k]=<![CDATA[<Parameter Generate="true" IsOut="false" IsByRef="false"><Summary><Line>MISSING</Line></Summary><Name>k</Name><Type>NSString</Type></Parameter>]]></Patch>
        <Patch>Methods[Apply].Parameters[values]=<![CDATA[<Parameter Generate="true" IsOut="false" IsByRef="false"><Summary><Line>MISSING</Line></Summary><Name>values</Name><Type>params object[]</Type></Parameter>]]></Patch>
      </Class>
      <Class name="CIFilter_CoreAnimationAdditions">
        <Patch>AdditionFor=CIFilter</Patch>
      </Class>
      <Class name="CIFilterGenerator">
      </Class>
      <Class name="CIFilterShape">
        <Patch>Methods[ShapeWithRect].ReturnType=CIFilterShape</Patch>
      </Class>
      <Class name="CIImage">
        <Patch>Methods[ImageWithBitmapDataBytesPerRowSizeFormatColorSpace].Parameters[bpr].Type=IntPtr</Patch>
        <Patch>Methods[ImageWithImageProviderSizeFormatColorSpaceOptions].Parameters[width].Type=IntPtr</Patch>
        <Patch>Methods[ImageWithImageProviderSizeFormatColorSpaceOptions].Parameters[height].Type=IntPtr</Patch>
        <Patch>Methods[InitWithBitmapDataBytesPerRowSizeFormatColorSpace].Parameters[bpr].Type=IntPtr</Patch>
        <Patch>Methods[InitWithCGImage].GenerateConstructor=false</Patch>
        <Patch>Methods[InitWithCGImageOptions].GenerateConstructor=false</Patch>
        <Patch>Methods[InitWithCGLayer].GenerateConstructor=false</Patch>
        <Patch>Methods[InitWithCGLayerOptions].GenerateConstructor=false</Patch>
        <Patch>Methods[InitWithCVImageBuffer].GenerateConstructor=false</Patch>
        <Patch>Methods[InitWithImageProviderSizeFormatColorSpaceOptions].Parameters[width:(size_t)height].Name=width</Patch>
        <Patch>Methods[InitWithImageProviderSizeFormatColorSpaceOptions].Parameters[width].Type=IntPtr</Patch>
        <Patch>Methods[InitWithImageProviderSizeFormatColorSpaceOptions].Parameters[height].Type=IntPtr</Patch>
      </Class>
      <Class name="CIImageAccumulator">
      </Class>
      <Class name="CIKernel">
      </Class>
      <Class name="CIPlugIn">
      </Class>
      <Class name="CISampler">
        <Patch>Methods[InitWithImageKeysAndValues].Parameters[keysAndValues]=<![CDATA[<Parameter Generate="true" IsOut="false" IsByRef="false"><Summary><Line>MISSING</Line></Summary><Name>keysAndValues</Name><Type>params object[]</Type></Parameter>]]></Patch>
        <Patch>Methods[SamplerWithImageKeysAndValues].Parameters[keysAndValues]=<![CDATA[<Parameter Generate="true" IsOut="false" IsByRef="false"><Summary><Line>MISSING</Line></Summary><Name>keysAndValues</Name><Type>params object[]</Type></Parameter>]]></Patch>
      </Class>
      <Class name="CIVector">
        <Patch>Methods[VectorWithValuesCount].Parameters[values].Type=IntPtr</Patch>
        <Patch>Methods[VectorWithValuesCount].Parameters[count].Type=IntPtr</Patch>
        <Patch>Methods[InitWithValuesCount].Parameters[values].Type=IntPtr</Patch>
        <Patch>Methods[InitWithValuesCount].Parameters[count].Type=IntPtr</Patch>
        <Patch>Methods[ValueAtIndex].Parameters[index].Type=IntPtr</Patch>
        <Patch>Properties[Count].Type=IntPtr</Patch>
        <Patch>Properties[Count].Getter.ReturnType=IntPtr</Patch>
      </Class>
      <Class name="NSValue_CoreAnimationAdditions">
        <Patch>AdditionFor=NSValue</Patch>
      </Class>

      <Class name="CIContext.Deprecated">
        <Patch>AdditionFor=CIContext</Patch>
      </Class>

    </Classes>
    <Protocols>
      <Protocol name="CAAnimationDelegate">
        <Patch>DelegateFor=CAAnimation</Patch>
        <Patch>DelegateProperty=Delegate</Patch>
      </Protocol>
      <Protocol name="CAAction">
      </Protocol>
      <Protocol name="CALayerDelegate">
        <Patch>DelegateFor=CALayer</Patch>
        <Patch>DelegateProperty=Delegate</Patch>
      </Protocol>
      <Protocol name="CALayoutManager">
      </Protocol>
      <Protocol name="CAMediaTiming">
      </Protocol>
      <Protocol name="CIImageProvider">
        <Patch>Methods[ProvideImageDataBytesPerRowOriginSizeUserInfo].Parameters[x:(size_t)y].Name=x</Patch>
        <Patch>Methods[ProvideImageDataBytesPerRowOriginSizeUserInfo].Parameters[width:(size_t)height].Name=width</Patch>
        <Patch>Methods[ProvideImageDataBytesPerRowOriginSizeUserInfo].Parameters[rowbytes].Type=IntPtr</Patch>
        <Patch>Methods[ProvideImageDataBytesPerRowOriginSizeUserInfo].Parameters[x].Type=IntPtr</Patch>
        <Patch>Methods[ProvideImageDataBytesPerRowOriginSizeUserInfo].Parameters[y].Type=IntPtr</Patch>
        <Patch>Methods[ProvideImageDataBytesPerRowOriginSizeUserInfo].Parameters[width].Type=IntPtr</Patch>
        <Patch>Methods[ProvideImageDataBytesPerRowOriginSizeUserInfo].Parameters[height].Type=IntPtr</Patch>
      </Protocol>
      <Protocol name="CIPlugInRegistration">
      </Protocol>
    </Protocols>
  </Framework>
  <Framework name="ScriptingBridge" usings="Foundation,ApplicationServices" assembly="Monobjc.ScriptingBridge">
    <Classes>
      <Class name="SBApplication">
        <Patch>Methods[ApplicationWithBundleIdentifier].ReturnType=SBApplication</Patch>
        <Patch>Methods[ApplicationWithProcessIdentifier].ReturnType=SBApplication</Patch>
        <Patch>Methods[ApplicationWithURL].ReturnType=SBApplication</Patch>
      </Class>
      <Class name="SBElementArray">
      </Class>
      <Class name="SBObject">
        <Patch>Methods[SendEventIdParameters].Parameters[firstParamCode,...].Name=firstParamCode</Patch>
        <Patch>Methods[SendEventIdParameters].Parameters[values]=<![CDATA[<Parameter Generate="true" IsOut="false" IsByRef="false"><Summary><Line>MISSING</Line></Summary><Name>values</Name><Type>params object[]</Type></Parameter>]]></Patch>
      </Class>
    </Classes>
    <Protocols>
      <Protocol name="SBApplicationDelegate">
        <Patch>Methods[EventDidFailWithError].Parameters[@event].Type=IntPtr</Patch>
      </Protocol>
    </Protocols>
  </Framework>
  <Framework name="Security" usings="Foundation" assembly="Monobjc.Security">
    <Types>
      <Type name="Authorization">
        <Patch>Functions[AuthorizationCopyInfo].Parameters[info].Type=IntPtr</Patch>
        <Patch>Functions[AuthorizationCopyInfo].Parameters[info].IsOut=true</Patch>
        <Patch>Functions[AuthorizationCopyPrivilegedReference].Parameters[authorization].Type=IntPtr</Patch>
        <Patch>Functions[AuthorizationCopyPrivilegedReference].Parameters[authorization].IsOut=true</Patch>
        <Patch>Functions[AuthorizationCopyRights].Parameters[rights].Type=IntPtr</Patch>
        <Patch>Functions[AuthorizationCopyRights].Parameters[environment].Type=IntPtr</Patch>
        <Patch>Functions[AuthorizationCopyRights].Parameters[authorizedRights].Type=IntPtr</Patch>
        <Patch>Functions[AuthorizationCopyRights].Parameters[authorizedRights].IsOut=true</Patch>
        <Patch>Functions[AuthorizationCreate].Parameters[rights].Type=IntPtr</Patch>
        <Patch>Functions[AuthorizationCreate].Parameters[environment].Type=IntPtr</Patch>
        <Patch>Functions[AuthorizationCreate].Parameters[authorization].Type=IntPtr</Patch>
        <Patch>Functions[AuthorizationCreate].Parameters[authorization].IsOut=true</Patch>
        <Patch>Functions[AuthorizationCreateFromExternalForm].Parameters[extForm].Type=IntPtr</Patch>
        <Patch>Functions[AuthorizationCreateFromExternalForm].Parameters[authorization].Type=IntPtr</Patch>
        <Patch>Functions[AuthorizationCreateFromExternalForm].Parameters[authorization].IsOut=true</Patch>
        <Patch>Functions[AuthorizationExecuteWithPrivileges].Parameters[pathToTool].Type=String</Patch>
        <Patch>Functions[AuthorizationExecuteWithPrivileges].Parameters[const].Name=arguments</Patch>
        <Patch>Functions[AuthorizationExecuteWithPrivileges].Parameters[arguments].Type=IntPtr</Patch>
        <Patch>Functions[AuthorizationExecuteWithPrivileges].Parameters[communicationsPipe].Type=IntPtr</Patch>
        <Patch>Functions[AuthorizationFreeItemSet].Parameters[set].Type=IntPtr</Patch>
        <Patch>Functions[AuthorizationMakeExternalForm].Parameters[extForm].Type=IntPtr</Patch>
        <Patch>Functions[AuthorizationRightGet].Parameters[rightName].Type=String</Patch>
        <Patch>Functions[AuthorizationRightGet].Parameters[rightDefinition].Type=NSDictionary</Patch>
        <Patch>Functions[AuthorizationRightGet].Parameters[rightDefinition].IsOut=true</Patch>
        <Patch>Functions[AuthorizationRightRemove].Parameters[rightName].Type=String</Patch>
        <Patch>Functions[AuthorizationRightSet].Parameters[rightName].Type=String</Patch>
        <Patch>Functions[AuthorizationRightSet].Parameters[bundle].Type=IntPtr</Patch>
        <Patch>Enumerations[Authorization_Options].Name=AuthorizationFlags</Patch>
        <Patch>Enumerations[AuthorizationFlags].BaseType=uint</Patch>
        <!-- TODO: Move to constants -->
        <Patch>Enumerations[Authorization_Rights_Mask].Name=AuthorizationRightsMask</Patch>
        <Patch>Enumerations[AuthorizationRightsMask].BaseType=uint</Patch>
        <Patch>Enumerations[AuthorizationRightsMask].Flags=true</Patch>
        <Patch>Enumerations[External_Authorization_Reference_Length].Generate=false</Patch>
      </Type>
      <Type name="CertServices">
        <Patch>Functions[SecCertificateCopyCommonName].Parameters[commonName].Type=NSString</Patch>
        <Patch>Functions[SecCertificateCopyCommonName].Parameters[commonName].IsOut=true</Patch>
        <Patch>Functions[SecCertificateCopyEmailAddresses].Parameters[emailAddresses].Type=NSArray</Patch>
        <Patch>Functions[SecCertificateCopyEmailAddresses].Parameters[emailAddresses].IsOut=true</Patch>
        <Patch>Functions[SecCertificateCopyPreference].Parameters[certificate].Type=IntPtr</Patch>
        <Patch>Functions[SecCertificateCopyPreference].Parameters[certificate].IsOut=true</Patch>
        <Patch>Functions[SecCertificateCopyPublicKey].Parameters[key].Type=IntPtr</Patch>
        <Patch>Functions[SecCertificateCopyPublicKey].Parameters[key].IsOut=true</Patch>
        <Patch>Functions[SecCertificateCreateFromData].Parameters[data].Type=CSSM_DATA</Patch>
        <Patch>Functions[SecCertificateCreateFromData].Parameters[data].IsByRef=true</Patch>
        <Patch>Functions[SecCertificateCreateFromData].Parameters[certificate].Type=IntPtr</Patch>
        <Patch>Functions[SecCertificateCreateFromData].Parameters[certificate].IsOut=true</Patch>
        <Patch>Functions[SecCertificateGetAlgorithmID].Parameters[algid].Type=IntPtr</Patch>
        <Patch>Functions[SecCertificateGetAlgorithmID].Parameters[algid].IsOut=true</Patch>
        <Patch>Functions[SecCertificateGetCLHandle].Parameters[clHandle].Type=IntPtr</Patch>
        <Patch>Functions[SecCertificateGetCLHandle].Parameters[clHandle].IsOut=true</Patch>
        <Patch>Functions[SecCertificateGetData].Parameters[data].Type=CSSM_DATA</Patch>
        <Patch>Functions[SecCertificateGetData].Parameters[data].IsOut=true</Patch>
        <Patch>Functions[SecCertificateGetIssuer].Parameters[issuer].Type=CSSM_X509_NAME</Patch>
        <Patch>Functions[SecCertificateGetIssuer].Parameters[issuer].IsOut=true</Patch>
        <Patch>Functions[SecCertificateGetItem].Parameters[item].Type=IntPtr</Patch>
        <Patch>Functions[SecCertificateGetItem].Parameters[item].IsOut=true</Patch>
        <Patch>Functions[SecCertificateGetSubject].Parameters[subject].Type=CSSM_X509_NAME</Patch>
        <Patch>Functions[SecCertificateGetSubject].Parameters[subject].IsOut=true</Patch>
        <Patch>Functions[SecCertificateGetType].Parameters[certificateType].Type=CSSM_CERT_TYPE</Patch>
        <Patch>Functions[SecCertificateGetType].Parameters[certificateType].IsOut=true</Patch>
        <Patch>Functions[SecCertificateGetTypeID].Generate=false</Patch>
        <Patch>Functions[SecKeyGeneratePair].Parameters[publicKey].Type=IntPtr</Patch>
        <Patch>Functions[SecKeyGeneratePair].Parameters[publicKey].IsOut=true</Patch>
        <Patch>Functions[SecKeyGeneratePair].Parameters[privateKey].Type=IntPtr</Patch>
        <Patch>Functions[SecKeyGeneratePair].Parameters[privateKey].IsOut=true</Patch>
        <Patch>Functions[SecIdentityCopyCertificate].Parameters[certificateRef].Type=IntPtr</Patch>
        <Patch>Functions[SecIdentityCopyCertificate].Parameters[certificateRef].IsOut=true</Patch>
        <Patch>Functions[SecIdentityCopyPreference].Parameters[identity].Type=IntPtr</Patch>
        <Patch>Functions[SecIdentityCopyPreference].Parameters[identity].IsOut=true</Patch>
        <Patch>Functions[SecIdentityCopyPrivateKey].Parameters[privateKeyRef].Type=IntPtr</Patch>
        <Patch>Functions[SecIdentityCopyPrivateKey].Parameters[privateKeyRef].IsOut=true</Patch>
        <Patch>Functions[SecIdentityCopySystemIdentity].Parameters[idRef].Type=IntPtr</Patch>
        <Patch>Functions[SecIdentityCopySystemIdentity].Parameters[idRef].IsOut=true</Patch>
        <Patch>Functions[SecIdentityCopySystemIdentity].Parameters[actualDomain].Type=NSString</Patch>
        <Patch>Functions[SecIdentityCopySystemIdentity].Parameters[actualDomain].IsOut=true</Patch>
        <Patch>Functions[SecIdentityCreateWithCertificate].Parameters[identityRef].Type=IntPtr</Patch>
        <Patch>Functions[SecIdentityCreateWithCertificate].Parameters[identityRef].IsOut=true</Patch>
        <Patch>Functions[SecIdentitySearchCopyNext].Parameters[identity].Type=IntPtr</Patch>
        <Patch>Functions[SecIdentitySearchCopyNext].Parameters[identity].IsOut=true</Patch>
        <Patch>Functions[SecIdentitySearchCreate].Parameters[searchRef].Type=IntPtr</Patch>
        <Patch>Functions[SecIdentitySearchCreate].Parameters[searchRef].IsOut=true</Patch>
        <Patch>Functions[SecIdentityGetTypeID].Generate=false</Patch>
        <Patch>Functions[SecIdentitySearchGetTypeID].Generate=false</Patch>
        <Patch>Functions[SecKeyCreatePair].Parameters[publicKey].Type=IntPtr</Patch>
        <Patch>Functions[SecKeyCreatePair].Parameters[publicKey].IsOut=true</Patch>
        <Patch>Functions[SecKeyCreatePair].Parameters[privateKey].Type=IntPtr</Patch>
        <Patch>Functions[SecKeyCreatePair].Parameters[privateKey].IsOut=true</Patch>
        <Patch>Functions[SecKeyGenerate].Parameters[keyRef].Type=IntPtr</Patch>
        <Patch>Functions[SecKeyGenerate].Parameters[keyRef].IsOut=true</Patch>
        <Patch>Functions[SecKeyGetCredentials].Parameters[outCredentials].Type=IntPtr</Patch>
        <Patch>Functions[SecKeyGetCredentials].Parameters[outCredentials].IsOut=true</Patch>
        <Patch>Functions[SecKeyGetCSPHandle].Parameters[cspHandle].Type=IntPtr</Patch>
        <Patch>Functions[SecKeyGetCSPHandle].Parameters[cspHandle].IsOut=true</Patch>
        <Patch>Functions[SecKeyGetCSSMKey].Parameters[cssmKey].Type=IntPtr</Patch>
        <Patch>Functions[SecKeyGetCSSMKey].Parameters[cssmKey].IsOut=true</Patch>
        <Patch>Functions[SecKeyGetTypeID].Generate=false</Patch>
        <Patch>Functions[SecPKCS12Import].Parameters[items].Type=NSArray</Patch>
        <Patch>Functions[SecPKCS12Import].Parameters[items].IsOut=true</Patch>
        <Patch>Functions[SecPolicyCreateBasicX509].Parameters[d].Generate=false</Patch>
        <Patch>Functions[SecPolicyGetOID].Parameters[oid].Type=CSSM_DATA</Patch>
        <Patch>Functions[SecPolicyGetOID].Parameters[oid].IsOut=true</Patch>
        <Patch>Functions[SecPolicyGetTPHandle].Parameters[tpHandle].Type=IntPtr</Patch>
        <Patch>Functions[SecPolicyGetTPHandle].Parameters[tpHandle].IsOut=true</Patch>
        <Patch>Functions[SecPolicyGetValue].Parameters[value].Type=CSSM_DATA</Patch>
        <Patch>Functions[SecPolicyGetValue].Parameters[value].IsOut=true</Patch>
        <Patch>Functions[SecPolicyGetTypeID].Generate=false</Patch>
        <Patch>Functions[SecPolicySearchCopyNext].Parameters[policyRef].Type=IntPtr</Patch>
        <Patch>Functions[SecPolicySearchCopyNext].Parameters[policyRef].IsOut=true</Patch>
        <Patch>Functions[SecPolicySearchCreate].Parameters[policyOID].Type=CSSM_DATA</Patch>
        <Patch>Functions[SecPolicySearchCreate].Parameters[policyOID].IsByRef=true</Patch>
        <Patch>Functions[SecPolicySearchCreate].Parameters[value].Type=CSSM_DATA</Patch>
        <Patch>Functions[SecPolicySearchCreate].Parameters[value].IsByRef=true</Patch>
        <Patch>Functions[SecPolicySearchCreate].Parameters[searchRef].Type=IntPtr</Patch>
        <Patch>Functions[SecPolicySearchCreate].Parameters[searchRef].IsOut=true</Patch>
        <Patch>Functions[SecPolicySetValue].Parameters[value].Type=CSSM_DATA</Patch>
        <Patch>Functions[SecPolicySetValue].Parameters[value].IsByRef=true</Patch>
        <Patch>Functions[SecPolicySearchGetTypeID].Generate=false</Patch>
        <Patch>Functions[SecTrustCopyAnchorCertificates].Parameters[anchors].Type=NSArray</Patch>
        <Patch>Functions[SecTrustCopyAnchorCertificates].Parameters[anchors].IsOut=true</Patch>
        <Patch>Functions[SecTrustCopyAnchorCertificates].Generate=false</Patch>
        <Patch>Functions[SecTrustCopyCustomAnchorCertificates].Parameters[anchors].Type=NSArray</Patch>
        <Patch>Functions[SecTrustCopyCustomAnchorCertificates].Parameters[anchors].IsOut=true</Patch>
        <Patch>Functions[SecTrustCopyCustomAnchorCertificates].Generate=false</Patch>
        <Patch>Functions[SecTrustCopyPolicies].Parameters[policies].Type=NSArray</Patch>
        <Patch>Functions[SecTrustCopyPolicies].Parameters[policies].IsOut=true</Patch>
        <Patch>Functions[SecTrustCopyPolicies].Generate=false</Patch>
        <Patch>Functions[SecTrustCreateWithCertificates].Parameters[trustRef].Type=IntPtr</Patch>
        <Patch>Functions[SecTrustCreateWithCertificates].Parameters[trustRef].IsOut=true</Patch>
        <Patch>Functions[SecTrustCreateWithCertificates].Generate=false</Patch>
        <Patch>Functions[SecTrustEvaluate].Parameters[result].Type=SecTrustResultType</Patch>
        <Patch>Functions[SecTrustEvaluate].Parameters[result].IsOut=true</Patch>
        <Patch>Functions[SecTrustEvaluate].Generate=false</Patch>
        <Patch>Functions[SecTrustGetCssmResult].Parameters[result].Type=IntPtr</Patch>
        <Patch>Functions[SecTrustGetCssmResult].Parameters[result].IsOut=true</Patch>
        <Patch>Functions[SecTrustGetCssmResult].Generate=false</Patch>
        <Patch>Functions[SecTrustGetCssmResultCode].Parameters[resultCode].Type=int</Patch>
        <Patch>Functions[SecTrustGetCssmResultCode].Parameters[resultCode].IsOut=true</Patch>
        <Patch>Functions[SecTrustGetCssmResultCode].Generate=false</Patch>
        <Patch>Functions[SecTrustGetResult].Generate=false</Patch>
        <Patch>Functions[SecTrustGetTPHandle].Generate=false</Patch>
        <Patch>Functions[SecTrustGetTypeID].Generate=false</Patch>
        <Patch>Functions[SecTrustGetVerifyTime].Generate=false</Patch>
        <Patch>Functions[SecTrustSetAnchorCertificates].Generate=false</Patch>
        <Patch>Functions[SecTrustSetAnchorCertificatesOnly].Generate=false</Patch>
        <Patch>Functions[SecTrustSetKeychains].Generate=false</Patch>
        <Patch>Functions[SecTrustSetParameters].Generate=false</Patch>
        <Patch>Functions[SecTrustSetPolicies].Generate=false</Patch>
        <Patch>Functions[SecTrustSettingsCopyCertificates].Generate=false</Patch>
        <Patch>Functions[SecTrustSettingsCopyModificationDate].Generate=false</Patch>
        <Patch>Functions[SecTrustSettingsCopyTrustSettings].Generate=false</Patch>
        <Patch>Functions[SecTrustSettingsCreateExternalRepresentation].Generate=false</Patch>
        <Patch>Functions[SecTrustSettingsImportExternalRepresentation].Generate=false</Patch>
        <Patch>Functions[SecTrustSettingsRemoveTrustSettings].Generate=false</Patch>
        <Patch>Functions[SecTrustSettingsSetTrustSettings].Generate=false</Patch>
        <Patch>Functions[SecTrustSetVerifyDate].Generate=false</Patch>
        <Patch>Enumerations[Certificate_Item_Attribute_Constants].Name=CertificateItemAttributes</Patch>
        <Patch>Enumerations[CertificateItemAttributes].BaseType=uint</Patch>
        <!--
        <Patch>Enumerations[CertificateItemAttributes].Values[kSecSubjectItemAttr].Value=0x7375626A</Patch>
        <Patch>Enumerations[CertificateItemAttributes].Values[kSecIssuerItemAttr].Value=0x69737375</Patch>
        <Patch>Enumerations[CertificateItemAttributes].Values[kSecSerialNumberItemAttr].Value=0x736E6272</Patch>
        <Patch>Enumerations[CertificateItemAttributes].Values[kSecPublicKeyHashItemAttr].Value=0x68706B79</Patch>
        <Patch>Enumerations[CertificateItemAttributes].Values[kSecSubjectKeyIdentifierItemAttr].Value=0x736B6964</Patch>
        <Patch>Enumerations[CertificateItemAttributes].Values[kSecCertTypeItemAttr].Value=0x63747970</Patch>
        <Patch>Enumerations[CertificateItemAttributes].Values[kSecCertEncodingItemAttr].Value=0x63656E63</Patch>
        -->
        <Patch>Enumerations[Certificate_Status_Constants].Name=CSSM_TP_APPLE_CERT_STATUS</Patch>
        <Patch>Enumerations[CSSM_TP_APPLE_CERT_STATUS].BaseType=uint</Patch>
        <Patch>Enumerations[Digital_Signature_Padding_Types].Name=SecPadding</Patch>
        <Patch>Enumerations[SecPadding].BaseType=uint</Patch>
        <Patch>Enumerations[Trust_Result_Type_Constants].Name=SecTrustResultType</Patch>
        <Patch>Enumerations[SecTrustResultType].BaseType=uint</Patch>
        <Patch>Enumerations[Action_Data_Flags].Name=CSSM_APPLE_TP_ACTION_FLAGS</Patch>
        <Patch>Enumerations[CSSM_APPLE_TP_ACTION_FLAGS].BaseType=uint</Patch>
        <Patch>Enumerations[Key_Credential_Type_Constants].Name=SecCredentialType</Patch>
        <Patch>Enumerations[SecCredentialType].BaseType=uint</Patch>
        <Patch>Enumerations[Key_Credential_Type_Constants].Name=SecCredentialType</Patch>
        <Patch>Enumerations[SecCredentialType].BaseType=uint</Patch>
        <Patch>Enumerations[SecTrustSettingsDomain].BaseType=uint</Patch>
        <Patch>Enumerations[SecTrustSettingsKeyUsage].BaseType=uint</Patch>
        <Patch>Enumerations[SecTrustSettingsResult].BaseType=uint</Patch>

        <Replace type="Generated">
          <Source><![CDATA[ObjectiveCRuntime.GetInstance<CSSM_CERT_TYPE>(Marshal.ReadIntPtr(__local1));]]></Source>
          <With><![CDATA[(CSSM_CERT_TYPE) Marshal.ReadInt32(__local1);]]></With>
        </Replace>
        <Replace type="Generated">
          <Source><![CDATA[ObjectiveCRuntime.GetInstance<CSSM_DATA>(Marshal.ReadIntPtr(__local1));]]></Source>
          <With><![CDATA[(CSSM_DATA) Marshal.PtrToStructure(__local1, typeof(CSSM_DATA));]]></With>
        </Replace>
        <Replace type="Generated">
          <Source><![CDATA[ObjectiveCRuntime.GetInstance<CSSM_DATA>(Marshal.ReadIntPtr(__local2));]]></Source>
          <With><![CDATA[(CSSM_DATA) Marshal.PtrToStructure(__local2, typeof(CSSM_DATA));]]></With>
        </Replace>
        <Replace type="Generated">
          <Source><![CDATA[ObjectiveCRuntime.GetInstance<CSSM_X509_NAME>(Marshal.ReadIntPtr(__local1));]]></Source>
          <With><![CDATA[(CSSM_X509_NAME) Marshal.PtrToStructure(__local1, typeof(CSSM_X509_NAME));]]></With>
        </Replace>
      </Type>
      <Type name="CodeSigning">
        <Patch>Functions[SecCodeCheckValidityWithErrors].Parameters[errors].Type=NSError</Patch>
        <Patch>Functions[SecCodeCheckValidityWithErrors].Parameters[errors].IsOut=true</Patch>
        <Patch>Functions[SecCodeCopyDesignatedRequirement].Parameters[requirement].Type=IntPtr</Patch>
        <Patch>Functions[SecCodeCopyDesignatedRequirement].Parameters[requirement].IsOut=true</Patch>
        <Patch>Functions[SecCodeCopyGuestWithAttributes].Parameters[guest].Type=IntPtr</Patch>
        <Patch>Functions[SecCodeCopyGuestWithAttributes].Parameters[guest].IsOut=true</Patch>
        <Patch>Functions[SecCodeCopyHost].Parameters[host].Type=IntPtr</Patch>
        <Patch>Functions[SecCodeCopyHost].Parameters[host].IsOut=true</Patch>
        <Patch>Functions[SecCodeCopyPath].Parameters[path].Type=NSURL</Patch>
        <Patch>Functions[SecCodeCopyPath].Parameters[path].IsOut=true</Patch>
        <Patch>Functions[SecCodeCopySelf].Parameters[self].Type=IntPtr</Patch>
        <Patch>Functions[SecCodeCopySelf].Parameters[self].IsOut=true</Patch>
        <Patch>Functions[SecCodeCopySigningInformation].Parameters[information].Type=NSDictionary</Patch>
        <Patch>Functions[SecCodeCopySigningInformation].Parameters[information].IsOut=true</Patch>
        <Patch>Functions[SecCodeCopyStaticCode].Parameters[staticCode].Type=IntPtr</Patch>
        <Patch>Functions[SecCodeCopyStaticCode].Parameters[staticCode].IsOut=true</Patch>
        <Patch>Functions[SecCodeGetTypeID].Generate=false</Patch>
        <Patch>Functions[SecHostCreateGuest].Parameters[newGuest].Type=IntPtr</Patch>
        <Patch>Functions[SecHostCreateGuest].Parameters[newGuest].IsOut=true</Patch>
        <Patch>Functions[SecHostSelectedGuest].Parameters[guestRef].Type=IntPtr</Patch>
        <Patch>Functions[SecHostSelectedGuest].Parameters[guestRef].IsOut=true</Patch>
        <Patch>Functions[SecHostSetHostingPort].Parameters[hostingPort].Type=uint</Patch>
        <Patch>Functions[SecRequirementCopyData].Parameters[data].Type=NSData</Patch>
        <Patch>Functions[SecRequirementCopyData].Parameters[data].IsOut=true</Patch>
        <Patch>Functions[SecRequirementCopyString].Parameters[text].Type=NSString</Patch>
        <Patch>Functions[SecRequirementCopyString].Parameters[text].IsOut=true</Patch>
        <Patch>Functions[SecRequirementCreateWithData].Parameters[requirement].Type=IntPtr</Patch>
        <Patch>Functions[SecRequirementCreateWithData].Parameters[requirement].IsOut=true</Patch>
        <Patch>Functions[SecRequirementCreateWithString].Parameters[requirement].Type=IntPtr</Patch>
        <Patch>Functions[SecRequirementCreateWithString].Parameters[requirement].IsOut=true</Patch>
        <Patch>Functions[SecRequirementCreateWithStringAndErrors].Parameters[errors].Type=NSError</Patch>
        <Patch>Functions[SecRequirementCreateWithStringAndErrors].Parameters[errors].IsOut=true</Patch>
        <Patch>Functions[SecRequirementCreateWithStringAndErrors].Parameters[requirement].Type=IntPtr</Patch>
        <Patch>Functions[SecRequirementCreateWithStringAndErrors].Parameters[requirement].IsOut=true</Patch>
        <Patch>Functions[SecRequirementGetTypeID].Generate=false</Patch>
        <Patch>Functions[SecStaticCodeCheckValidityWithErrors].Parameters[errors].Type=NSError</Patch>
        <Patch>Functions[SecStaticCodeCheckValidityWithErrors].Parameters[errors].IsOut=true</Patch>
        <Patch>Functions[SecStaticCodeCreateWithPath].Parameters[staticCode].Type=IntPtr</Patch>
        <Patch>Functions[SecStaticCodeCreateWithPath].Parameters[staticCode].IsOut=true</Patch>
        <Patch>Functions[SecStaticCodeGetTypeID].Generate=false</Patch>
        <Patch>Enumerations[Signing_Information_Flags].Generate=false</Patch>
        <Patch>Enumerations[Guest_Creation_Flags].Generate=false</Patch>
        <Patch>Enumerations[Code_Signing_Function_Flags].Generate=false</Patch>
        <Patch>Enumerations[Code_Signature_Flags].Generate=false</Patch>
        <Patch>Enumerations[Internal_Requirement_Types].Generate=false</Patch>
        <Patch>Enumerations[Static_Code_Validation_Flags].Generate=false</Patch>
      </Type>
      <Type name="KeyChain">
        <Patch>Functions[SecAccessCopyACLList].Generate=false</Patch>
        <Patch>Functions[SecAccessCopySelectedACLList].Generate=false</Patch>
        <Patch>Functions[SecAccessCreate].Generate=false</Patch>
        <Patch>Functions[SecAccessCreateFromOwnerAndACL].Generate=false</Patch>
        <Patch>Functions[SecAccessGetOwnerAndACL].Generate=false</Patch>
        <Patch>Functions[SecAccessGetTypeID].Generate=false</Patch>
        <Patch>Functions[SecACLCopySimpleContents].Generate=false</Patch>
        <Patch>Functions[SecACLCreateFromSimpleContents].Generate=false</Patch>
        <Patch>Functions[SecACLGetAuthorizations].Generate=false</Patch>
        <Patch>Functions[SecACLGetTypeID].Generate=false</Patch>
        <Patch>Functions[SecACLRemove].Generate=false</Patch>
        <Patch>Functions[SecACLSetAuthorizations].Generate=false</Patch>
        <Patch>Functions[SecACLSetSimpleContents].Generate=false</Patch>
        <Patch>Functions[SecItemAdd].Parameters[result].Type=IntPtr</Patch>
        <Patch>Functions[SecItemAdd].Parameters[result].IsOut=true</Patch>
        <Patch>Functions[SecItemCopyMatching].Parameters[result].Type=IntPtr</Patch>
        <Patch>Functions[SecItemCopyMatching].Parameters[result].IsOut=true</Patch>
        <Patch>Functions[SecKeychainAddGenericPassword].Parameters[serviceName].Type=String</Patch>
        <Patch>Functions[SecKeychainAddGenericPassword].Parameters[accountName].Type=String</Patch>
        <Patch>Functions[SecKeychainAddGenericPassword].Parameters[passwordData].Type=IntPtr</Patch>
        <Patch>Functions[SecKeychainAddGenericPassword].Parameters[itemRef].Type=IntPtr</Patch>
        <Patch>Functions[SecKeychainAddGenericPassword].Parameters[itemRef].IsOut=true</Patch>
        <Patch>Functions[SecKeychainAddInternetPassword].Parameters[serverName].Type=String</Patch>
        <Patch>Functions[SecKeychainAddInternetPassword].Parameters[securityDomain].Type=String</Patch>
        <Patch>Functions[SecKeychainAddInternetPassword].Parameters[accountName].Type=String</Patch>
        <Patch>Functions[SecKeychainAddInternetPassword].Parameters[path].Type=String</Patch>
        <Patch>Functions[SecKeychainAddInternetPassword].Parameters[passwordData].Type=IntPtr</Patch>
        <Patch>Functions[SecKeychainAddInternetPassword].Parameters[itemRef].Type=IntPtr</Patch>
        <Patch>Functions[SecKeychainAddInternetPassword].Parameters[itemRef].IsOut=true</Patch>
        <Patch>Functions[SecKeychainAttributeInfoForItemID].Parameters[info].Type=IntPtr</Patch>
        <Patch>Functions[SecKeychainCopyAccess].Parameters[access].Type=IntPtr</Patch>
        <Patch>Functions[SecKeychainCopyAccess].Parameters[access].IsOut=true</Patch>
        <Patch>Functions[SecKeychainCopyDefault].Parameters[keychain].Type=IntPtr</Patch>
        <Patch>Functions[SecKeychainCopyDefault].Parameters[keychain].IsOut=true</Patch>
        <Patch>Functions[SecKeychainCopyDomainDefault].Parameters[keychain].Type=IntPtr</Patch>
        <Patch>Functions[SecKeychainCopyDomainDefault].Parameters[keychain].IsOut=true</Patch>
        <Patch>Functions[SecKeychainCopyDomainSearchList].Parameters[searchList].Type=NSArray</Patch>
        <Patch>Functions[SecKeychainCopyDomainSearchList].Parameters[searchList].IsOut=true</Patch>
        <Patch>Functions[SecKeychainCopySearchList].Parameters[searchList].Type=NSArray</Patch>
        <Patch>Functions[SecKeychainCopySearchList].Parameters[searchList].IsOut=true</Patch>
        <Patch>Functions[SecKeychainCopySettings].Parameters[outSettings].Type=SecKeychainSettings</Patch>
        <Patch>Functions[SecKeychainCopySettings].Parameters[outSettings].IsOut=true</Patch>
        <Patch>Functions[SecKeychainCreate].Parameters[pathName].Type=String</Patch>
        <Patch>Functions[SecKeychainCreate].Parameters[keychain].Type=IntPtr</Patch>
        <Patch>Functions[SecKeychainCreate].Parameters[keychain].IsOut=true</Patch>
        <Patch>Functions[SecKeychainFindGenericPassword].Parameters[serviceName].Type=String</Patch>
        <Patch>Functions[SecKeychainFindGenericPassword].Parameters[accountName].Type=String</Patch>
        <Patch>Functions[SecKeychainFindGenericPassword].Parameters[passwordLength].Type=uint</Patch>
        <Patch>Functions[SecKeychainFindGenericPassword].Parameters[passwordLength].IsOut=true</Patch>
        <Patch>Functions[SecKeychainFindGenericPassword].Parameters[passwordData].Type=IntPtr</Patch>
        <Patch>Functions[SecKeychainFindGenericPassword].Parameters[passwordData].IsOut=true</Patch>
        <Patch>Functions[SecKeychainFindGenericPassword].Parameters[itemRef].Type=IntPtr</Patch>
        <Patch>Functions[SecKeychainFindGenericPassword].Parameters[itemRef].IsOut=true</Patch>
        <Patch>Functions[SecKeychainFindInternetPassword].Parameters[serverName].Type=String</Patch>
        <Patch>Functions[SecKeychainFindInternetPassword].Parameters[securityDomain].Type=String</Patch>
        <Patch>Functions[SecKeychainFindInternetPassword].Parameters[accountName].Type=String</Patch>
        <Patch>Functions[SecKeychainFindInternetPassword].Parameters[path].Type=String</Patch>
        <Patch>Functions[SecKeychainFindInternetPassword].Parameters[passwordLength].Type=uint</Patch>
        <Patch>Functions[SecKeychainFindInternetPassword].Parameters[passwordLength].IsOut=true</Patch>
        <Patch>Functions[SecKeychainFindInternetPassword].Parameters[passwordData].Type=IntPtr</Patch>
        <Patch>Functions[SecKeychainFindInternetPassword].Parameters[passwordData].IsOut=true</Patch>
        <Patch>Functions[SecKeychainFindInternetPassword].Parameters[itemRef].Type=IntPtr</Patch>
        <Patch>Functions[SecKeychainFindInternetPassword].Parameters[itemRef].IsOut=true</Patch>
        <Patch>Functions[SecKeychainFreeAttributeInfo].Parameters[info].Type=SecKeychainAttributeInfo</Patch>
        <Patch>Functions[SecKeychainFreeAttributeInfo].Parameters[info].IsByRef=true</Patch>
        <Patch>Functions[SecKeychainGetCSPHandle].Generate=false</Patch>
        <Patch>Functions[SecKeychainGetDLDBHandle].Generate=false</Patch>
        <Patch>Functions[SecKeychainGetPath].Parameters[ioPathLength].Type=uint</Patch>
        <Patch>Functions[SecKeychainGetPath].Parameters[ioPathLength].IsOut=true</Patch>
        <Patch>Functions[SecKeychainGetPath].Parameters[pathName].Type=IntPtr</Patch>
        <Patch>Functions[SecKeychainGetPath].Parameters[pathName].IsOut=true</Patch>
        <Patch>Functions[SecKeychainGetPreferenceDomain].Parameters[domain].Type=SecPreferencesDomain</Patch>
        <Patch>Functions[SecKeychainGetPreferenceDomain].Parameters[domain].IsOut=true</Patch>
        <Patch>Functions[SecKeychainGetStatus].Parameters[keychainStatus].Type=SecKeychainStatus</Patch>
        <Patch>Functions[SecKeychainGetStatus].Parameters[keychainStatus].IsOut=true</Patch>
        <Patch>Functions[SecKeychainGetTypeID].Generate=false</Patch>
        <Patch>Functions[SecKeychainGetUserInteractionAllowed].Parameters[state].Type=bool</Patch>
        <Patch>Functions[SecKeychainGetUserInteractionAllowed].Parameters[state].IsOut=true</Patch>
        <Patch>Functions[SecKeychainGetVersion].Parameters[returnVers].Type=uint</Patch>
        <Patch>Functions[SecKeychainGetVersion].Parameters[returnVers].IsOut=true</Patch>

        <Patch>Functions[SecKeychainItemCopyAccess].Generate=false</Patch>
        <Patch>Functions[SecKeychainItemCopyAccess].Parameters[access].IsOut=true</Patch>
        <Patch>Functions[SecKeychainItemCopyAttributesAndData].Parameters[info].Type=SecKeychainAttributeInfo</Patch>
        <Patch>Functions[SecKeychainItemCopyAttributesAndData].Parameters[info].IsOut=true</Patch>
        <Patch>Functions[SecKeychainItemCopyAttributesAndData].Parameters[itemClass].Type=SecItemClass</Patch>
        <Patch>Functions[SecKeychainItemCopyAttributesAndData].Parameters[itemClass].IsOut=true</Patch>
        <Patch>Functions[SecKeychainItemCopyAttributesAndData].Parameters[attrList].Type=IntPtr</Patch>
        <Patch>Functions[SecKeychainItemCopyAttributesAndData].Parameters[attrList].IsOut=true</Patch>
        <Patch>Functions[SecKeychainItemCopyAttributesAndData].Parameters[length].Type=uint</Patch>
        <Patch>Functions[SecKeychainItemCopyAttributesAndData].Parameters[length].IsOut=true</Patch>
        <Patch>Functions[SecKeychainItemCopyAttributesAndData].Parameters[outData].Type=IntPtr</Patch>
        <Patch>Functions[SecKeychainItemCopyAttributesAndData].Parameters[outData].IsOut=true</Patch>
        <Patch>Functions[SecKeychainItemCopyContent].Parameters[itemClass].Type=SecItemClass</Patch>
        <Patch>Functions[SecKeychainItemCopyContent].Parameters[itemClass].IsOut=true</Patch>
        <Patch>Functions[SecKeychainItemCopyContent].Parameters[attrList].Type=IntPtr</Patch>
        <Patch>Functions[SecKeychainItemCopyContent].Parameters[attrList].IsOut=true</Patch>
        <Patch>Functions[SecKeychainItemCopyContent].Parameters[length].Type=uint</Patch>
        <Patch>Functions[SecKeychainItemCopyContent].Parameters[length].IsOut=true</Patch>
        <Patch>Functions[SecKeychainItemCopyContent].Parameters[outData].Type=IntPtr</Patch>
        <Patch>Functions[SecKeychainItemCopyContent].Parameters[outData].IsOut=true</Patch>
        <Patch>Functions[SecKeychainItemCopyFromPersistentReference].Parameters[itemRef].Type=IntPtr</Patch>
        <Patch>Functions[SecKeychainItemCopyFromPersistentReference].Parameters[itemRef].IsOut=true</Patch>
        <Patch>Functions[SecKeychainItemCopyKeychain].Parameters[keychainRef].Type=IntPtr</Patch>
        <Patch>Functions[SecKeychainItemCopyKeychain].Parameters[keychainRef].IsOut=true</Patch>
        <Patch>Functions[SecKeychainItemCreateCopy].Parameters[itemCopy].Type=IntPtr</Patch>
        <Patch>Functions[SecKeychainItemCreateCopy].Parameters[itemCopy].IsOut=true</Patch>
        <Patch>Functions[SecKeychainItemCreateFromContent].Parameters[attrList].Type=IntPtr</Patch>
        <Patch>Functions[SecKeychainItemCreateFromContent].Parameters[attrList].IsOut=true</Patch>
        <Patch>Functions[SecKeychainItemCreateFromContent].Parameters[itemRef].Type=IntPtr</Patch>
        <Patch>Functions[SecKeychainItemCreateFromContent].Parameters[itemRef].IsOut=true</Patch>
        <Patch>Functions[SecKeychainItemCreatePersistentReference].Parameters[persistentItemRef].Type=NSData</Patch>
        <Patch>Functions[SecKeychainItemCreatePersistentReference].Parameters[persistentItemRef].IsOut=true</Patch>
        <Patch>Functions[SecKeychainItemExport].Parameters[keyParams].Type=SecKeyImportExportParameters</Patch>
        <Patch>Functions[SecKeychainItemExport].Parameters[keyParams].IsOut=true</Patch>
        <Patch>Functions[SecKeychainItemExport].Parameters[exportedData].Type=NSData</Patch>
        <Patch>Functions[SecKeychainItemExport].Parameters[exportedData].IsOut=true</Patch>
        <Patch>Functions[SecKeychainItemExport].Generate=false</Patch>
        <Patch>Functions[SecKeychainItemFreeAttributesAndData].Parameters[attrList].Type=SecKeychainAttributeList</Patch>
        <Patch>Functions[SecKeychainItemFreeAttributesAndData].Parameters[attrList].IsByRef=true</Patch>
        <Patch>Functions[SecKeychainItemFreeContent].Parameters[attrList].Type=SecKeychainAttributeList</Patch>
        <Patch>Functions[SecKeychainItemFreeContent].Parameters[attrList].IsByRef=true</Patch>
        <Patch>Functions[SecKeychainItemGetDLDBHandle].Generate=false</Patch>
        <Patch>Functions[SecKeychainItemGetTypeID].Generate=false</Patch>
        <Patch>Functions[SecKeychainItemGetUniqueRecordID].Generate=false</Patch>
        <Patch>Functions[SecKeychainItemImport].Generate=false</Patch>
        <Patch>Functions[SecKeychainItemModifyAttributesAndData].Generate=false</Patch>
        <Patch>Functions[SecKeychainItemModifyContent].Generate=false</Patch>
        <Patch>Functions[SecKeychainItemSetAccess].Generate=false</Patch>
        <Patch>Functions[SecKeychainLockAll].Parameters[d].Generate=false</Patch>
        <Patch>Functions[SecKeychainOpen].Parameters[pathName].Type=String</Patch>
        <Patch>Functions[SecKeychainOpen].Parameters[keychain].Type=IntPtr</Patch>
        <Patch>Functions[SecKeychainOpen].Parameters[keychain].IsOut=true</Patch>
        <Patch>Functions[SecKeychainSearchCopyNext].Parameters[itemRef].Type=IntPtr</Patch>
        <Patch>Functions[SecKeychainSearchCopyNext].Parameters[itemRef].IsOut=true</Patch>
        <Patch>Functions[SecKeychainSearchCreateFromAttributes].Parameters[attrList].Type=SecKeychainAttributeList</Patch>
        <Patch>Functions[SecKeychainSearchCreateFromAttributes].Parameters[attrList].IsByRef=true</Patch>
        <Patch>Functions[SecKeychainSearchCreateFromAttributes].Parameters[searchRef].Type=IntPtr</Patch>
        <Patch>Functions[SecKeychainSearchCreateFromAttributes].Parameters[searchRef].IsOut=true</Patch>
        <Patch>Functions[SecKeychainSearchGetTypeID].Generate=false</Patch>
        <Patch>Functions[SecKeychainSetSettings].Parameters[newSettings].Type=SecKeychainSettings</Patch>
        <Patch>Functions[SecKeychainSetSettings].Parameters[newSettings].IsByRef=true</Patch>
        <Patch>Functions[SecTrustedApplicationCopyData].Generate=false</Patch>
        <Patch>Functions[SecTrustedApplicationCreateFromPath].Generate=false</Patch>
        <Patch>Functions[SecTrustedApplicationGetTypeID].Generate=false</Patch>
        <Patch>Functions[SecTrustedApplicationSetData].Generate=false</Patch>

        <Patch>Enumerations[Authorization_Tag_Type_Constants].Name=CSSM_ACL_AUTHORIZATION_TAG</Patch>
        <Patch>Enumerations[CSSM_ACL_AUTHORIZATION_TAG].BaseType=int</Patch>
        <Patch>Enumerations[CSSM_ACL_AUTHORIZATION_TAG].Generate=false</Patch>
        <Patch>Enumerations[Keychain_Authentication_Type_Constants].Name=SecAuthenticationType</Patch>
        <Patch>Enumerations[SecAuthenticationType].BaseType=uint</Patch>
        <Patch>Enumerations[Keychain_Event_Constants].Name=SecKeychainEvent</Patch>
        <Patch>Enumerations[SecKeychainEvent].BaseType=uint</Patch>
        <Patch>Enumerations[Keychain_Event_Mask_Constants].Name=SecKeychainEventMask</Patch>
        <Patch>Enumerations[SecKeychainEventMask].BaseType=uint</Patch>
        <Patch>Enumerations[Keychain_Item_Attribute_Constants].Name=SecItemAttr</Patch>
        <Patch>Enumerations[SecItemAttr].BaseType=uint</Patch>
        <Patch>Enumerations[Keychain_Item_Attribute_Constants_For_Keys].Name=SecKeyItemAttr</Patch>
        <Patch>Enumerations[SecKeyItemAttr].BaseType=uint</Patch>
        <Patch>Enumerations[Keychain_Item_Class_Constants].Name=SecItemClass</Patch>
        <Patch>Enumerations[SecItemClass].BaseType=uint</Patch>
        <Patch>Enumerations[SecItemClass].Values[kSecCertificateItemClass].Value=0x80000000 + 0x1000</Patch>
        <Patch>Enumerations[SecItemClass].Values[kSecPublicKeyItemClass].Value=0x80000000 + 0x0005</Patch>
        <Patch>Enumerations[SecItemClass].Values[kSecPrivateKeyItemClass].Value=0x80000000 + 0x0006</Patch>
        <Patch>Enumerations[SecItemClass].Values[kSecSymmetricKeyItemClass].Value=0x80000000 + 0x0007</Patch>
        <Patch>Enumerations[SecPreferencesDomain].BaseType=int</Patch>
        <Patch>Enumerations[Keychain_Protocol_Type_Constants].Name=SecProtocolType</Patch>
        <Patch>Enumerations[SecProtocolType].BaseType=uint</Patch>
        <Patch>Enumerations[Keychain_Status_Masks].Name=SecKeychainStatus</Patch>
        <Patch>Enumerations[SecKeychainStatus].BaseType=uint</Patch>

        <Replace type="Xhtml">
          <Source><![CDATA[//<!--a-->not<!--/a--><!--a-->supported<!--/a-->]]></Source>
          <With><![CDATA[<!-- -->]]></With>
        </Replace>
        <Replace type="Xhtml">
          <Source><![CDATA[/* Apple-<!--a-->defined<!--/a--><!--a-->ACL<!--/a--><!--a-->authorization<!--/a--><!--a-->tags<!--/a--> */]]></Source>
          <With><![CDATA[<!-- -->]]></With>
        </Replace>
        <Replace type="Xhtml">
          <Source><![CDATA[/* <!--a-->Record<!--/a--><!--a-->Type<!--/a--><!--a-->defined<!--/a--><!--a-->in<!--/a--><!--a-->The<!--/a--><!--a-->Open<!--/a--><!--a-->Group<!--/a--><!--a-->Application<!--/a--><!--a-->Name<!--/a--><!--a-->Space<!--/a-->  */]]></Source>
          <With><![CDATA[<!-- -->]]></With>
        </Replace>
        <Replace type="Xhtml">
          <Source><![CDATA[/* cssmtype.<!--a-->h<!--/a--> */]]></Source>
          <With><![CDATA[<!-- -->]]></With>
        </Replace>
        <Replace type="Xhtml">
          <Source><![CDATA[<!--a-->AUTH_TYPE_FIX_<!--/a--> (]]></Source>
          <With><![CDATA[<!-- -->]]></With>
        </Replace>
        <Replace type="Xhtml">
          <Source><![CDATA['),]]></Source>
          <With><![CDATA[',]]></With>
        </Replace>
        <Replace type="Xhtml">
          <Source><![CDATA[ 0 )]]></Source>
          <With><![CDATA[0]]></With>
        </Replace>

        <Replace type="Generated">
          <Source><![CDATA[ObjectiveCRuntime.GetInstance<SecKeychainAttributeInfo>(Marshal.ReadIntPtr(__local1));]]></Source>
          <With><![CDATA[(SecKeychainAttributeInfo) Marshal.PtrToStructure(__local1, typeof(SecKeychainAttributeInfo));]]></With>
        </Replace>
        <Replace type="Generated">
          <Source><![CDATA[ObjectiveCRuntime.GetInstance<SecPreferencesDomain>(Marshal.ReadIntPtr(__local1));]]></Source>
          <With><![CDATA[(SecPreferencesDomain) Marshal.ReadInt32(__local1);]]></With>
        </Replace>
        <Replace type="Generated">
          <Source><![CDATA[ObjectiveCRuntime.GetInstance<SecKeychainStatus>(Marshal.ReadIntPtr(__local1));]]></Source>
          <With><![CDATA[(SecKeychainStatus) Marshal.ReadInt32(__local1);]]></With>
        </Replace>
        <Replace type="Generated">
          <Source><![CDATA[ObjectiveCRuntime.GetInstance<SecItemClass>(Marshal.ReadIntPtr(__local1));]]></Source>
          <With><![CDATA[(SecItemClass) Marshal.ReadInt32(__local1);]]></With>
        </Replace>
        <Replace type="Generated">
          <Source><![CDATA[ObjectiveCRuntime.GetInstance<SecItemClass>(Marshal.ReadIntPtr(__local2));]]></Source>
          <With><![CDATA[(SecItemClass) Marshal.ReadInt32(__local2);]]></With>
        </Replace>
        <Replace type="Generated">
          <Source><![CDATA[ObjectiveCRuntime.GetInstance<SecKeychainAttributeList>(Marshal.ReadIntPtr(__local1));]]></Source>
          <With><![CDATA[(SecKeychainAttributeList) Marshal.PtrToStructure(__local1, typeof(SecKeychainAttributeList));]]></With>
        </Replace>
        <Replace type="Generated">
          <Source><![CDATA[ObjectiveCRuntime.GetInstance<SecKeychainSettings>(Marshal.ReadIntPtr(__local1));]]></Source>
          <With><![CDATA[(SecKeychainSettings) Marshal.PtrToStructure(__local1, typeof(SecKeychainSettings));]]></With>
        </Replace>
        <Replace type="Generated">
          <Source><![CDATA[ = 1 << kSec]]></Source>
          <With><![CDATA[ = 1U << (int) SecKeychainEvent.kSec]]></With>
        </Replace>
      </Type>
    </Types>
    <Enumerations>
      <Enumeration name="SecCSFlags">
      </Enumeration>
    </Enumerations>
  </Framework>
  <Framework name="SecurityFoundation" usings="Foundation,Security" assembly="Monobjc.SecurityFoundation">
    <Classes>
      <Class name="SFAuthorization">
        <Patch>Methods[AuthorizationWithFlagsRightsEnvironment].ReturnType=SFAuthorization</Patch>
        <Patch>Methods[AuthorizationWithFlagsRightsEnvironment].Parameters[rights].Type=IntPtr</Patch>
        <Patch>Methods[AuthorizationWithFlagsRightsEnvironment].Parameters[environment].Type=IntPtr</Patch>
        <Patch>Methods[InitWithFlagsRightsEnvironment].Parameters[rights].Type=IntPtr</Patch>
        <Patch>Methods[InitWithFlagsRightsEnvironment].Parameters[environment].Type=IntPtr</Patch>
        <Patch>Methods[ObtainWithRightsFlagsEnvironmentAuthorizedRightsError].Parameters[rights].Type=IntPtr</Patch>
        <Patch>Methods[ObtainWithRightsFlagsEnvironmentAuthorizedRightsError].Parameters[environment].Type=IntPtr</Patch>
        <Patch>Methods[ObtainWithRightsFlagsEnvironmentAuthorizedRightsError].Parameters[authorizedRights].Type=IntPtr</Patch>
        <Patch>Properties[Authorization].Type=SFAuthorization</Patch>
        <Patch>Properties[Authorization].Getter.ReturnType=SFAuthorization</Patch>
      </Class>
      
      <Class name="SFAuthorization.Deprecated">
        <Patch>AdditionFor=SFAuthorization</Patch>
        <Patch>Methods[PermitWithRightsFlagsEnvironmentAuthorizedRights].Parameters[rights].Type=IntPtr</Patch>
        <Patch>Methods[PermitWithRightsFlagsEnvironmentAuthorizedRights].Parameters[environment].Type=IntPtr</Patch>
        <Patch>Methods[PermitWithRightsFlagsEnvironmentAuthorizedRights].Parameters[authorizedRights].Type=IntPtr</Patch>
      </Class>
    </Classes>
  </Framework>
  <Framework name="SecurityInterface" usings="Foundation,AppKit,Security,SecurityFoundation" assembly="Monobjc.SecurityInterface">
    <Types>
      <Type name="SecurityInterfaceFramework.Constants">
      </Type>
      <Type name="SecurityInterfaceFramework.DataTypes">
        <Patch>Enumerations[SFAuthorizationViewState].BaseType=uint</Patch>
      </Type>
    </Types>
    <Classes>
      <Class name="SFAuthorizationPluginView">
        <Patch>Methods[InitWithCallbacksAndEngineRef].Parameters[callbacks].Type=IntPtr</Patch>
        <Patch>Properties[Callbacks].Type=IntPtr</Patch>
        <Patch>Properties[Callbacks].Getter.ReturnType=IntPtr</Patch>
      </Class>
      <Class name="SFAuthorizationView">
        <Patch>Properties[AuthorizationRights].Type=IntPtr</Patch>
        <Patch>Properties[AuthorizationRights].Getter.ReturnType=IntPtr</Patch>
        <Patch>Properties[Delegate].Type=Id</Patch>
      </Class>
      <Class name="SFCertificatePanel">
      </Class>
      <Class name="SFCertificateTrustPanel">
      </Class>
      <Class name="SFCertificateView">
      </Class>
      <Class name="SFChooseIdentityPanel">
      </Class>
      <Class name="SFKeychainSavePanel">
        <Patch>Methods[BeginSheetForDirectoryFileModalForWindowModalDelegateDidEndSelectorContextInfo].Generate=false</Patch>
        <Patch>Methods[RunModalForDirectoryFile].Generate=false</Patch>
      </Class>
      <Class name="SFKeychainSettingsPanel">
        <Patch>Methods[BeginSheetForWindowModalDelegateDidEndSelectorContextInfoSettingsKeychain].Parameters[settings].Type=IntPtr</Patch>
        <Patch>Methods[RunModalForSettingsKeychain].Parameters[settings].Type=IntPtr</Patch>
      </Class>
    </Classes>
    <Protocols>
      <Protocol name="SFAuthorizationViewDelegate">
        <Patch>DelegateFor=SFAuthorizationView</Patch>
        <Patch>DelegateProperty=Delegate</Patch>
      </Protocol>
      <Protocol name="SFCertificatePanelDelegate">
        <Patch>DelegateFor=SFCertificatePanel</Patch>
        <Patch>DelegateProperty=Delegate</Patch>
      </Protocol>
      <Protocol name="SFChooseIdentityPanelDelegate">
        <Patch>DelegateFor=SFChooseIdentityPanel</Patch>
        <Patch>DelegateProperty=Delegate</Patch>
      </Protocol>
    </Protocols>
  </Framework>
  <Framework name="StoreKit" usings="Foundation" assembly="Monobjc.StoreKit">
		<Types>
			<Type name="StoreKitFramework.Constants">
				<Patch>Enumerations[Store_Kit_Errors].Name=StoreKitError</Patch>
				<Patch>Enumerations[StoreKitError].BaseType=int</Patch>
			</Type>
		</Types>
		<Classes>
			<Class name="SKMutablePayment">
        <Replace type="Generated">
          <Source><![CDATA[public virtual NSString ProductIdentifier]]></Source>
          <With><![CDATA[public new NSString ProductIdentifier]]></With>
        </Replace>
        <Replace type="Generated">
          <Source><![CDATA[public virtual NSInteger Quantity]]></Source>
          <With><![CDATA[public new NSInteger Quantity]]></With>
        </Replace>
        <Replace type="Generated">
          <Source><![CDATA[public virtual NSData RequestData]]></Source>
          <With><![CDATA[public new NSData RequestData]]></With>
        </Replace>
			</Class>
			<Class name="SKPayment">
		        <Patch>Methods[PaymentWithProduct].ReturnType=SKPayment</Patch>
		        <Patch>Methods[PaymentWithProduct].CopyInDescendants=true</Patch>
			</Class>
			<Class name="SKPaymentQueue">
		        <Patch>Methods[AddTransactionObserver].Parameters[observer].Type=Id</Patch>
		        <Patch>Methods[RemoveTransactionObserver].Parameters[observer].Type=Id</Patch>
			</Class>
			<Class name="SKPaymentTransaction">
			</Class>
			<Class name="SKProduct">
			</Class>
			<Class name="SKProductsRequest">
				<Patch>Properties[Delegate].Generate=false</Patch>
			</Class>
			<Class name="SKProductsResponse">
			</Class>
			<Class name="SKRequest">
			</Class>
		</Classes>
		<Protocols>
			<Protocol name="SKPaymentTransactionObserver">
			</Protocol>
			<Protocol name="SKProductsRequestDelegate">
				<Patch>BaseType=SKRequestDelegate</Patch>
			</Protocol>
			<Protocol name="SKRequestDelegate">
			</Protocol>
		</Protocols>
  </Framework>
  <Framework name="WebKit" usings="Foundation,AppKit,WebKit.DOM" assembly="Monobjc.WebKit">
    <Types>
      <Type name="WebKitFramework.Constants">
        <Patch>Enumerations[WebKit_Policy_Errors].Name=WebKitPolicyError</Patch>
        <Patch>Enumerations[WebKitPolicyError].BaseType=NSInteger</Patch>
        <Patch>Enumerations[WebKit_Plug_in_and_Java_Errors].Name=WebKitPlugInError</Patch>
        <Patch>Enumerations[WebKitPlugInError].BaseType=NSInteger</Patch>
      </Type>
    </Types>
    <Classes>
      <Class name="WebArchive">
      </Class>
      <Class name="WebBackForwardList">
      </Class>
      <Class name="WebDataSource">
      </Class>
      <Class name="WebDownload">
      </Class>
      <Class name="WebFrame">
        <Patch>Properties[GlobalContext].Generate=false</Patch>
      </Class>
      <Class name="WebFrameView">
        <Patch>Properties[DocumentView].Type=IWebDocumentView</Patch>
        <Patch>Properties[DocumentView].Getter.ReturnType=IWebDocumentView</Patch>
      </Class>
      <Class name="WebHistory">
        <Patch>Methods[OrderedItemsLastVisitedOnDay].Generate=false</Patch>
      </Class>
      <Class name="WebHistoryItem">
      </Class>
      <Class name="WebPreferences">
      </Class>
      <Class name="WebResource">
      </Class>
      <Class name="WebScriptObject">
        <Patch>Properties[JSObject].Generate=false</Patch>
      </Class>
      <Class name="WebUndefined">
      </Class>
      <Class name="WebView">
        <!--<Patch>Methods[ApplyStyle].Parameters[style].Type=IntPtr</Patch>
        <Patch>Methods[ComputedStyleForElementPseudoElement].Parameters[element].Type=IntPtr</Patch>
        <Patch>Methods[ComputedStyleForElementPseudoElement].ReturnType=IntPtr</Patch>
        <Patch>Methods[EditableDOMRangeForPoint].ReturnType=IntPtr</Patch>
        <Patch>Methods[ReplaceSelectionWithNode].Parameters[node].Type=IntPtr</Patch>
        <Patch>Methods[SetSelectedDOMRangeAffinity].Parameters[range].Type=IntPtr</Patch>
        <Patch>Methods[StyleDeclarationWithText].ReturnType=IntPtr</Patch>
        <Patch>Properties[MainFrameDocument].Type=IntPtr</Patch>
        <Patch>Properties[MainFrameDocument].Getter.ReturnType=IntPtr</Patch>
        <Patch>Properties[SelectedDOMRange].Type=IntPtr</Patch>
        <Patch>Properties[SelectedDOMRange].Getter.ReturnType=IntPtr</Patch>
        <Patch>Properties[TypingStyle].Type=IntPtr</Patch>
        <Patch>Properties[TypingStyle].Getter.ReturnType=IntPtr</Patch>-->
      </Class>

      <Class name="WebBackForwardList.Deprecated">
        <Patch>AdditionFor=WebBackForwardList</Patch>
      </Class>
    </Classes>
    <Protocols>
      <Protocol name="WebDocumentRepresentation">
      </Protocol>
      <Protocol name="WebDocumentSearching">
      </Protocol>
      <Protocol name="WebDocumentText">
      </Protocol>
      <Protocol name="WebDocumentView">
      </Protocol>
      <Protocol name="WebDownloadDelegate">
        <Patch>BaseType=NSURLDownloadDelegate</Patch>
        <Patch>DelegateFor=WebDownload</Patch>
      </Protocol>
      <Protocol name="WebEditingDelegate">
        <Patch>DelegateFor=WebView</Patch>
        <Patch>DelegateProperty=EditingDelegate</Patch>
        <!--<Patch>Methods[WebViewShouldApplyStyleToElementsInDOMRange].Parameters[style].Type=IntPtr</Patch>
        <Patch>Methods[WebViewShouldApplyStyleToElementsInDOMRange].Parameters[range].Type=IntPtr</Patch>
        <Patch>Methods[WebViewShouldBeginEditingInDOMRange].Parameters[range].Type=IntPtr</Patch>
        <Patch>Methods[WebViewShouldChangeSelectedDOMRangeToDOMRangeAffinityStillSelecting].Parameters[currentRange].Type=IntPtr</Patch>
        <Patch>Methods[WebViewShouldChangeSelectedDOMRangeToDOMRangeAffinityStillSelecting].Parameters[proposedRange].Type=IntPtr</Patch>
        <Patch>Methods[WebViewShouldChangeTypingStyleToStyle].Parameters[currentStyle].Type=IntPtr</Patch>
        <Patch>Methods[WebViewShouldChangeTypingStyleToStyle].Parameters[proposedStyle].Type=IntPtr</Patch>
        <Patch>Methods[WebViewShouldDeleteDOMRange].Parameters[range].Type=IntPtr</Patch>
        <Patch>Methods[WebViewShouldEndEditingInDOMRange].Parameters[range].Type=IntPtr</Patch>
        <Patch>Methods[WebViewShouldInsertNodeReplacingDOMRangeGivenAction].Parameters[node].Type=IntPtr</Patch>
        <Patch>Methods[WebViewShouldInsertNodeReplacingDOMRangeGivenAction].Parameters[range].Type=IntPtr</Patch>
        <Patch>Methods[WebViewShouldInsertTextReplacingDOMRangeGivenAction].Parameters[range].Type=IntPtr</Patch>-->
        <Patch>Enumerations[WebViewInsertAction].BaseType=int</Patch>
      </Protocol>
      <Protocol name="WebFrameLoadDelegate">
        <Patch>DelegateFor=WebView</Patch>
        <Patch>DelegateProperty=FrameLoadDelegate</Patch>
      </Protocol>
      <Protocol name="WebJavaPlugIn">
      </Protocol>
      <Protocol name="WebOpenPanelResultListener">
      </Protocol>
      <Protocol name="WebPlugIn">
      </Protocol>
      <Protocol name="WebPlugInContainer">
      </Protocol>
      <Protocol name="WebPlugInViewFactory">
      </Protocol>
      <Protocol name="WebPolicyDecisionListener">
      </Protocol>
      <Protocol name="WebPolicyDelegate">
        <Patch>DelegateFor=WebView</Patch>
        <Patch>DelegateProperty=PolicyDelegate</Patch>
        <Patch>Enumerations[WebNavigationType].BaseType=int</Patch>
      </Protocol>
      <Protocol name="WebResourceLoadDelegate">
        <Patch>DelegateFor=WebView</Patch>
        <Patch>DelegateProperty=ResourceLoadDelegate</Patch>
      </Protocol>
      <Protocol name="WebScripting">
      </Protocol>
      <Protocol name="WebUIDelegate">
        <Patch>DelegateFor=WebView</Patch>
        <Patch>DelegateProperty=UIDelegate</Patch>
        <Patch>Enumerations[Menu_Item_Tags].Name=WebMenuItemTag</Patch>
        <Patch>Enumerations[WebMenuItemTag].BaseType=int</Patch>
        <Patch>Enumerations[WebDragDestinationAction].BaseType=uint</Patch>
        <Patch>Enumerations[WebDragDestinationAction].Values[WebDragDestinationActionAny].Value=UInt32.MaxValue</Patch>
        <Patch>Enumerations[WebDragSourceAction].BaseType=uint</Patch>
        <Patch>Enumerations[WebDragSourceAction].Values[WebDragSourceActionAny].Value=UInt32.MaxValue</Patch>
      </Protocol>

      <Protocol name="WebFrameLoadDelegate.Deprecated"></Protocol>
      <Protocol name="WebUIDelegate.Deprecated"></Protocol>

    </Protocols>
  </Framework>

  <Framework name="JavaScriptCore" usings="Foundation,AppKit,WebKit" assembly="Monobjc.WebKit">
    <Classes>
      <Class name="JavaScript_Definitions">
        <Patch>AdditionFor=JavaScript</Patch>
      </Class>
      <Class name="JavaScriptCore_Definitions">
        <Patch>AdditionFor=JavaScriptCore</Patch>
      </Class>
      <Class name="JSBase_Definitions">
        <Patch>AdditionFor=JSBase</Patch>
      </Class>
      <Class name="JSContextRef_Definitions">
        <Patch>AdditionFor=JSContextRef</Patch>
      </Class>
      <Class name="JSObjectRef_Definitions">
        <Patch>AdditionFor=JSObjectRef</Patch>
      </Class>
      <Class name="JSStringRef_Definitions">
        <Patch>AdditionFor=JSStringRef</Patch>
      </Class>
      <Class name="JSStringRefCF_Definitions">
        <Patch>AdditionFor=JSStringRefCF</Patch>
      </Class>
      <Class name="JSValueRef_Definitions">
        <Patch>AdditionFor=JSValueRef</Patch>
      </Class>
    </Classes>
  </Framework>

  <Framework name="WebKit.DOM" usings="Foundation,AppKit,WebKit" assembly="Monobjc.WebKit">
    <Classes>
      <Class name="DOMAbstractView" />
      <Class name="DOMAttr" />
      <Class name="DOMBlob" />
      <Class name="DOMCDATASection" />
      <Class name="DOMCharacterData" />
      <Class name="DOMCharacterData_DOMCharacterDataDeprecated">
        <Patch>AdditionFor=DOMCharacterData</Patch>
      </Class>
      <Class name="DOMComment" />
      <Class name="DOMCounter" />
      <Class name="DOMCSSCharsetRule" />
      <Class name="DOMCSSFontFaceRule" />
      <Class name="DOMCSSImportRule" />
      <Class name="DOMCSSMediaRule" />
      <Class name="DOMCSSMediaRule_DOMCSSMediaRuleDeprecated">
        <Patch>AdditionFor=DOMCSSMediaRule</Patch>
      </Class>
      <Class name="DOMCSSPageRule" />
      <Class name="DOMCSSPrimitiveValue" />
      <Class name="DOMCSSPrimitiveValue_DOMCSSPrimitiveValueDeprecated">
        <Patch>AdditionFor=DOMCSSPrimitiveValue</Patch>
      </Class>
      <Class name="DOMCSSRule" />
      <Class name="DOMCSSRuleList" />
      <Class name="DOMCSSStyleDeclaration" />
      <Class name="DOMCSSStyleDeclaration_DOMCSS2Properties">
        <Patch>AdditionFor=DOMCSSStyleDeclaration</Patch>
      </Class>
      <Class name="DOMCSSStyleDeclaration_DOMCSSStyleDeclarationDeprecated">
        <Patch>AdditionFor=DOMCSSStyleDeclaration</Patch>
      </Class>
      <Class name="DOMCSSStyleRule" />
      <Class name="DOMCSSStyleSheet" />
      <Class name="DOMCSSStyleSheet_DOMCSSStyleSheetDeprecated">
        <Patch>AdditionFor=DOMCSSStyleSheet</Patch>
      </Class>
      <Class name="DOMCSSUnknownRule" />
      <Class name="DOMCSSValue" />
      <Class name="DOMCSSValueList" />
      <Class name="DOMDocument" />
      <Class name="DOMDocument_DOMDocumentDeprecated">
        <Patch>AdditionFor=DOMDocument</Patch>
      </Class>
      <Class name="DOMDocument_WebDOMDocumentOperations">
        <Patch>AdditionFor=DOMDocument</Patch>
      </Class>
      <Class name="DOMDocumentFragment" />
      <Class name="DOMDocumentType" />
      <Class name="DOMElement" />
      <Class name="DOMElement_DOMElementAppKitExtensions">
        <Patch>AdditionFor=DOMElement</Patch>
      </Class>
      <Class name="DOMElement_DOMElementDeprecated">
        <Patch>AdditionFor=DOMElement</Patch>
      </Class>
      <Class name="DOMEntity" />
      <Class name="DOMEntityReference" />
      <Class name="DOMEvent" />
      <Class name="DOMEvent_DOMEventDeprecated">
        <Patch>AdditionFor=DOMEvent</Patch>
      </Class>
      <Class name="DOMFile" />
      <Class name="DOMFileList" />
      <Class name="DOMHTMLAnchorElement" />
      <Class name="DOMHTMLAppletElement" />
      <Class name="DOMHTMLAreaElement" />
      <Class name="DOMHTMLBaseElement" />
      <Class name="DOMHTMLBaseFontElement" />
      <Class name="DOMHTMLBodyElement" />
      <Class name="DOMHTMLBRElement" />
      <Class name="DOMHTMLButtonElement" />
      <Class name="DOMHTMLCollection" />
      <Class name="DOMHTMLDirectoryElement" />
      <Class name="DOMHTMLDivElement" />
      <Class name="DOMHTMLDListElement" />
      <Class name="DOMHTMLDocument" />
      <Class name="DOMHTMLDocument_DOMHTMLDocumentExtensions">
        <Patch>AdditionFor=DOMHTMLDocument</Patch>
      </Class>
      <Class name="DOMHTMLElement">
        <Replace type="Generated">
          <Source><![CDATA[public virtual NSString ClassName]]></Source>
          <With><![CDATA[public new NSString ClassName]]></With>
        </Replace>
        <Replace type="Generated">
          <Source><![CDATA[public virtual NSString InnerText]]></Source>
          <With><![CDATA[public new NSString InnerText]]></With>
        </Replace>
      </Class>
      <Class name="DOMHTMLEmbedElement" />
      <Class name="DOMHTMLFieldSetElement" />
      <Class name="DOMHTMLFontElement" />
      <Class name="DOMHTMLFormElement" />
      <Class name="DOMHTMLFrameElement" />
      <Class name="DOMHTMLFrameElement_WebDOMHTMLFrameElementOperations">
        <Patch>AdditionFor=DOMHTMLFrameElement</Patch>
      </Class>
      <Class name="DOMHTMLFrameSetElement" />
      <Class name="DOMHTMLHeadElement" />
      <Class name="DOMHTMLHeadingElement" />
      <Class name="DOMHTMLHRElement" />
      <Class name="DOMHTMLHtmlElement">
        <Replace type="Generated">
          <Source><![CDATA[public virtual NSString Version]]></Source>
          <With><![CDATA[public new NSString Version]]></With>
        </Replace>
      </Class>
      <Class name="DOMHTMLIFrameElement" />
      <Class name="DOMHTMLIFrameElement_WebDOMHTMLIFrameElementOperations">
        <Patch>AdditionFor=DOMHTMLIFrameElement</Patch>
      </Class>
      <Class name="DOMHTMLImageElement" />
      <Class name="DOMHTMLInputElement" />
      <Class name="DOMHTMLIsIndexElement" />
      <Class name="DOMHTMLLabelElement" />
      <Class name="DOMHTMLLegendElement" />
      <Class name="DOMHTMLLIElement" />
      <Class name="DOMHTMLLinkElement">
        <Patch>Properties[Sheet].Generate=false</Patch>
      </Class>
      <Class name="DOMHTMLMapElement" />
      <Class name="DOMHTMLMarqueeElement" />
      <Class name="DOMHTMLMenuElement" />
      <Class name="DOMHTMLMetaElement" />
      <Class name="DOMHTMLModElement" />
      <Class name="DOMHTMLObjectElement" />
      <Class name="DOMHTMLObjectElement_WebDOMHTMLObjectElementOperations">
        <Patch>AdditionFor=DOMHTMLObjectElement</Patch>
      </Class>
      <Class name="DOMHTMLOListElement" />
      <Class name="DOMHTMLOptGroupElement" />
      <Class name="DOMHTMLOptionElement" />
      <Class name="DOMHTMLOptionsCollection" />
      <Class name="DOMHTMLParagraphElement" />
      <Class name="DOMHTMLParamElement" />
      <Class name="DOMHTMLPreElement" />
      <Class name="DOMHTMLQuoteElement" />
      <Class name="DOMHTMLScriptElement" />
      <Class name="DOMHTMLSelectElement" />
      <Class name="DOMHTMLSelectElement_DOMHTMLSelectElementDeprecated">
        <Patch>AdditionFor=DOMHTMLSelectElement</Patch>
      </Class>
      <Class name="DOMHTMLStyleElement">
        <Patch>Properties[Sheet].Generate=false</Patch>
      </Class>
      <Class name="DOMHTMLTableCaptionElement" />
      <Class name="DOMHTMLTableCellElement" />
      <Class name="DOMHTMLTableColElement" />
      <Class name="DOMHTMLTableElement" />
      <Class name="DOMHTMLTableRowElement" />
      <Class name="DOMHTMLTableSectionElement" />
      <Class name="DOMHTMLTextAreaElement" />
      <Class name="DOMHTMLTitleElement" />
      <Class name="DOMHTMLUListElement" />
      <Class name="DOMImplementation" />
      <Class name="DOMImplementation_DOMImplementationDeprecated">
        <Patch>AdditionFor=DOMImplementation</Patch>
      </Class>
      <Class name="DOMKeyboardEvent" />
      <Class name="DOMMediaList" />
      <Class name="DOMMouseEvent" />
      <Class name="DOMMouseEvent_DOMMouseEventDeprecated">
        <Patch>AdditionFor=DOMMouseEvent</Patch>
      </Class>
      <Class name="DOMMutationEvent" />
      <Class name="DOMMutationEvent_DOMMutationEventDeprecated">
        <Patch>AdditionFor=DOMMutationEvent</Patch>
      </Class>
      <Class name="DOMNamedNodeMap" />
      <Class name="DOMNamedNodeMap_DOMNamedNodeMapDeprecated">
        <Patch>AdditionFor=DOMNamedNodeMap</Patch>
      </Class>
      <Class name="DOMNode" />
      <Class name="DOMNode_DOMNodeDeprecated">
        <Patch>AdditionFor=DOMNode</Patch>
      </Class>
      <Class name="DOMNode_DOMNodeExtensions">
        <Patch>AdditionFor=DOMNode</Patch>
      </Class>
      <Class name="DOMNode_WebDOMNodeOperations">
        <Patch>AdditionFor=DOMNode</Patch>
      </Class>
      <Class name="DOMNodeIterator" />
      <Class name="DOMNodeList" />
      <Class name="DOMNotation" />
      <Class name="DOMObject">
        <Patch>Constants[_internal].Generate=false</Patch>
      </Class>
      <Class name="DOMObject_DOMLinkStyle">
        <Patch>AdditionFor=DOMObject</Patch>
      </Class>
      <Class name="DOMOverflowEvent" />
      <Class name="DOMProcessingInstruction">
        <Patch>Properties[Sheet].Generate=false</Patch>
      </Class>
      <Class name="DOMProgressEvent" />
      <Class name="DOMRange">
        <Patch>Properties[ToString].Name=AsString</Patch>
      </Class>
      <Class name="DOMRange_DOMRangeDeprecated">
        <Patch>AdditionFor=DOMRange</Patch>
      </Class>
      <Class name="DOMRange_WebDOMRangeOperations">
        <Patch>AdditionFor=DOMRange</Patch>
      </Class>
      <Class name="DOMRect" />
      <Class name="DOMRGBColor" />
      <Class name="DOMStyleSheet" />
      <Class name="DOMStyleSheetList" />
      <Class name="DOMText" />
      <Class name="DOMTreeWalker" />
      <Class name="DOMUIEvent" />
      <Class name="DOMUIEvent_DOMUIEventDeprecated">
        <Patch>AdditionFor=DOMUIEvent</Patch>
      </Class>
      <Class name="DOMWheelEvent" />
      <Class name="DOMXPathExpression" />
      <Class name="DOMXPathExpression_DOMXPathExpressionDeprecated">
        <Patch>AdditionFor=DOMXPathExpression</Patch>
      </Class>
      <Class name="DOMXPathResult" />
      <Class name="DOM_Definitions">
        <Patch>AdditionFor=DOM</Patch>
      </Class>
      <Class name="DOMAbstractView_Definitions">
        <Patch>AdditionFor=DOMAbstractView</Patch>
      </Class>
      <Class name="DOMAttr_Definitions">
        <Patch>AdditionFor=DOMAttr</Patch>
      </Class>
      <Class name="DOMBlob_Definitions">
        <Patch>AdditionFor=DOMBlob</Patch>
      </Class>
      <Class name="DOMCDATASection_Definitions">
        <Patch>AdditionFor=DOMCDATASection</Patch>
      </Class>
      <Class name="DOMCharacterData_Definitions">
        <Patch>AdditionFor=DOMCharacterData</Patch>
      </Class>
      <Class name="DOMComment_Definitions">
        <Patch>AdditionFor=DOMComment</Patch>
      </Class>
      <Class name="DOMCore_Definitions">
        <Patch>AdditionFor=DOMCore</Patch>
      </Class>
      <Class name="DOMCounter_Definitions">
        <Patch>AdditionFor=DOMCounter</Patch>
      </Class>
      <Class name="DOMCSS_Definitions">
        <Patch>AdditionFor=DOMCSS</Patch>
      </Class>
      <Class name="DOMCSSCharsetRule_Definitions">
        <Patch>AdditionFor=DOMCSSCharsetRule</Patch>
      </Class>
      <Class name="DOMCSSFontFaceRule_Definitions">
        <Patch>AdditionFor=DOMCSSFontFaceRule</Patch>
      </Class>
      <Class name="DOMCSSImportRule_Definitions">
        <Patch>AdditionFor=DOMCSSImportRule</Patch>
      </Class>
      <Class name="DOMCSSMediaRule_Definitions">
        <Patch>AdditionFor=DOMCSSMediaRule</Patch>
      </Class>
      <Class name="DOMCSSPageRule_Definitions">
        <Patch>AdditionFor=DOMCSSPageRule</Patch>
      </Class>
      <Class name="DOMCSSPrimitiveValue_Definitions">
        <Patch>AdditionFor=DOMCSSPrimitiveValue</Patch>
        <Patch>Enumerations[@0].Name=DOMCSSUnitType</Patch>
        <Patch>Enumerations[DOMCSSUnitType].BaseType=ushort</Patch>
      </Class>
      <Class name="DOMCSSRule_Definitions">
        <Patch>AdditionFor=DOMCSSRule</Patch>
        <Patch>Enumerations[@1].Name=DOMCSSRuleType</Patch>
        <Patch>Enumerations[DOMCSSRuleType].BaseType=ushort</Patch>
      </Class>
      <Class name="DOMCSSRuleList_Definitions">
        <Patch>AdditionFor=DOMCSSRuleList</Patch>
      </Class>
      <Class name="DOMCSSStyleDeclaration_Definitions">
        <Patch>AdditionFor=DOMCSSStyleDeclaration</Patch>
      </Class>
      <Class name="DOMCSSStyleRule_Definitions">
        <Patch>AdditionFor=DOMCSSStyleRule</Patch>
      </Class>
      <Class name="DOMCSSStyleSheet_Definitions">
        <Patch>AdditionFor=DOMCSSStyleSheet</Patch>
      </Class>
      <Class name="DOMCSSUnknownRule_Definitions">
        <Patch>AdditionFor=DOMCSSUnknownRule</Patch>
      </Class>
      <Class name="DOMCSSValue_Definitions">
        <Patch>AdditionFor=DOMCSSValue</Patch>
        <Patch>Enumerations[@2].Name=DOMCSSValueType</Patch>
        <Patch>Enumerations[DOMCSSValueType].BaseType=ushort</Patch>
      </Class>
      <Class name="DOMCSSValueList_Definitions">
        <Patch>AdditionFor=DOMCSSValueList</Patch>
      </Class>
      <Class name="DOMDocument_Definitions">
        <Patch>AdditionFor=DOMDocument</Patch>
      </Class>
      <Class name="DOMDocumentFragment_Definitions">
        <Patch>AdditionFor=DOMDocumentFragment</Patch>
      </Class>
      <Class name="DOMDocumentType_Definitions">
        <Patch>AdditionFor=DOMDocumentType</Patch>
      </Class>
      <Class name="DOMElement_Definitions">
        <Patch>AdditionFor=DOMElement</Patch>
        <Patch>Enumerations[@3].Name=DOMElementInput</Patch>
        <Patch>Enumerations[DOMElementInput].BaseType=int</Patch>
      </Class>
      <Class name="DOMEntity_Definitions">
        <Patch>AdditionFor=DOMEntity</Patch>
      </Class>
      <Class name="DOMEntityReference_Definitions">
        <Patch>AdditionFor=DOMEntityReference</Patch>
      </Class>
      <Class name="DOMEvent_Definitions">
        <Patch>AdditionFor=DOMEvent</Patch>
        <Patch>Enumerations[@4].Name=DOMEventPhase</Patch>
        <Patch>Enumerations[DOMEventPhase].BaseType=ushort</Patch>
      </Class>
      <Class name="DOMEventException_Definitions">
        <Patch>AdditionFor=DOMEventException</Patch>
        <Patch>Enumerations[DOMEventExceptionCode].BaseType=int</Patch>
      </Class>
      <Class name="DOMEventListener_Definitions">
        <Patch>AdditionFor=DOMEventListener</Patch>
      </Class>
      <Class name="DOMEvents_Definitions">
        <Patch>AdditionFor=DOMEvents</Patch>
      </Class>
      <Class name="DOMEventTarget_Definitions">
        <Patch>AdditionFor=DOMEventTarget</Patch>
      </Class>
      <Class name="DOMException_Definitions">
        <Patch>AdditionFor=DOMException</Patch>
        <Patch>Enumerations[DOMExceptionCode].BaseType=int</Patch>
      </Class>
      <Class name="DOMExtensions_Definitions">
        <Patch>AdditionFor=DOMExtensions</Patch>
      </Class>
      <Class name="DOMFile_Definitions">
        <Patch>AdditionFor=DOMFile</Patch>
      </Class>
      <Class name="DOMFileList_Definitions">
        <Patch>AdditionFor=DOMFileList</Patch>
      </Class>
      <Class name="DOMHTML_Definitions">
        <Patch>AdditionFor=DOMHTML</Patch>
      </Class>
      <Class name="DOMHTMLAnchorElement_Definitions">
        <Patch>AdditionFor=DOMHTMLAnchorElement</Patch>
      </Class>
      <Class name="DOMHTMLAppletElement_Definitions">
        <Patch>AdditionFor=DOMHTMLAppletElement</Patch>
      </Class>
      <Class name="DOMHTMLAreaElement_Definitions">
        <Patch>AdditionFor=DOMHTMLAreaElement</Patch>
      </Class>
      <Class name="DOMHTMLBaseElement_Definitions">
        <Patch>AdditionFor=DOMHTMLBaseElement</Patch>
      </Class>
      <Class name="DOMHTMLBaseFontElement_Definitions">
        <Patch>AdditionFor=DOMHTMLBaseFontElement</Patch>
      </Class>
      <Class name="DOMHTMLBodyElement_Definitions">
        <Patch>AdditionFor=DOMHTMLBodyElement</Patch>
      </Class>
      <Class name="DOMHTMLBRElement_Definitions">
        <Patch>AdditionFor=DOMHTMLBRElement</Patch>
      </Class>
      <Class name="DOMHTMLButtonElement_Definitions">
        <Patch>AdditionFor=DOMHTMLButtonElement</Patch>
      </Class>
      <Class name="DOMHTMLCollection_Definitions">
        <Patch>AdditionFor=DOMHTMLCollection</Patch>
      </Class>
      <Class name="DOMHTMLDirectoryElement_Definitions">
        <Patch>AdditionFor=DOMHTMLDirectoryElement</Patch>
      </Class>
      <Class name="DOMHTMLDivElement_Definitions">
        <Patch>AdditionFor=DOMHTMLDivElement</Patch>
      </Class>
      <Class name="DOMHTMLDListElement_Definitions">
        <Patch>AdditionFor=DOMHTMLDListElement</Patch>
      </Class>
      <Class name="DOMHTMLDocument_Definitions">
        <Patch>AdditionFor=DOMHTMLDocument</Patch>
      </Class>
      <Class name="DOMHTMLElement_Definitions">
        <Patch>AdditionFor=DOMHTMLElement</Patch>
      </Class>
      <Class name="DOMHTMLEmbedElement_Definitions">
        <Patch>AdditionFor=DOMHTMLEmbedElement</Patch>
      </Class>
      <Class name="DOMHTMLFieldSetElement_Definitions">
        <Patch>AdditionFor=DOMHTMLFieldSetElement</Patch>
      </Class>
      <Class name="DOMHTMLFontElement_Definitions">
        <Patch>AdditionFor=DOMHTMLFontElement</Patch>
      </Class>
      <Class name="DOMHTMLFormElement_Definitions">
        <Patch>AdditionFor=DOMHTMLFormElement</Patch>
      </Class>
      <Class name="DOMHTMLFrameElement_Definitions">
        <Patch>AdditionFor=DOMHTMLFrameElement</Patch>
      </Class>
      <Class name="DOMHTMLFrameSetElement_Definitions">
        <Patch>AdditionFor=DOMHTMLFrameSetElement</Patch>
      </Class>
      <Class name="DOMHTMLHeadElement_Definitions">
        <Patch>AdditionFor=DOMHTMLHeadElement</Patch>
      </Class>
      <Class name="DOMHTMLHeadingElement_Definitions">
        <Patch>AdditionFor=DOMHTMLHeadingElement</Patch>
      </Class>
      <Class name="DOMHTMLHRElement_Definitions">
        <Patch>AdditionFor=DOMHTMLHRElement</Patch>
      </Class>
      <Class name="DOMHTMLHtmlElement_Definitions">
        <Patch>AdditionFor=DOMHTMLHtmlElement</Patch>
      </Class>
      <Class name="DOMHTMLIFrameElement_Definitions">
        <Patch>AdditionFor=DOMHTMLIFrameElement</Patch>
      </Class>
      <Class name="DOMHTMLImageElement_Definitions">
        <Patch>AdditionFor=DOMHTMLImageElement</Patch>
      </Class>
      <Class name="DOMHTMLInputElement_Definitions">
        <Patch>AdditionFor=DOMHTMLInputElement</Patch>
      </Class>
      <Class name="DOMHTMLIsIndexElement_Definitions">
        <Patch>AdditionFor=DOMHTMLIsIndexElement</Patch>
      </Class>
      <Class name="DOMHTMLLabelElement_Definitions">
        <Patch>AdditionFor=DOMHTMLLabelElement</Patch>
      </Class>
      <Class name="DOMHTMLLegendElement_Definitions">
        <Patch>AdditionFor=DOMHTMLLegendElement</Patch>
      </Class>
      <Class name="DOMHTMLLIElement_Definitions">
        <Patch>AdditionFor=DOMHTMLLIElement</Patch>
      </Class>
      <Class name="DOMHTMLLinkElement_Definitions">
        <Patch>AdditionFor=DOMHTMLLinkElement</Patch>
      </Class>
      <Class name="DOMHTMLMapElement_Definitions">
        <Patch>AdditionFor=DOMHTMLMapElement</Patch>
      </Class>
      <Class name="DOMHTMLMarqueeElement_Definitions">
        <Patch>AdditionFor=DOMHTMLMarqueeElement</Patch>
      </Class>
      <Class name="DOMHTMLMenuElement_Definitions">
        <Patch>AdditionFor=DOMHTMLMenuElement</Patch>
      </Class>
      <Class name="DOMHTMLMetaElement_Definitions">
        <Patch>AdditionFor=DOMHTMLMetaElement</Patch>
      </Class>
      <Class name="DOMHTMLModElement_Definitions">
        <Patch>AdditionFor=DOMHTMLModElement</Patch>
      </Class>
      <Class name="DOMHTMLObjectElement_Definitions">
        <Patch>AdditionFor=DOMHTMLObjectElement</Patch>
      </Class>
      <Class name="DOMHTMLOListElement_Definitions">
        <Patch>AdditionFor=DOMHTMLOListElement</Patch>
      </Class>
      <Class name="DOMHTMLOptGroupElement_Definitions">
        <Patch>AdditionFor=DOMHTMLOptGroupElement</Patch>
      </Class>
      <Class name="DOMHTMLOptionElement_Definitions">
        <Patch>AdditionFor=DOMHTMLOptionElement</Patch>
      </Class>
      <Class name="DOMHTMLOptionsCollection_Definitions">
        <Patch>AdditionFor=DOMHTMLOptionsCollection</Patch>
      </Class>
      <Class name="DOMHTMLParagraphElement_Definitions">
        <Patch>AdditionFor=DOMHTMLParagraphElement</Patch>
      </Class>
      <Class name="DOMHTMLParamElement_Definitions">
        <Patch>AdditionFor=DOMHTMLParamElement</Patch>
      </Class>
      <Class name="DOMHTMLPreElement_Definitions">
        <Patch>AdditionFor=DOMHTMLPreElement</Patch>
      </Class>
      <Class name="DOMHTMLQuoteElement_Definitions">
        <Patch>AdditionFor=DOMHTMLQuoteElement</Patch>
      </Class>
      <Class name="DOMHTMLScriptElement_Definitions">
        <Patch>AdditionFor=DOMHTMLScriptElement</Patch>
      </Class>
      <Class name="DOMHTMLSelectElement_Definitions">
        <Patch>AdditionFor=DOMHTMLSelectElement</Patch>
      </Class>
      <Class name="DOMHTMLStyleElement_Definitions">
        <Patch>AdditionFor=DOMHTMLStyleElement</Patch>
      </Class>
      <Class name="DOMHTMLTableCaptionElement_Definitions">
        <Patch>AdditionFor=DOMHTMLTableCaptionElement</Patch>
      </Class>
      <Class name="DOMHTMLTableCellElement_Definitions">
        <Patch>AdditionFor=DOMHTMLTableCellElement</Patch>
      </Class>
      <Class name="DOMHTMLTableColElement_Definitions">
        <Patch>AdditionFor=DOMHTMLTableColElement</Patch>
      </Class>
      <Class name="DOMHTMLTableElement_Definitions">
        <Patch>AdditionFor=DOMHTMLTableElement</Patch>
      </Class>
      <Class name="DOMHTMLTableRowElement_Definitions">
        <Patch>AdditionFor=DOMHTMLTableRowElement</Patch>
      </Class>
      <Class name="DOMHTMLTableSectionElement_Definitions">
        <Patch>AdditionFor=DOMHTMLTableSectionElement</Patch>
      </Class>
      <Class name="DOMHTMLTextAreaElement_Definitions">
        <Patch>AdditionFor=DOMHTMLTextAreaElement</Patch>
      </Class>
      <Class name="DOMHTMLTitleElement_Definitions">
        <Patch>AdditionFor=DOMHTMLTitleElement</Patch>
      </Class>
      <Class name="DOMHTMLUListElement_Definitions">
        <Patch>AdditionFor=DOMHTMLUListElement</Patch>
      </Class>
      <Class name="DOMImplementation_Definitions">
        <Patch>AdditionFor=DOMImplementation</Patch>
      </Class>
      <Class name="DOMKeyboardEvent_Definitions">
        <Patch>AdditionFor=DOMKeyboardEvent</Patch>
        <Patch>Enumerations[@5].Name=DOMKeyLocation</Patch>
        <Patch>Enumerations[DOMKeyLocation].BaseType=uint</Patch>
      </Class>
      <Class name="DOMMediaList_Definitions">
        <Patch>AdditionFor=DOMMediaList</Patch>
      </Class>
      <Class name="DOMMouseEvent_Definitions">
        <Patch>AdditionFor=DOMMouseEvent</Patch>
      </Class>
      <Class name="DOMMutationEvent_Definitions">
        <Patch>AdditionFor=DOMMutationEvent</Patch>
        <Patch>Enumerations[@6].Name=DOMAttributeChange</Patch>
        <Patch>Enumerations[DOMAttributeChange].BaseType=ushort</Patch>
      </Class>
      <Class name="DOMNamedNodeMap_Definitions">
        <Patch>AdditionFor=DOMNamedNodeMap</Patch>
      </Class>
      <Class name="DOMNode_Definitions">
        <Patch>AdditionFor=DOMNode</Patch>
        <Patch>Enumerations[@7].Name=DOMNodeType</Patch>
        <Patch>Enumerations[DOMNodeType].BaseType=ushort</Patch>
      </Class>
      <Class name="DOMNodeFilter_Definitions">
        <Patch>AdditionFor=DOMNodeFilter</Patch>
        <Patch>Enumerations[@8].Name=DOMNodeFilterResult</Patch>
        <Patch>Enumerations[DOMNodeFilterResult].BaseType=short</Patch>
        <Patch>Enumerations[DOMNodeFilterResult].Values[DOM_SHOW_ALL].Value=-1</Patch>
      </Class>
      <Class name="DOMNodeIterator_Definitions">
        <Patch>AdditionFor=DOMNodeIterator</Patch>
      </Class>
      <Class name="DOMNodeList_Definitions">
        <Patch>AdditionFor=DOMNodeList</Patch>
      </Class>
      <Class name="DOMNotation_Definitions">
        <Patch>AdditionFor=DOMNotation</Patch>
      </Class>
      <Class name="DOMObject_Definitions">
        <Patch>AdditionFor=DOMObject</Patch>
      </Class>
      <Class name="DOMOverflowEvent_Definitions">
        <Patch>AdditionFor=DOMOverflowEvent</Patch>
        <Patch>Enumerations[@9].Name=DOMOverflowOrientation</Patch>
        <Patch>Enumerations[DOMOverflowOrientation].BaseType=ushort</Patch>
      </Class>
      <Class name="DOMProcessingInstruction_Definitions">
        <Patch>AdditionFor=DOMProcessingInstruction</Patch>
      </Class>
      <Class name="DOMProgressEvent_Definitions">
        <Patch>AdditionFor=DOMProgressEvent</Patch>
      </Class>
      <Class name="DOMRange_Definitions">
        <Patch>AdditionFor=DOMRange</Patch>
        <Patch>Enumerations[@10].Name=DOMRangeOffset</Patch>
        <Patch>Enumerations[DOMRangeOffset].BaseType=int</Patch>
      </Class>
      <Class name="DOMRangeException_Definitions">
        <Patch>AdditionFor=DOMRangeException</Patch>
        <Patch>Enumerations[DOMRangeExceptionCode].BaseType=int</Patch>
      </Class>
      <Class name="DOMRanges_Definitions">
        <Patch>AdditionFor=DOMRanges</Patch>
      </Class>
      <Class name="DOMRect_Definitions">
        <Patch>AdditionFor=DOMRect</Patch>
      </Class>
      <Class name="DOMRGBColor_Definitions">
        <Patch>AdditionFor=DOMRGBColor</Patch>
      </Class>
      <Class name="DOMStyleSheet_Definitions">
        <Patch>AdditionFor=DOMStyleSheet</Patch>
      </Class>
      <Class name="DOMStyleSheetList_Definitions">
        <Patch>AdditionFor=DOMStyleSheetList</Patch>
      </Class>
      <Class name="DOMStylesheets_Definitions">
        <Patch>AdditionFor=DOMStylesheets</Patch>
      </Class>
      <Class name="DOMText_Definitions">
        <Patch>AdditionFor=DOMText</Patch>
      </Class>
      <Class name="DOMTraversal_Definitions">
        <Patch>AdditionFor=DOMTraversal</Patch>
      </Class>
      <Class name="DOMTreeWalker_Definitions">
        <Patch>AdditionFor=DOMTreeWalker</Patch>
      </Class>
      <Class name="DOMUIEvent_Definitions">
        <Patch>AdditionFor=DOMUIEvent</Patch>
      </Class>
      <Class name="DOMViews_Definitions">
        <Patch>AdditionFor=DOMViews</Patch>
      </Class>
      <Class name="DOMWheelEvent_Definitions">
        <Patch>AdditionFor=DOMWheelEvent</Patch>
      </Class>
      <Class name="DOMXPath_Definitions">
        <Patch>AdditionFor=DOMXPath</Patch>
      </Class>
      <Class name="DOMXPathException_Definitions">
        <Patch>AdditionFor=DOMXPathException</Patch>
        <Patch>Enumerations[DOMXPathExceptionCode].BaseType=int</Patch>
      </Class>
      <Class name="DOMXPathExpression_Definitions">
        <Patch>AdditionFor=DOMXPathExpression</Patch>
      </Class>
      <Class name="DOMXPathNSResolver_Definitions">
        <Patch>AdditionFor=DOMXPathNSResolver</Patch>
      </Class>
      <Class name="DOMXPathResult_Definitions">
        <Patch>AdditionFor=DOMXPathResult</Patch>
        <Patch>Enumerations[@11].Name=DOMXPathResultType</Patch>
        <Patch>Enumerations[DOMXPathResultType].BaseType=ushort</Patch>
      </Class>
    </Classes>
    <Protocols>
      <Protocol name="DOMEventListener" />
      <Protocol name="DOMEventTarget" />
      <Protocol name="DOMNodeFilter" />
      <Protocol name="DOMXPathNSResolver" />
    </Protocols>
  </Framework>

  <!--
  User Frameworks
  -->
  <Framework name="CorePlot" usings="Foundation,AppKit,QuartzCore,ApplicationServices" assembly="Monobjc.CorePlot">
    <Classes>
      <Class name="CPTAnnotation" />
      <Class name="CPTAnnotationHostLayer" />
      <Class name="CPTAxis" />
      <Class name="CPTAxisLabel" />
      <Class name="CPTAxisLabelGroup" />
      <Class name="CPTAxisSet" />
      <Class name="CPTAxisTitle" />
      <Class name="CPTBarPlot" />
      <Class name="CPTBorderedLayer" />
      <Class name="CPTColor">
        <Patch>Methods[InitWithCGColor].GenerateConstructor=false</Patch>
      </Class>
      <Class name="CPTColorSpace">
        <Patch>Methods[InitWithCGColorSpace].GenerateConstructor=false</Patch>
      </Class>
      <Class name="CPTConstrainedPosition" />
      <Class name="CPTDarkGradientTheme" />
      <Class name="CPTDecimalNumberValueTransformer">
        <Patch>BaseType=NSValueTransformer</Patch>
      </Class>
      <Class name="CPTFill" />
      <Class name="CPTGradient">
        <Patch>Constants[colorspace].Generate=false</Patch>
        <Patch>Constants[elementList].Generate=false</Patch>
        <Patch>Constants[gradientFunction].Generate=false</Patch>
      </Class>
      <Class name="CPTGraph" />
      <Class name="CPTGridLineGroup" />
      <Class name="CPTGridLines" />
      <Class name="CPTImage">
        <Patch>Methods[InitWithCGImage].GenerateConstructor=false</Patch>
      </Class>
      <Class name="CPTLayer">
        <Patch>BaseType=CALayer</Patch>
        <Patch>Properties[LayoutManager].Generate=false</Patch>
      </Class>
      <Class name="CPTLayerAnnotation" />
      <Class name="CPTLayerHostingView">
        <Patch>BaseType=NSView</Patch>
      </Class>
      <Class name="CPTLegend" />
      <Class name="CPTLegendEntry" />
      <Class name="CPTLimitBand" />
      <Class name="CPTLineStyle">
        <Patch>Properties[LineStyle].Type=CPTLineStyle</Patch>
        <Patch>Properties[LineStyle].CopyInDescendants=true</Patch>
      </Class>
      <Class name="CPTMutableLineStyle">
        <Replace type="Generated">
          <Source>public virtual CGLineCap LineCap</Source>
          <With>public new CGLineCap LineCap</With>
        </Replace>
        <Replace type="Generated">
          <Source>public virtual CGLineJoin LineJoin</Source>
          <With>public new CGLineJoin LineJoin</With>
        </Replace>
        <Replace type="Generated">
          <Source>public virtual CGFloat MiterLimit</Source>
          <With>public new CGFloat MiterLimit</With>
        </Replace>
        <Replace type="Generated">
          <Source>public virtual CGFloat LineWidth</Source>
          <With>public new CGFloat LineWidth</With>
        </Replace>
        <Replace type="Generated">
          <Source>public virtual NSArray DashPattern</Source>
          <With>public new NSArray DashPattern</With>
        </Replace>
        <Replace type="Generated">
          <Source>public virtual CGFloat PatternPhase</Source>
          <With>public new CGFloat PatternPhase</With>
        </Replace>
        <Replace type="Generated">
          <Source>public virtual CPTColor LineColor</Source>
          <With>public new CPTColor LineColor</With>
        </Replace>
      </Class>
      <Class name="CPTMutableNumericData">
        <Replace type="Generated">
          <Source>public static CPTMutableNumericData NumericDataWithDataDataTypeShape</Source>
          <With>public new static CPTMutableNumericData NumericDataWithDataDataTypeShape</With>
        </Replace>
        <Replace type="Generated">
          <Source>public static CPTMutableNumericData NumericDataWithDataDataTypeStringShape</Source>
          <With>public new static CPTMutableNumericData NumericDataWithDataDataTypeStringShape</With>
        </Replace>
        <Replace type="Generated">
          <Source>public virtual NSArray Shape</Source>
          <With>public new NSArray Shape</With>
        </Replace>
      </Class>
      <Class name="CPTMutableTextStyle">
        <Replace type="Generated">
          <Source>public virtual NSString FontName</Source>
          <With>public new NSString FontName</With>
        </Replace>
        <Replace type="Generated">
          <Source>public virtual CGFloat FontSize</Source>
          <With>public new CGFloat FontSize</With>
        </Replace>
        <Replace type="Generated">
          <Source>public virtual CPTColor Color</Source>
          <With>public new CPTColor Color</With>
        </Replace>
        <Replace type="Generated">
          <Source>public virtual CPTTextAlignment TextAlignment</Source>
          <With>public new CPTTextAlignment TextAlignment</With>
        </Replace>
      </Class>
      <Class name="CPTMutableNumericData" />
      <Class name="CPTMutableTextStyle" />
      <Class name="CPTNumericData" />
      <Class name="CPTPieChart" />
      <Class name="CPTPlainBlackTheme" />
      <Class name="CPTPlainWhiteTheme" />
      <Class name="CPTPlot">
        <Patch>Properties[Identifier].Type=Id</Patch>
        <Patch>Properties[DataSource].Type=Id</Patch>
      </Class>
      <Class name="CPTPlotArea">
        <Patch>Constants[bottomUpLayerOrder].Generate=false</Patch>
        <Patch>Constants[updatingLayers].Generate=false</Patch>
      </Class>
      <Class name="CPTPlotAreaFrame" />
      <Class name="CPTPlotGroup">
        <Patch>Properties[Identifier].Type=Id</Patch>
      </Class>
      <Class name="CPTPlotRange" />
      <Class name="CPTPlotSpace">
        <Patch>Properties[Delegate].Type=Id</Patch>
        <Patch>Properties[Identifier].Type=Id</Patch>
      </Class>
      <Class name="CPTPlotSpaceAnnotation" />
      <Class name="CPTPlotSymbol" />
      <Class name="CPTPolarPlotSpace" />
      <Class name="CPTRangePlot" />
      <Class name="CPTScatterPlot" />
      <Class name="CPTSlateTheme" />
      <Class name="CPTStocksTheme" />
      <Class name="CPTTextLayer" />
      <Class name="CPTTextStyle">
        <Patch>Properties[TextStyle].Type=CPTTextStyle</Patch>
        <Patch>Properties[TextStyle].CopyInDescendants=true</Patch>
      </Class>
      <Class name="CPTTheme" />
      <Class name="CPTTimeFormatter">
        <Patch>BaseType=NSNumberFormatter</Patch>
      </Class>
      <Class name="CPTTradingRangePlot" />
      <Class name="CPTXYAxis">
        <Replace type="Generated">
          <Source>public virtual CPTConstraints Constraints</Source>
          <With>public new CPTConstraints Constraints</With>
        </Replace>
      </Class>
      <Class name="CPTXYAxisSet" />
      <Class name="CPTXYGraph" />
      <Class name="CPTXYPlotSpace" />
      <Class name="CPTXYTheme" />
      <Class name="CPTAnnotation_AbstractMethods">
        <Patch>AdditionFor=CPTAnnotation</Patch>
      </Class>
      <Class name="CPTAxis_AbstractMethods">
        <Patch>AdditionFor=CPTAxis</Patch>
      </Class>
      <Class name="CPTColor_CPTPlatformSpecificColorExtensions">
        <Patch>AdditionFor=CPTColor</Patch>
      </Class>
      <Class name="CPTFill_AbstractMethods">
        <Patch>AdditionFor=CPTFill</Patch>
      </Class>
      <Class name="CPTGraph_AbstractFactoryMethods">
        <Patch>AdditionFor=CPTGraph</Patch>
      </Class>
      <Class name="CPTLayer_CPTPlatformSpecificLayerExtensions">
        <Patch>AdditionFor=CPTLayer</Patch>
        <Patch>Properties[ImageOfLayer].Type=NSImage</Patch>
      </Class>
      <Class name="CPTMutableNumericData_TypeConversion">
        <Patch>AdditionFor=CPTMutableNumericData</Patch>
        <Replace type="Generated">
          <Source>public virtual CPTNumericDataType DataType</Source>
          <With>public new CPTNumericDataType DataType</With>
        </Replace>
        <Replace type="Generated">
          <Source>public virtual CPTDataTypeFormat DataTypeFormat</Source>
          <With>public new CPTDataTypeFormat DataTypeFormat</With>
        </Replace>
        <Replace type="Generated">
          <Source>public virtual NSUInteger SampleBytes</Source>
          <With>public new NSUInteger SampleBytes</With>
        </Replace>
        <Replace type="Generated">
          <Source>public virtual NSInteger ByteOrder</Source>
          <With>public new NSInteger ByteOrder</With>
        </Replace>
      </Class>
      <Class name="CPTNumericData_TypeConversion">
        <Patch>AdditionFor=CPTNumericData</Patch>
        <Patch>Methods[ConvertDataDataTypeToDataDataType].Generate=false</Patch>
        <Patch>Methods[ConvertDataDataTypeToDataDataType].Parameters[sourceDataType].Type=CPTNumericDataType</Patch>
        <Patch>Methods[ConvertDataDataTypeToDataDataType].Parameters[sourceDataType].IsByRef=true</Patch>
        <Patch>Methods[ConvertDataDataTypeToDataDataType].Parameters[destDataType].Type=CPTNumericDataType</Patch>
        <Patch>Methods[ConvertDataDataTypeToDataDataType].Parameters[destDataType].IsByRef=true</Patch>
      </Class>
      <Class name="CPTPlot_AbstractMethods">
        <Patch>AdditionFor=CPTPlot</Patch>
      </Class>
      <Class name="CPTPlotSpace_AbstractMethods">
        <Patch>AdditionFor=CPTPlotSpace</Patch>
        <Patch>Methods[PlotAreaViewPointForPlotPoint].Parameters[plotPoint].Type=NSDecimal</Patch>
        <Patch>Methods[PlotAreaViewPointForPlotPoint].Parameters[plotPoint].IsByRef=true</Patch>
        <Patch>Methods[PlotAreaViewPointForDoublePrecisionPlotPoint].Parameters[plotPoint].Type=double</Patch>
        <Patch>Methods[PlotAreaViewPointForDoublePrecisionPlotPoint].Parameters[plotPoint].IsByRef=true</Patch>
        <Patch>Methods[PlotPointForPlotAreaViewPoint].Parameters[plotPoint].Type=NSDecimal</Patch>
        <Patch>Methods[PlotPointForPlotAreaViewPoint].Parameters[plotPoint].IsByRef=true</Patch>
        <Patch>Methods[DoublePrecisionPlotPointForPlotAreaViewPoint].Parameters[plotPoint].Type=double</Patch>
        <Patch>Methods[DoublePrecisionPlotPointForPlotAreaViewPoint].Parameters[plotPoint].IsByRef=true</Patch>
      </Class>
      <Class name="CPTTheme_AbstractMethods">
        <Patch>AdditionFor=CPTTheme</Patch>
      </Class>
      <Class name="NSDecimalNumber_CPTExtensions">
        <Patch>AdditionFor=NSDecimalNumber</Patch>
      </Class>
      <Class name="NSException_CPTExtensions">
        <Patch>AdditionFor=NSException</Patch>
      </Class>
      <Class name="NSNumber_CPTExtensions">
        <Patch>AdditionFor=NSNumber</Patch>
      </Class>
      <Class name="NSString_CPTTextStyleExtensions">
        <Patch>AdditionFor=NSString</Patch>
      </Class>
      <Class name="CorePlot_Definitions">
        <Patch>AdditionFor=CorePlot</Patch>
        <Patch>Generate=false</Patch>
      </Class>
      <Class name="CPTAnnotation_Definitions">
        <Patch>AdditionFor=CPTAnnotation</Patch>
      </Class>
      <Class name="CPTAnnotationHostLayer_Definitions">
        <Patch>AdditionFor=CPTAnnotationHostLayer</Patch>
      </Class>
      <Class name="CPTAxis_Definitions">
        <Patch>AdditionFor=CPTAxis</Patch>
        <Patch>Enumerations[CPTAxisLabelingPolicy].BaseType=int</Patch>
      </Class>
      <Class name="CPTAxisLabel_Definitions">
        <Patch>AdditionFor=CPTAxisLabel</Patch>
      </Class>
      <Class name="CPTAxisLabelGroup_Definitions">
        <Patch>AdditionFor=CPTAxisLabelGroup</Patch>
      </Class>
      <Class name="CPTAxisSet_Definitions">
        <Patch>AdditionFor=CPTAxisSet</Patch>
      </Class>
      <Class name="CPTAxisTitle_Definitions">
        <Patch>AdditionFor=CPTAxisTitle</Patch>
      </Class>
      <Class name="CPTBarPlot_Definitions">
        <Patch>AdditionFor=CPTBarPlot</Patch>
        <Patch>Enumerations[CPTBarPlotField].BaseType=int</Patch>
      </Class>
      <Class name="CPTBorderedLayer_Definitions">
        <Patch>AdditionFor=CPTBorderedLayer</Patch>
      </Class>
      <Class name="CPTColor_Definitions">
        <Patch>AdditionFor=CPTColor</Patch>
      </Class>
      <Class name="CPTColorSpace_Definitions">
        <Patch>AdditionFor=CPTColorSpace</Patch>
      </Class>
      <Class name="CPTConstrainedPosition_Definitions">
        <Patch>AdditionFor=CPTConstrainedPosition</Patch>
      </Class>
      <Class name="CPTDarkGradientTheme_Definitions">
        <Patch>AdditionFor=CPTDarkGradientTheme</Patch>
      </Class>
      <Class name="CPTDecimalNumberValueTransformer_Definitions">
        <Patch>AdditionFor=CPTDecimalNumberValueTransformer</Patch>
      </Class>
      <Class name="CPTDefinitions_Definitions">
        <Patch>AdditionFor=CPTDefinitions</Patch>
        <Patch>Enumerations[CPTNumericType].BaseType=int</Patch>
        <Patch>Enumerations[CPTErrorBarType].BaseType=int</Patch>
        <Patch>Enumerations[CPTScaleType].BaseType=int</Patch>
        <Patch>Enumerations[CPTCoordinate].BaseType=int</Patch>
        <Patch>Enumerations[CPTSign].BaseType=int</Patch>
        <Patch>Enumerations[CPTConstraint].BaseType=int</Patch>
        <Patch>Enumerations[CPTRectAnchor].BaseType=int</Patch>
        <Patch>Enumerations[CPTAlignment].BaseType=int</Patch>
      </Class>
      <Class name="CPTExceptions_Definitions">
        <Patch>AdditionFor=CPTExceptions</Patch>
      </Class>
      <Class name="CPTFill_Definitions">
        <Patch>AdditionFor=CPTFill</Patch>
      </Class>
      <Class name="CPTGradient_Definitions">
        <Patch>AdditionFor=CPTGradient</Patch>
        <Patch>Enumerations[CPTBlendingMode].Name=CPTGradientBlendingMode</Patch>
        <Patch>Enumerations[CPTGradientBlendingMode].BaseType=int</Patch>
        <Patch>Enumerations[CPTGradientType].BaseType=int</Patch>
      </Class>
      <Class name="CPTGraph_Definitions">
        <Patch>AdditionFor=CPTGraph</Patch>
        <Patch>Enumerations[CPTGraphLayerType].BaseType=int</Patch>
      </Class>
      <Class name="CPTGridLineGroup_Definitions">
        <Patch>AdditionFor=CPTGridLineGroup</Patch>
      </Class>
      <Class name="CPTGridLines_Definitions">
        <Patch>AdditionFor=CPTGridLines</Patch>
      </Class>
      <Class name="CPTImage_Definitions">
        <Patch>AdditionFor=CPTImage</Patch>
      </Class>
      <Class name="CPTLayer_Definitions">
        <Patch>AdditionFor=CPTLayer</Patch>
      </Class>
      <Class name="CPTLayerAnnotation_Definitions">
        <Patch>AdditionFor=CPTLayerAnnotation</Patch>
      </Class>
      <Class name="CPTLayerHostingView_Definitions">
        <Patch>AdditionFor=CPTLayerHostingView</Patch>
      </Class>
      <Class name="CPTLayoutManager_Definitions">
        <Patch>AdditionFor=CPTLayoutManager</Patch>
      </Class>
      <Class name="CPTLegend_Definitions">
        <Patch>AdditionFor=CPTLegend</Patch>
      </Class>
      <Class name="CPTLegendEntry_Definitions">
        <Patch>AdditionFor=CPTLegendEntry</Patch>
      </Class>
      <Class name="CPTLimitBand_Definitions">
        <Patch>AdditionFor=CPTLimitBand</Patch>
      </Class>
      <Class name="CPTLineStyle_Definitions">
        <Patch>AdditionFor=CPTLineStyle</Patch>
      </Class>
      <Class name="CPTMutableLineStyle_Definitions">
        <Patch>AdditionFor=CPTMutableLineStyle</Patch>
      </Class>
      <Class name="CPTMutableNumericData_TypeConversion_Definitions">
        <Patch>AdditionFor=CPTMutableNumericData_TypeConversion</Patch>
      </Class>
      <Class name="CPTMutableNumericData_Definitions">
        <Patch>AdditionFor=CPTMutableNumericData</Patch>
      </Class>
      <Class name="CPTMutableTextStyle_Definitions">
        <Patch>AdditionFor=CPTMutableTextStyle</Patch>
      </Class>
      <Class name="CPTNumericData_TypeConversion_Definitions">
        <Patch>AdditionFor=CPTNumericData_TypeConversion</Patch>
      </Class>
      <Class name="CPTNumericData_Definitions">
        <Patch>AdditionFor=CPTNumericData</Patch>
      </Class>
      <Class name="CPTNumericDataType_Definitions">
        <Patch>AdditionFor=CPTNumericDataType</Patch>
        <Patch>Enumerations[CPTDataTypeFormat].BaseType=int</Patch>
      </Class>
      <Class name="CPTPathExtensions_Definitions">
        <Patch>AdditionFor=CPTPathExtensions</Patch>
      </Class>
      <Class name="CPTPieChart_Definitions">
        <Patch>AdditionFor=CPTPieChart</Patch>
        <Patch>Enumerations[CPTPieChartField].BaseType=int</Patch>
        <Patch>Enumerations[CPTPieDirection].BaseType=int</Patch>
      </Class>
      <Class name="CPTPlainBlackTheme_Definitions">
        <Patch>AdditionFor=CPTPlainBlackTheme</Patch>
      </Class>
      <Class name="CPTPlainWhiteTheme_Definitions">
        <Patch>AdditionFor=CPTPlainWhiteTheme</Patch>
      </Class>
      <Class name="CPTPlatformSpecificCategories_Definitions">
        <Patch>AdditionFor=CPTPlatformSpecificCategories</Patch>
      </Class>
      <Class name="CPTPlatformSpecificDefines_Definitions">
        <Patch>AdditionFor=CPTPlatformSpecificDefines</Patch>
      </Class>
      <Class name="CPTPlatformSpecificFunctions_Definitions">
        <Patch>AdditionFor=CPTPlatformSpecificFunctions</Patch>
      </Class>
      <Class name="CPTPlot_Definitions">
        <Patch>AdditionFor=CPTPlot</Patch>
        <Patch>Enumerations[CPTPlotCachePrecision].BaseType=int</Patch>
      </Class>
      <Class name="CPTPlotArea_Definitions">
        <Patch>AdditionFor=CPTPlotArea</Patch>
      </Class>
      <Class name="CPTPlotAreaFrame_Definitions">
        <Patch>AdditionFor=CPTPlotAreaFrame</Patch>
      </Class>
      <Class name="CPTPlotGroup_Definitions">
        <Patch>AdditionFor=CPTPlotGroup</Patch>
      </Class>
      <Class name="CPTPlotRange_Definitions">
        <Patch>AdditionFor=CPTPlotRange</Patch>
        <Patch>Enumerations[CPTPlotRangeComparisonResult].BaseType=int</Patch>
      </Class>
      <Class name="CPTPlotSpace_Definitions">
        <Patch>AdditionFor=CPTPlotSpace</Patch>
      </Class>
      <Class name="CPTPlotSpaceAnnotation_Definitions">
        <Patch>AdditionFor=CPTPlotSpaceAnnotation</Patch>
      </Class>
      <Class name="CPTPlotSymbol_Definitions">
        <Patch>AdditionFor=CPTPlotSymbol</Patch>
        <Patch>Enumerations[CPTPlotSymbolType].BaseType=int</Patch>
      </Class>
      <Class name="CPTPolarPlotSpace_Definitions">
        <Patch>AdditionFor=CPTPolarPlotSpace</Patch>
      </Class>
      <Class name="CPTRangePlot_Definitions">
        <Patch>AdditionFor=CPTRangePlot</Patch>
        <Patch>Enumerations[CPTRangePlotField].BaseType=int</Patch>
      </Class>
      <Class name="CPTResponder_Definitions">
        <Patch>AdditionFor=CPTResponder</Patch>
      </Class>
      <Class name="CPTScatterPlot_Definitions">
        <Patch>AdditionFor=CPTScatterPlot</Patch>
        <Patch>Enumerations[CPTScatterPlotField].BaseType=int</Patch>
        <Patch>Enumerations[CPTScatterPlotInterpolation].BaseType=int</Patch>
      </Class>
      <Class name="CPTSlateTheme_Definitions">
        <Patch>AdditionFor=CPTSlateTheme</Patch>
      </Class>
      <Class name="CPTStocksTheme_Definitions">
        <Patch>AdditionFor=CPTStocksTheme</Patch>
      </Class>
      <Class name="CPTTextLayer_Definitions">
        <Patch>AdditionFor=CPTTextLayer</Patch>
      </Class>
      <Class name="CPTTextStyle_Definitions">
        <Patch>AdditionFor=CPTTextStyle</Patch>
        <Patch>Enumerations[CPTTextAlignment].BaseType=int</Patch>
      </Class>
      <Class name="CPTTheme_Definitions">
        <Patch>AdditionFor=CPTTheme</Patch>
      </Class>
      <Class name="CPTTimeFormatter_Definitions">
        <Patch>AdditionFor=CPTTimeFormatter</Patch>
      </Class>
      <Class name="CPTTradingRangePlot_Definitions">
        <Patch>AdditionFor=CPTTradingRangePlot</Patch>
        <Patch>Enumerations[CPTTradingRangePlotStyle].BaseType=int</Patch>
        <Patch>Enumerations[CPTTradingRangePlotField].BaseType=int</Patch>
      </Class>
      <Class name="CPTUtilities_Definitions">
        <Patch>AdditionFor=CPTUtilities</Patch>
      </Class>
      <Class name="CPTXYAxis_Definitions">
        <Patch>AdditionFor=CPTXYAxis</Patch>
      </Class>
      <Class name="CPTXYAxisSet_Definitions">
        <Patch>AdditionFor=CPTXYAxisSet</Patch>
      </Class>
      <Class name="CPTXYGraph_Definitions">
        <Patch>AdditionFor=CPTXYGraph</Patch>
      </Class>
      <Class name="CPTXYPlotSpace_Definitions">
        <Patch>AdditionFor=CPTXYPlotSpace</Patch>
      </Class>
      <Class name="CPTXYTheme_Definitions">
        <Patch>AdditionFor=CPTXYTheme</Patch>
      </Class>
      <Class name="NSDecimalNumberExtensions_Definitions">
        <Patch>AdditionFor=NSDecimalNumberExtensions</Patch>
      </Class>
      <Class name="NSExceptionExtensions_Definitions">
        <Patch>AdditionFor=NSExceptionExtensions</Patch>
      </Class>
      <Class name="NSNumberExtensions_Definitions">
        <Patch>AdditionFor=NSNumberExtensions</Patch>
      </Class>
    </Classes>
    <Protocols>
      <Protocol name="CPTAxisDelegate" />
      <Protocol name="CPTBarPlotDataSource" />
      <Protocol name="CPTBarPlotDelegate" />
      <Protocol name="CPTLayoutManager" />
      <Protocol name="CPTLegendDelegate" />
      <Protocol name="CPTPieChartDataSource" />
      <Protocol name="CPTPieChartDelegate" />
      <Protocol name="CPTPlotDataSource">
        <Patch>Methods[DoublesForPlotFieldRecordIndexRange].ReturnType=IntPtr</Patch>
      </Protocol>
      <Protocol name="CPTPlotSpaceDelegate" />
      <Protocol name="CPTResponder" />
      <Protocol name="CPTScatterPlotDataSource" />
      <Protocol name="CPTScatterPlotDelegate" />
    </Protocols>
    <Structures>
      <Structure name="CPTConstraints" />
      <Structure name="CPTContextNode" />
      <Structure name="CPTGradientElement" />
      <Structure name="CPTNumericDataType" />
      <Structure name="CPTRGBAColor" />
    </Structures>
  </Framework>
  <Framework name="Growl" usings="Foundation,AppKit" assembly="Monobjc.Growl">
    <Classes>
      <Class name="GrowlApplicationBridge">
        <Patch>Properties[GrowlDelegate].Type=Id</Patch>
      </Class>
      <Class name="GrowlDefines_Definitions">
        <Replace type="Xhtml">
          <Source><![CDATA[XSTR(]]></Source>
          <With><![CDATA[new NSString(]]></With>
        </Replace>
        <Patch>AdditionFor=GrowlApplicationBridge</Patch>
        <Patch>Constants[XSTR].Generate=false</Patch>
        <Patch>Constants[STRING_TYPE].Generate=false</Patch>
        <Patch>Constants[GROWL_APP_NAME].Type=NSString</Patch>
        <Patch>Constants[GROWL_APP_ID].Type=NSString</Patch>
        <Patch>Constants[GROWL_APP_ICON].Type=NSString</Patch>
        <Patch>Constants[GROWL_NOTIFICATIONS_DEFAULT].Type=NSString</Patch>
        <Patch>Constants[GROWL_NOTIFICATIONS_ALL].Type=NSString</Patch>
        <Patch>Constants[GROWL_NOTIFICATIONS_HUMAN_READABLE_NAMES].Type=NSString</Patch>
        <Patch>Constants[GROWL_NOTIFICATIONS_DESCRIPTIONS].Type=NSString</Patch>
        <Patch>Constants[GROWL_TICKET_VERSION].Type=NSString</Patch>
        <Patch>Constants[GROWL_NOTIFICATION_NAME].Type=NSString</Patch>
        <Patch>Constants[GROWL_NOTIFICATION_TITLE].Type=NSString</Patch>
        <Patch>Constants[GROWL_NOTIFICATION_DESCRIPTION].Type=NSString</Patch>
        <Patch>Constants[GROWL_NOTIFICATION_ICON].Type=NSString</Patch>
        <Patch>Constants[GROWL_NOTIFICATION_APP_ICON].Type=NSString</Patch>
        <Patch>Constants[GROWL_NOTIFICATION_PRIORITY].Type=NSString</Patch>
        <Patch>Constants[GROWL_NOTIFICATION_STICKY].Type=NSString</Patch>
        <Patch>Constants[GROWL_NOTIFICATION_CLICK_CONTEXT].Type=NSString</Patch>
        <Patch>Constants[GROWL_DISPLAY_PLUGIN].Type=NSString</Patch>
        <Patch>Constants[GROWL_NOTIFICATION_IDENTIFIER].Type=NSString</Patch>
        <Patch>Constants[GROWL_APP_PID].Type=NSString</Patch>
        <Patch>Constants[GROWL_NOTIFICATION_PROGRESS].Type=NSString</Patch>
        <Patch>Constants[GROWL_APP_REGISTRATION].Type=NSString</Patch>
        <Patch>Constants[GROWL_APP_REGISTRATION_CONF].Type=NSString</Patch>
        <Patch>Constants[GROWL_NOTIFICATION].Type=NSString</Patch>
        <Patch>Constants[GROWL_SHUTDOWN].Type=NSString</Patch>
        <Patch>Constants[GROWL_PING].Type=NSString</Patch>
        <Patch>Constants[GROWL_PONG].Type=NSString</Patch>
        <Patch>Constants[GROWL_IS_READY].Type=NSString</Patch>
        <Patch>Constants[GROWL_NOTIFICATION_CLICKED].Type=NSString</Patch>
        <Patch>Constants[GROWL_NOTIFICATION_TIMED_OUT].Type=NSString</Patch>
        <Patch>Constants[GROWL_KEY_CLICKED_CONTEXT].Type=NSString</Patch>
        <Patch>Constants[GROWL_REG_DICT_EXTENSION].Type=NSString</Patch>
        <Patch>Constants[GROWL_POSITION_PREFERENCE_KEY].Type=NSString</Patch>
      </Class>
    </Classes>
    <Protocols>
      <Protocol name="GrowlApplicationBridgeDelegate">
        <Patch>DelegateFor=GrowlApplicationBridge</Patch>
        <Patch>DelegateProperty=GrowlDelegate</Patch>
      </Protocol>
      <Protocol name="GrowlApplicationBridgeInstallationDelegate">
      </Protocol>
    </Protocols>
  </Framework>
  <Framework name="SM2DGraphView" usings="Foundation,AppKit,ApplicationServices" assembly="Monobjc.SM2DGraphView">
    <Classes>
      <Class name="SM2DGraphView">
        <Patch>BaseType=NSView</Patch>
        <Patch>Methods[SetLabelForAxis].Parameters[inAxis].Type=SM2DGraphAxis</Patch>
        <Patch>Methods[LabelForAxis].Parameters[inAxis].Type=SM2DGraphAxis</Patch>
        <Patch>Methods[SetNumberOfTickMarksForAxis].Parameters[inAxis].Type=SM2DGraphAxis</Patch>
        <Patch>Methods[NumberOfTickMarksForAxis].Parameters[inAxis].Type=SM2DGraphAxis</Patch>
        <Patch>Methods[SetNumberOfMinorTickMarksForAxis].Parameters[inAxis].Type=SM2DGraphAxis</Patch>
        <Patch>Methods[NumberOfMinorTickMarksForAxis].Parameters[inAxis].Type=SM2DGraphAxis</Patch>
        <Patch>Methods[SetTickMarkPositionForAxis].Parameters[inAxis].Type=SM2DGraphAxis</Patch>
        <Patch>Methods[TickMarkPositionForAxis].Parameters[inAxis].Type=SM2DGraphAxis</Patch>
        <Patch>Methods[SetAxisInsetForAxis].Parameters[inAxis].Type=SM2DGraphAxis</Patch>
        <Patch>Methods[AxisInsetForAxis].Parameters[inAxis].Type=SM2DGraphAxis</Patch>
        <Patch>Methods[SetDrawsLineAtZeroForAxis].Parameters[inAxis].Type=SM2DGraphAxis</Patch>
        <Patch>Methods[DrawsLineAtZeroForAxis].Parameters[inAxis].Type=SM2DGraphAxis</Patch>
        <Patch>Properties[Delegate].Type=Id</Patch>
        <Patch>Constants[delegate].Generate=false</Patch>
        <Patch>Constants[dataSource].Generate=false</Patch>
        <Patch>Constants[_SM2DGraphView_Private].Generate=false</Patch>
        <Replace type="Generated">
          <Source>public virtual NSInteger Tag</Source>
          <With>public new NSInteger Tag</With>
        </Replace>
      </Class>
      <Class name="SMPieChartView">
        <Patch>BaseType=NSView</Patch>
        <Patch>Properties[Delegate].Type=Id</Patch>
        <Patch>Properties[LabelPosition].Type=SMLabelPosition</Patch>
        <Patch>Properties[Tag].Type=NSInteger</Patch>
        <Patch>Constants[delegate].Generate=false</Patch>
        <Patch>Constants[dataSource].Generate=false</Patch>
        <Patch>Constants[_SMPieChartView_Private].Generate=false</Patch>
        <Replace type="Generated">
          <Source>public virtual NSInteger Tag</Source>
          <With>public new NSInteger Tag</With>
        </Replace>
      </Class>
      <Class name="SM2DGraphView_Definitions">
        <Patch>AdditionFor=SM2DGraphView</Patch>
        <Patch>Constants[SM2D_EPSILON].Generate=false</Patch>
        <Patch>Constants[CGFloatValue].Generate=false</Patch>
        <Patch>Constants[setCGFloatValue].Generate=false</Patch>
        <Patch>Constants[CGFloatRound].Generate=false</Patch>
        <Patch>Constants[CGFloatAbs].Generate=false</Patch>
        <Patch>Constants[CGFloatCeil].Generate=false</Patch>
        <Patch>Constants[CGFloatFloor].Generate=false</Patch>
        <Patch>Constants[CGFloatTan].Generate=false</Patch>
        <Patch>Constants[CGFloatSin].Generate=false</Patch>
        <Patch>Constants[CGFloatCos].Generate=false</Patch>
        <Patch>Constants[CGFloatMod].Generate=false</Patch>
        <Patch>Enumerations[SM2DGraphLineDashStyleEnum].Name=SM2DGraphLineDashStyle</Patch>
        <Patch>Enumerations[SM2DGraphLineDashStyle].BaseType=int</Patch>
        <Patch>Enumerations[SM2DGraphSymbolTypeEnum].Name=SM2DGraphSymbolType</Patch>
        <Patch>Enumerations[SM2DGraphSymbolType].BaseType=int</Patch>
        <Patch>Enumerations[SM2DGraphLineWidthEnum].Name=SM2DGraphLineWidth</Patch>
        <Patch>Enumerations[SM2DGraphLineWidth].BaseType=int</Patch>
        <Patch>Enumerations[SM2DGraphAxisEnum].Name=SM2DGraphAxis</Patch>
        <Patch>Enumerations[SM2DGraphAxis].BaseType=int</Patch>
      </Class>
      <Class name="SMPieChartView_Definitions">
        <Patch>AdditionFor=SMPieChartView</Patch>
        <Patch>Enumerations[SMTitlePosition].BaseType=int</Patch>
        <Patch>Enumerations[SMLabelPosition].BaseType=int</Patch>
      </Class>
    </Classes>
    <Protocols>
      <Protocol name="SM2DGraphDataSource">
        <Patch>Methods[TwoDGraphViewMaximumValueForLineIndexForAxis].Parameters[inAxis].Type=SM2DGraphAxis</Patch>
        <Patch>Methods[TwoDGraphViewMinimumValueForLineIndexForAxis].Parameters[inAxis].Type=SM2DGraphAxis</Patch>
      </Protocol>
      <Protocol name="SM2DGraphDelegate">
        <Patch>Methods[TwoDGraphViewLabelForTickMarkIndexForAxisDefaultLabel].Parameters[inAxis].Type=SM2DGraphAxis</Patch>
      </Protocol>
      <Protocol name="SMPieChartDataSource">
      </Protocol>
      <Protocol name="SMPieChartDelegate">
      </Protocol>
    </Protocols>
  </Framework>
  <Framework name="Sparkle" usings="Foundation,AppKit" assembly="Monobjc.Sparkle">
    <Classes>
      <Class name="SUAppcast">
        <Patch>Constants[items].Generate=false</Patch>
        <Patch>Constants[userAgentString].Generate=false</Patch>
        <Patch>Constants[delegate].Generate=false</Patch>
        <Patch>Constants[incrementalData].Generate=false</Patch>
      </Class>
      <Class name="SUAppcastItem">
        <Patch>Constants[title].Generate=false</Patch>
        <Patch>Constants[date].Generate=false</Patch>
        <Patch>Constants[itemDescription].Generate=false</Patch>
        <Patch>Constants[releaseNotesURL].Generate=false</Patch>
        <Patch>Constants[DSASignature].Generate=false</Patch>
        <Patch>Constants[minimumSystemVersion].Generate=false</Patch>
        <Patch>Constants[fileURL].Generate=false</Patch>
        <Patch>Constants[versionString].Generate=false</Patch>
        <Patch>Constants[displayVersionString].Generate=false</Patch>
        <Patch>Constants[propertiesDictionary].Generate=false</Patch>
      </Class>
      <Class name="SUUpdater">
        <Patch>Constants[checkTimer].Generate=false</Patch>
        <Patch>Constants[driver].Generate=false</Patch>
        <Patch>Constants[host].Generate=false</Patch>
        <Patch>Constants[delegate].Generate=false</Patch>
      </Class>
    </Classes>
    <Protocols>
      <Protocol name="SUVersionComparison">
      </Protocol>
      <Protocol name="SUAppcastDelegate">
        <Patch>DelegateFor=SUAppcast</Patch>
        <Patch>DelegateProperty=Delegate</Patch>
      </Protocol>
      <Protocol name="SUUpdaterDelegate">
        <Patch>DelegateFor=SUUpdater</Patch>
        <Patch>DelegateProperty=Delegate</Patch>
      </Protocol>
    </Protocols>
    <Structures />
  </Framework>

</Entities>
