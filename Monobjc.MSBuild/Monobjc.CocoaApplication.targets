<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

	<!-- Import the Monobjc Common targets -->
	<Import Project="$(MSBuildBinPath)\Monobjc.Common.targets" />

	<!--
	========================================
	Shared part
	========================================
	-->

	<!-- Define public properties -->  
	<PropertyGroup>
		<AppBundlePath>$(OutputPath)\$(TargetName).app</AppBundlePath>
		<ContentsPath>$(AppBundlePath)\Contents</ContentsPath>
		<MacOSPath>$(ContentsPath)\MacOS</MacOSPath>
		<ResourcesPath>$(ContentsPath)\Resources</ResourcesPath>
		<FrameworksPath>$(ContentsPath)\Frameworks</FrameworksPath>
		<InfoPListPath>Info.plist</InfoPListPath>
		<Entitlements>App.entitlements</Entitlements>
		<ProductDefinition>Definition.plist</ProductDefinition>
	</PropertyGroup>

	<!-- Define defaults for embedding -->    
	<PropertyGroup>
		<UseCompression Condition="'$(UseCompression)' == ''">true</UseCompression>
		<UseReceigen Condition="'$(UseReceigen)' == ''">false</UseReceigen>
		<NativeCompiler Condition="'$(NativeCompiler)' == ''">cc</NativeCompiler>
	</PropertyGroup>
	
	<!-- Define private properties -->  
	<PropertyGroup>
		<_MainAssembly>$(OutputPath)\$(TargetFileName)</_MainAssembly>
		<_NativeWorkingPath>$(OutputPath)\Embed</_NativeWorkingPath>
		<_ReceigenPath>\Applications\Receigen.app\Contents\MacOS\Receigen</_ReceigenPath>
	</PropertyGroup>

	<!-- 
	Create the Cocoa application bundle structure
	-->
	<Target Name="CreateCocoaBundleStructure" DependsOnTargets="Build">
		<MakeDir Directories="$(MacOSPath)" />
		<MakeDir Directories="$(ResourcesPath)" />
		<MakeDir Directories="$(FrameworksPath)" Condition=" '$(EmbeddedFrameworks)' != '' " />
		
		<GenerateInfoPList MainAssembly="$(_MainAssembly)" ToDirectory="$(ContentsPath)" MinRequiredOSVersion="$(MacOSVersion)" Icon="$(BundleIcon)" MainNibFile="$(MainNibFile)" Condition=" Exists('$(InfoPListPath)') " Template="$(InfoPListPath)" />
		<GenerateInfoPList MainAssembly="$(_MainAssembly)" ToDirectory="$(ContentsPath)" MinRequiredOSVersion="$(MacOSVersion)" Icon="$(BundleIcon)" MainNibFile="$(MainNibFile)" Condition=" !Exists('$(InfoPListPath)') " />
	</Target>
  
	<!--
	Call the Receigen application to generate the receipt validation code
	-->
	<Target Name="Receigen" DependsOnTargets="CreateCocoaBundleStructure">
		<CallReceigen Path="$(_ReceigenPath)" InfoPList="$(ContentsPath)/$(InfoPListPath)" ToDirectory="$(_NativeWorkingPath)" Condition=" $(UseReceigen) And Exists('$(_ReceigenPath)') "/>
	</Target>

	<!--
	========================================
	BundleManaged part
	========================================
	-->

	<PropertyGroup>
		<BundleManagedDependsOn>
			BeforeBundleManaged;
			CoreBundleManaged;
			AfterBundleManaged;
		</BundleManagedDependsOn>
	</PropertyGroup>

	<Target Name="BeforeBundleManaged"/>
	<Target Name="AfterBundleManaged"/>
	<Target Name="BundleManaged" DependsOnTargets="$(BundleManagedDependsOn)"/>
  
	<PropertyGroup>
		<CoreBundleManagedDependsOn>
			Build;
			CreateCocoaBundleStructure;
		</CoreBundleManagedDependsOn>
	</PropertyGroup>

	<!--
	Create a managed application that needs the .NET runtime to run
	-->
	<Target Name="CoreBundleManaged" DependsOnTargets="$(CoreBundleManagedDependsOn)">
		<CopyRuntime ApplicationName="$(TargetName)" TargetOSVersion="$(MacOSVersion)" ToDirectory="$(MacOSPath)" />
		
		<CompileXib XibFiles="@(Page)" ToDirectory="$(ResourcesPath)" />
		<CompileXib XibFiles="@(InterfaceDefinition)" ToDirectory="$(ResourcesPath)" />
		
		<Copy SkipUnchangedFiles="true" SourceFiles="$(_MainAssembly)" DestinationFolder="$(ResourcesPath)" />
		<Copy SkipUnchangedFiles="true" SourceFiles="$(_MainAssembly).mdb" DestinationFolder="$(ResourcesPath)" Condition=" Exists('$(_MainAssembly).mdb') " />
		<Copy SkipUnchangedFiles="true" SourceFiles="@(ReferenceCopyLocalPaths)" DestinationFolder="$(ResourcesPath)" />
		<Copy SkipUnchangedFiles="true" SourceFiles="@(Content)" DestinationFiles="@(Content->'$(ResourcesPath)\%(Identity)')" />
		<EncryptFiles SourceFiles="@(EncryptedContent)" DestinationFiles="@(EncryptedContent->'$(ResourcesPath)\%(Identity)')" EncryptionSeed="$(EncryptionSeed)" />
		
		<CombineArtwork DoCombine="$(CombineArtwork)" Directory="$(ResourcesPath)" />
		
		<CodeSigning Bundle="$(AppBundlePath)" Identity="$(SigningIdentity)" UseEntitlements="$(UseEntitlements)" Entitlements="$(Entitlements)" Condition=" '$(SigningIdentity)' != '' " />
	</Target>
  
	<!--
	========================================
	BundleNative part
	========================================
	-->

	<PropertyGroup>
		<BundleNativeDependsOn>
			BeforeBundleNative;
			CoreBundleNative;
			AfterBundleNative;
		</BundleNativeDependsOn>
	</PropertyGroup>

	<Target Name="BeforeBundleNative"/>
	<Target Name="AfterBundleNative"/>
	<Target Name="BundleNative" DependsOnTargets="$(BundleNativeDependsOn)"/>

	<PropertyGroup>
		<CoreBundleNativeDependsOn>
			Build;
			CreateCocoaBundleStructure;
			Receigen;
		</CoreBundleNativeDependsOn>
	</PropertyGroup>

	<!--
	Create a self-contained application for redistribution
	-->
	<Target Name="CoreBundleNative" DependsOnTargets="$(CoreBundleNativeDependsOn)">
	
		<EmbedApplication
			ApplicationName="$(TargetName)"
			Compress="$(UseCompression)"
			ExcludedAssemblies="@(ExcludedAssemblies)"
			IncludedAssemblies="@(AdditionalAssemblies)"
			IncludedLibraries="@(AdditionalLibraries)"
			MainAssembly="$(_MainAssembly)"
			NativeCompiler="$(NativeCompiler)"
			SearchDirectories="@(ResolvedFiles->'%(RootDir)%(Directory)')"
			TargetArchitecture="$(MacOSArch)"
			TargetOSVersion="$(MacOSVersion)"
			ToDirectory="$(MacOSPath)"
			UseReceigen="$(UseReceigen)"
			WorkingDirectory="$(_NativeWorkingPath)"/>

		<CompileXib XibFiles="@(Page)" ToDirectory="$(ResourcesPath)" />
		<CompileXib XibFiles="@(InterfaceDefinition)" ToDirectory="$(ResourcesPath)" />

	    <Copy SkipUnchangedFiles="true" SourceFiles="@(Content)" DestinationFiles="@(Content->'$(ResourcesPath)\%(Identity)')" />
		<EncryptFiles SourceFiles="@(EncryptedContent)" DestinationFiles="@(EncryptedContent->'$(ResourcesPath)\%(Identity)')" EncryptionSeed="$(EncryptionSeed)" />

		<CombineArtwork DoCombine="$(CombineArtwork)" Directory="$(ResourcesPath)" />

	    <CopyFrameworks Frameworks="$(EmbeddedFrameworks)" ToDirectory="$(FrameworksPath)" />

		<CodeSigning Bundle="$(AppBundlePath)" Identity="$(SigningIdentity)" UseEntitlements="$(UseEntitlements)" Entitlements="$(Entitlements)" Condition=" '$(SigningIdentity)' != '' " />
	
	    <CreateItem Include="$(MacOSPath)\*.dylib">
	      <Output TaskParameter="Include" ItemName="_NativeLibraries" />
	    </CreateItem>
		<CodeSigning Targets="@(_NativeLibraries)" Identity="$(SigningIdentity)" Condition=" '$(SigningIdentity)' != '' " />
	</Target>
  
	<!--
	========================================
	Packaging part
	========================================
	-->

	<PropertyGroup>
		<PackageDependsOn>
			BeforePackage;
			CorePackage;
			AfterPackage;
		</PackageDependsOn>
	</PropertyGroup>

	<Target Name="BeforePackage"/>
	<Target Name="AfterPackage"/>
	<Target Name="Package" DependsOnTargets="$(PackageDependsOn)"/>
  
	<PropertyGroup>
		<CorePackageDependsOn>
			BundleNative;
		</CorePackageDependsOn>
	</PropertyGroup>

	<!--
	Create a package for application installation
	-->
	<Target Name="CorePackage" DependsOnTargets="$(CorePackageDependsOn)">
		<ProductBuilding Bundle="$(AppBundlePath)" Identity="$(ArchiveIdentity)" ProductDefinition="$(ProductDefinition)" Condition=" '$(Archive)' == 'True' " />
	</Target>
  
</Project>
